{"mappings":"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","sources":["src/js/graph.js","src/js/import_data.js","src/js/particular_data.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","src/js/exchange_list.js","src/js/select.js","src/js/math.js","src/js/headerData.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","src/js/onClickHeaderButton.js","src/index.js","src/js/newsParagraph.js"],"sourcesContent":["import { historicalStockData, dailyStockData, createDate, interdayData } from \"./import_data.js\";\nimport { particularData } from \"./particular_data.js\";\n\nexport let newDataChart\n\nexport function lineChart(xAxis, yAxis, ticker) {\n  const ctx = document.getElementById('myChart');\n\n  newDataChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: xAxis,\n      datasets: [{\n        label: ticker,\n        data: yAxis,\n        borderWidth: 3,\n        pointRadius: 0,\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n    }\n  });\n  return newDataChart\n}\n\n//dodawanie danych do wykresu\n\nexport function addData(chart, label, newData) {\n  chart.data.labels.push(label);\n  chart.data.datasets.forEach((dataset) => {\n    dataset.data.push(newData);\n  });\n  chart.update();\n}\n  //usuwanie danych z wykresu\nexport function updateChart(chart,newXAxis, newYAxis) {\n  chart.data.labels = newYAxis\n  chart.data.datasets[0].data=newXAxis\n  chart.update();\n}\n\nexport function graphDelete(newDataChart) {\n  newDataChart.destroy()\n}\n\n// pobranie danych do wykresu\n\nexport function createAxis(historicalData, dailyData) {\n   // Zainicjowanie listy danych dla osi x i y\n      let chartData = {\n        yAxis: [],\n        xAxis: []\n  };\n      // Wstawienie danych do listy danych osi x i y\n  for (let i = 0; i < historicalData.length; i++) {\n        if (historicalData[i].close !=='NA')\n            chartData.yAxis.push(historicalData[i].close);\n            chartData.xAxis.push(historicalData[i].date);\n  }\n  if (historicalData[historicalData.length - 1].date != dailyData.realTimeDay) {\n    if (dailyData.close !=='NA')\n    chartData.yAxis.push(dailyData.close);\n    chartData.xAxis.push(dailyData.realTimeDay);\n  }\n  else{console.log('brak aktualnych danych')}\n      return chartData;\n    }\n\nexport function createGraph(index, token, startDate, endDate, ticker) {\n historicalStockData(index, token, startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n  .then(data => {\n    newDataChart=data\n  })\n  \n}\n\nexport function hideChart() {\n  newDataChart.data.datasets[1].borderWidth = 0\n  newDataChart.data.datasets[2].borderWidth = 0\n  newDataChart.data.datasets[3].borderWidth = 0\n  newDataChart.update()\n}\n\nexport function showChart() {\n  newDataChart.data.datasets[1].borderWidth = 1\n  newDataChart.data.datasets[2].borderWidth = 1\n  newDataChart.data.datasets[3].borderWidth = 1\n  newDataChart.update()\n}\n\n"," //pobieranie danych historycznych\nexport function historicalStockData(stockIndex,apiKey, startDate, endDate) {\n  // url dla danych historycznych\n  const url = `https://eodhd.com/api/eod/${stockIndex}?from=${startDate}&to=${endDate}&period=d&api_token=${apiKey}&fmt=json`;  \n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let historicalData = data;\n      return historicalData\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie danych codziennych\nexport function dailyStockData(stockIndex,apiKey) {\n  // url dla danych codziennych\n  const url = `https://eodhd.com/api/real-time/${stockIndex}?api_token=${apiKey}&fmt=json`;\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let realTimeDay= new Date(data.timestamp * 1000);\n      realTimeDay = createDate(realTimeDay)\n      close = data.close\n      let change_p = data.change_p\n      return { realTimeDay, close, change_p };\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function multipleDailyData(tickersList, API) {\n  let UrlTickerData = ''\n  for (let i=0; i<tickersList.length; i++){\n    if (i === 0){\n      UrlTickerData = tickersList[i]+'?s='\n    }\n    else if (i === 1){\n      UrlTickerData = UrlTickerData + `${tickersList[i]}`\n    }\n    else {\n      UrlTickerData = UrlTickerData + `,${tickersList[i]}`\n    }\n  }\n  const url = `https://eodhd.com/api/real-time/${UrlTickerData}&api_token=${API}&fmt=json`\n  \n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      return data;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie listy obsługiwanych giełd\nexport function exchangeList(apiKey) {\n  const url = `https://eodhd.com/api/exchanges-list/?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeData = data;\n      return exchangeData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function exchangeSymbolList(exchange,apiKey) {\n  const url = `https://eodhd.com/api/exchange-symbol-list/${exchange}?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeSymbols = data;\n      return exchangeSymbols;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n// pobieranie danych historycznych z interwałem 5m\nexport function interdayData(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/intraday/${stockIndex}?interval=5m&api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let interdayData = data;\n      return interdayData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function news(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/news?${stockIndex}S&offset=0&limit=10&api_token=${apiKey}&fmt=json`\n  return fetch(url)\n  .then(response => {\n    // Sprawdzamy, czy odpowiedź jest poprawna\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    // Parsujemy odpowiedź jako JSON i zwracamy ją\n    return response.json();\n  })\n  .then(data => {\n    return data\n  })\n  .catch(error => {\n    // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n    console.error('There was a problem with your fetch operation:', error);\n  });\n}\n\n\n\nexport function createDate(date) {\n  const year = date.getFullYear();\n  const month = ('0' + (date.getMonth() + 1)).slice(-2); // Dodanie 1, bo getMonth() zwraca miesiące od 0 do 11, oraz formatowanie do dwóch cyfr\n  const day = ('0' + date.getDate()).slice(-2); // Formatowanie do dwóch cyfr\n  date = `${year}-${month}-${day}`;\n  return date\n}\n\n\n\n","export function particularData(id, stockIndex, currentlyData, historicalData) {\n    let container = document.getElementById(`${id}`);\n    container.innerHTML=''\n    let map = `<div class='current-Data-Div'>\n    <p class='pChange'>${stockIndex} <span>${currentlyData.change_p}%</span></p>\n        <div class='ticker-data'>\n            <div class='historical-data'>\n                <p class='historical-paragraph-date'>${historicalData[0].date}</p>\n                <p class='historical-paragraph'>Open: ${historicalData[0].open}</p>\n                <p class='historical-paragraph'>Close: ${historicalData[0].close}</p>\n                <p class='historical-paragraph'>High: ${historicalData[0].high}</p>\n                <p class='historical-paragraph'>Low: ${historicalData[0].low}</p>\n                <p class='historical-paragraph'>Volume: ${historicalData[0].volume}</p>\n            </div>\n            <div class='historical-data'>\n                <p class='historical-paragraph-date'> ${historicalData[historicalData.length-1].date}</p>\n                <p class='historical-paragraph'>Open: ${historicalData[historicalData.length-1].open}</p>\n                <p class='historical-paragraph'>Close: ${historicalData[historicalData.length-1].close}</p>\n                <p class='historical-paragraph'>High: ${historicalData[historicalData.length-1].high}</p>\n                <p class='historical-paragraph'>Low: ${historicalData[historicalData.length-1].low}</p>\n                <p class='historical-paragraph'>Volume: ${historicalData[historicalData.length-1].volume}</p>\n            </div>\n        </div> \n    </div>`\n\n    container.insertAdjacentHTML('beforeEnd', map)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export const exchangeListJson= [\r\n  {\r\n    \"Name\": \"USA Stocks\",\r\n    \"Code\": \"US\",\r\n    \"OperatingMIC\": \"XNAS, XNYS\",\r\n    \"Country\": \"USA\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"US\",\r\n    \"CountryISO3\": \"USA\"\r\n  },\r\n  {\r\n    \"Name\": \"London Exchange\",\r\n    \"Code\": \"LSE\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"GBP\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Toronto Exchange\",\r\n    \"Code\": \"TO\",\r\n    \"OperatingMIC\": \"XTSE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"NEO Exchange\",\r\n    \"Code\": \"NEO\",\r\n    \"OperatingMIC\": \"NEOE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"TSX Venture Exchange\",\r\n    \"Code\": \"V\",\r\n    \"OperatingMIC\": \"XTSX\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"Berlin Exchange\",\r\n    \"Code\": \"BE\",\r\n    \"OperatingMIC\": \"XBER\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hamburg Exchange\",\r\n    \"Code\": \"HM\",\r\n    \"OperatingMIC\": \"XHAM\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"XETRA Stock Exchange\",\r\n    \"Code\": \"XETRA\",\r\n    \"OperatingMIC\": \"XETR\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Dusseldorf Exchange\",\r\n    \"Code\": \"DU\",\r\n    \"OperatingMIC\": \"XDUS\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hanover Exchange\",\r\n    \"Code\": \"HA\",\r\n    \"OperatingMIC\": \"XHAN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Munich Exchange\",\r\n    \"Code\": \"MU\",\r\n    \"OperatingMIC\": \"XMUN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Stuttgart Exchange\",\r\n    \"Code\": \"STU\",\r\n    \"OperatingMIC\": \"XSTU\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Frankfurt Exchange\",\r\n    \"Code\": \"F\",\r\n    \"OperatingMIC\": \"XFRA\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Luxembourg Stock Exchange\",\r\n    \"Code\": \"LU\",\r\n    \"OperatingMIC\": \"XLUX\",\r\n    \"Country\": \"Luxembourg\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"LU\",\r\n    \"CountryISO3\": \"LUX\"\r\n  },\r\n  {\r\n    \"Name\": \"Vienna Exchange\",\r\n    \"Code\": \"VI\",\r\n    \"OperatingMIC\": \"XWBO\",\r\n    \"Country\": \"Austria\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"AT\",\r\n    \"CountryISO3\": \"AUT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Paris\",\r\n    \"Code\": \"PA\",\r\n    \"OperatingMIC\": \"XPAR\",\r\n    \"Country\": \"France\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FR\",\r\n    \"CountryISO3\": \"FRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Brussels\",\r\n    \"Code\": \"BR\",\r\n    \"OperatingMIC\": \"XBRU\",\r\n    \"Country\": \"Belgium\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"BE\",\r\n    \"CountryISO3\": \"BEL\"\r\n  },\r\n  {\r\n    \"Name\": \"Madrid Exchange\",\r\n    \"Code\": \"MC\",\r\n    \"OperatingMIC\": \"BMEX\",\r\n    \"Country\": \"Spain\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"ES\",\r\n    \"CountryISO3\": \"ESP\"\r\n  },\r\n  {\r\n    \"Name\": \"SIX Swiss Exchange\",\r\n    \"Code\": \"SW\",\r\n    \"OperatingMIC\": \"XSWX\",\r\n    \"Country\": \"Switzerland\",\r\n    \"Currency\": \"CHF\",\r\n    \"CountryISO2\": \"CH\",\r\n    \"CountryISO3\": \"CHE\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Lisbon\",\r\n    \"Code\": \"LS\",\r\n    \"OperatingMIC\": \"XLIS\",\r\n    \"Country\": \"Portugal\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"PT\",\r\n    \"CountryISO3\": \"PRT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Amsterdam\",\r\n    \"Code\": \"AS\",\r\n    \"OperatingMIC\": \"XAMS\",\r\n    \"Country\": \"Netherlands\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"NL\",\r\n    \"CountryISO3\": \"NLD\"\r\n  },\r\n  {\r\n    \"Name\": \"Iceland Exchange\",\r\n    \"Code\": \"IC\",\r\n    \"OperatingMIC\": \"XICE\",\r\n    \"Country\": \"Iceland\",\r\n    \"Currency\": \"ISK\",\r\n    \"CountryISO2\": \"IS\",\r\n    \"CountryISO3\": \"ISL\"\r\n  },\r\n  {\r\n    \"Name\": \"Irish Exchange\",\r\n    \"Code\": \"IR\",\r\n    \"OperatingMIC\": \"XDUB\",\r\n    \"Country\": \"Ireland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"IE\",\r\n    \"CountryISO3\": \"IRL\"\r\n  },\r\n  {\r\n    \"Name\": \"Helsinki Exchange\",\r\n    \"Code\": \"HE\",\r\n    \"OperatingMIC\": \"XHEL\",\r\n    \"Country\": \"Finland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FI\",\r\n    \"CountryISO3\": \"FIN\"\r\n  },\r\n  {\r\n    \"Name\": \"Oslo Stock Exchange\",\r\n    \"Code\": \"OL\",\r\n    \"OperatingMIC\": \"XOSL\",\r\n    \"Country\": \"Norway\",\r\n    \"Currency\": \"NOK\",\r\n    \"CountryISO2\": \"NO\",\r\n    \"CountryISO3\": \"NOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Copenhagen Exchange\",\r\n    \"Code\": \"CO\",\r\n    \"OperatingMIC\": \"XCSE\",\r\n    \"Country\": \"Denmark\",\r\n    \"Currency\": \"DKK\",\r\n    \"CountryISO2\": \"DK\",\r\n    \"CountryISO3\": \"DNK\"\r\n  },\r\n  {\r\n    \"Name\": \"Stockholm Exchange\",\r\n    \"Code\": \"ST\",\r\n    \"OperatingMIC\": \"XSTO\",\r\n    \"Country\": \"Sweden\",\r\n    \"Currency\": \"SEK\",\r\n    \"CountryISO2\": \"SE\",\r\n    \"CountryISO3\": \"SWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Victoria Falls Stock Exchange\",\r\n    \"Code\": \"VFEX\",\r\n    \"OperatingMIC\": \"VFEX\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Zimbabwe Stock Exchange\",\r\n    \"Code\": \"XZIM\",\r\n    \"OperatingMIC\": \"XZIM\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Lusaka Stock Exchange\",\r\n    \"Code\": \"LUSE\",\r\n    \"OperatingMIC\": \"XLUS\",\r\n    \"Country\": \"Zambia \",\r\n    \"Currency\": \"ZMW\",\r\n    \"CountryISO2\": \"ZM\",\r\n    \"CountryISO3\": \"ZMB\"\r\n  },\r\n  {\r\n    \"Name\": \"Uganda Securities Exchange\",\r\n    \"Code\": \"USE\",\r\n    \"OperatingMIC\": \"XUGA\",\r\n    \"Country\": \"Uganda\",\r\n    \"Currency\": \"UGX\",\r\n    \"CountryISO2\": \"UG\",\r\n    \"CountryISO3\": \"UGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Dar es Salaam Stock Exchange\",\r\n    \"Code\": \"DSE\",\r\n    \"OperatingMIC\": \"XDAR\",\r\n    \"Country\": \"Tanzania\",\r\n    \"Currency\": \"TZS\",\r\n    \"CountryISO2\": \"TZ\",\r\n    \"CountryISO3\": \"TZA\"\r\n  },\r\n  {\r\n    \"Name\": \"Prague Stock Exchange \",\r\n    \"Code\": \"PR\",\r\n    \"OperatingMIC\": \"XPRA\",\r\n    \"Country\": \"Czech Republic\",\r\n    \"Currency\": \"CZK\",\r\n    \"CountryISO2\": \"CZ\",\r\n    \"CountryISO3\": \"CZE\"\r\n  },\r\n  {\r\n    \"Name\": \"Rwanda Stock Exchange\",\r\n    \"Code\": \"RSE\",\r\n    \"OperatingMIC\": \"RSEX\",\r\n    \"Country\": \"Rwanda\",\r\n    \"Currency\": \"RWF \",\r\n    \"CountryISO2\": \"RW\",\r\n    \"CountryISO3\": \"RWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Botswana Stock Exchange \",\r\n    \"Code\": \"XBOT\",\r\n    \"OperatingMIC\": \"XBOT\",\r\n    \"Country\": \"Botswana\",\r\n    \"Currency\": \"BWP\",\r\n    \"CountryISO2\": \"BW\",\r\n    \"CountryISO3\": \"BWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Egyptian Exchange\",\r\n    \"Code\": \"EGX\",\r\n    \"OperatingMIC\": \"NILX\",\r\n    \"Country\": \"Egypt\",\r\n    \"Currency\": \"EGP\",\r\n    \"CountryISO2\": \"EG\",\r\n    \"CountryISO3\": \"EGY\"\r\n  },\r\n  {\r\n    \"Name\": \"Nigerian Stock Exchange\",\r\n    \"Code\": \"XNSA\",\r\n    \"OperatingMIC\": \"XNSA\",\r\n    \"Country\": \"Nigeria\",\r\n    \"Currency\": \"NGN\",\r\n    \"CountryISO2\": \"NG\",\r\n    \"CountryISO3\": \"NGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Ghana Stock Exchange\",\r\n    \"Code\": \"GSE\",\r\n    \"OperatingMIC\": \"XGHA\",\r\n    \"Country\": \"Ghana\",\r\n    \"Currency\": \"GHS\",\r\n    \"CountryISO2\": \"GH\",\r\n    \"CountryISO3\": \"GHA\"\r\n  },\r\n  {\r\n    \"Name\": \"Malawi Stock Exchange\",\r\n    \"Code\": \"MSE\",\r\n    \"OperatingMIC\": \"XMSW\",\r\n    \"Country\": \"Malawi\",\r\n    \"Currency\": \"MWK\",\r\n    \"CountryISO2\": \"MW\",\r\n    \"CountryISO3\": \"MWI\"\r\n  },\r\n  {\r\n    \"Name\": \"Regional Securities Exchange\",\r\n    \"Code\": \"BRVM\",\r\n    \"OperatingMIC\": \"XBRV\",\r\n    \"Country\": \"Ivory Coast\",\r\n    \"Currency\": \"XOF\",\r\n    \"CountryISO2\": \"CI\",\r\n    \"CountryISO3\": \"CIV\"\r\n  },\r\n  {\r\n    \"Name\": \"Nairobi Securities Exchange\",\r\n    \"Code\": \"XNAI\",\r\n    \"OperatingMIC\": \"XNAI\",\r\n    \"Country\": \"Kenya\",\r\n    \"Currency\": \"KES\",\r\n    \"CountryISO2\": \"KE\",\r\n    \"CountryISO3\": \"KEN\"\r\n  },\r\n  {\r\n    \"Name\": \"Casablanca Stock Exchange\",\r\n    \"Code\": \"BC\",\r\n    \"OperatingMIC\": \"XCAS\",\r\n    \"Country\": \"Morocco\",\r\n    \"Currency\": \"MAD\",\r\n    \"CountryISO2\": \"MA\",\r\n    \"CountryISO3\": \"MAR\"\r\n  },\r\n  {\r\n    \"Name\": \"Stock Exchange of Mauritius\",\r\n    \"Code\": \"SEM\",\r\n    \"OperatingMIC\": \"XMAU\",\r\n    \"Country\": \"Mauritius\",\r\n    \"Currency\": \"MUR\",\r\n    \"CountryISO2\": \"MU\",\r\n    \"CountryISO3\": \"MUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Tel Aviv Stock Exchange\",\r\n    \"Code\": \"TA\",\r\n    \"OperatingMIC\": \"XTAE\",\r\n    \"Country\": \"Israel\",\r\n    \"Currency\": \"ILS\",\r\n    \"CountryISO2\": \"IL\",\r\n    \"CountryISO3\": \"ISR\"\r\n  },\r\n  {\r\n    \"Name\": \"Korea Stock Exchange\",\r\n    \"Code\": \"KO\",\r\n    \"OperatingMIC\": \"XKRX\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"KOSDAQ\",\r\n    \"Code\": \"KQ\",\r\n    \"OperatingMIC\": \"XKOS\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Budapest Stock Exchange\",\r\n    \"Code\": \"BUD\",\r\n    \"OperatingMIC\": \"XBUD\",\r\n    \"Country\": \"Hungary\",\r\n    \"Currency\": \"HUF\",\r\n    \"CountryISO2\": \"HU\",\r\n    \"CountryISO3\": \"HUN\"\r\n  },\r\n  {\r\n    \"Name\": \"Warsaw Stock Exchange\",\r\n    \"Code\": \"WAR\",\r\n    \"OperatingMIC\": \"XWAR\",\r\n    \"Country\": \"Poland\",\r\n    \"Currency\": \"PLN\",\r\n    \"CountryISO2\": \"PL\",\r\n    \"CountryISO3\": \"POL\"\r\n  },\r\n  {\r\n    \"Name\": \"Philippine Stock Exchange\",\r\n    \"Code\": \"PSE\",\r\n    \"OperatingMIC\": \"XPHS\",\r\n    \"Country\": \"Philippines\",\r\n    \"Currency\": \"PHP\",\r\n    \"CountryISO2\": \"PH\",\r\n    \"CountryISO3\": \"PHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Karachi Stock Exchange\",\r\n    \"Code\": \"KAR\",\r\n    \"OperatingMIC\": \"XKAR\",\r\n    \"Country\": \"Pakistan\",\r\n    \"Currency\": \"PKR\",\r\n    \"CountryISO2\": \"PK\",\r\n    \"CountryISO3\": \"PAK\"\r\n  },\r\n  {\r\n    \"Name\": \"Australian Securities Exchange\",\r\n    \"Code\": \"AU\",\r\n    \"OperatingMIC\": \"XASX\",\r\n    \"Country\": \"Australia\",\r\n    \"Currency\": \"AUD\",\r\n    \"CountryISO2\": \"AU\",\r\n    \"CountryISO3\": \"AUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Johannesburg Exchange\",\r\n    \"Code\": \"JSE\",\r\n    \"OperatingMIC\": \"XJSE\",\r\n    \"Country\": \"South Africa\",\r\n    \"Currency\": \"ZAR\",\r\n    \"CountryISO2\": \"ZA\",\r\n    \"CountryISO3\": \"ZAF\"\r\n  },\r\n  {\r\n    \"Name\": \"Chilean Stock Exchange\",\r\n    \"Code\": \"SN\",\r\n    \"OperatingMIC\": \"XSGO\",\r\n    \"Country\": \"Chile\",\r\n    \"Currency\": \"CLP\",\r\n    \"CountryISO2\": \"CL\",\r\n    \"CountryISO3\": \"CHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Jakarta Exchange\",\r\n    \"Code\": \"JK\",\r\n    \"OperatingMIC\": \"XIDX\",\r\n    \"Country\": \"Indonesia\",\r\n    \"Currency\": \"IDR\",\r\n    \"CountryISO2\": \"ID\",\r\n    \"CountryISO3\": \"IDN\"\r\n  },\r\n  {\r\n    \"Name\": \"Thailand Exchange\",\r\n    \"Code\": \"BK\",\r\n    \"OperatingMIC\": \"XBKK\",\r\n    \"Country\": \"Thailand\",\r\n    \"Currency\": \"THB\",\r\n    \"CountryISO2\": \"TH\",\r\n    \"CountryISO3\": \"THA\"\r\n  },\r\n  {\r\n    \"Name\": \"Shenzhen Stock Exchange\",\r\n    \"Code\": \"SHE\",\r\n    \"OperatingMIC\": \"XSHE\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Athens Exchange\",\r\n    \"Code\": \"AT\",\r\n    \"OperatingMIC\": \"ASEX\",\r\n    \"Country\": \"Greece\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"GR\",\r\n    \"CountryISO3\": \"GRC\"\r\n  },\r\n  {\r\n    \"Name\": \"National Stock Exchange of India\",\r\n    \"Code\": \"NSE\",\r\n    \"OperatingMIC\": \"XNSE\",\r\n    \"Country\": \"India\",\r\n    \"Currency\": \"INR\",\r\n    \"CountryISO2\": \"IN\",\r\n    \"CountryISO3\": \"IND\"\r\n  },\r\n  {\r\n    \"Name\": \"Shanghai Stock Exchange\",\r\n    \"Code\": \"SHG\",\r\n    \"OperatingMIC\": \"XSHG\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Colombo Stock Exchange\",\r\n    \"Code\": \"CM\",\r\n    \"OperatingMIC\": \"XCOL\",\r\n    \"Country\": \"Sri Lanka\",\r\n    \"Currency\": \"LKR\",\r\n    \"CountryISO2\": \"LK\",\r\n    \"CountryISO3\": \"LKA\"\r\n  },\r\n  {\r\n    \"Name\": \"Vietnam Stocks\",\r\n    \"Code\": \"VN\",\r\n    \"OperatingMIC\": \"HSTC\",\r\n    \"Country\": \"Vietnam\",\r\n    \"Currency\": \"VND\",\r\n    \"CountryISO2\": \"VN\",\r\n    \"CountryISO3\": \"VNM\"\r\n  },\r\n  {\r\n    \"Name\": \"Kuala Lumpur Exchange\",\r\n    \"Code\": \"KLSE\",\r\n    \"OperatingMIC\": \"XKLS\",\r\n    \"Country\": \"Malaysia\",\r\n    \"Currency\": \"MYR\",\r\n    \"CountryISO2\": \"MY\",\r\n    \"CountryISO3\": \"MYS\"\r\n  },\r\n  {\r\n    \"Name\": \"Bucharest Stock Exchange\",\r\n    \"Code\": \"RO\",\r\n    \"OperatingMIC\": \"XBSE\",\r\n    \"Country\": \"Romania\",\r\n    \"Currency\": \"RON\",\r\n    \"CountryISO2\": \"RO\",\r\n    \"CountryISO3\": \"ROU\"\r\n  },\r\n  {\r\n    \"Name\": \"Buenos Aires Exchange\",\r\n    \"Code\": \"BA\",\r\n    \"OperatingMIC\": \"XBUE\",\r\n    \"Country\": \"Argentina\",\r\n    \"Currency\": \"ARS\",\r\n    \"CountryISO2\": \"AR\",\r\n    \"CountryISO3\": \"ARG\"\r\n  },\r\n  {\r\n    \"Name\": \"Sao Paulo Exchange\",\r\n    \"Code\": \"SA\",\r\n    \"OperatingMIC\": \"BVMF\",\r\n    \"Country\": \"Brazil\",\r\n    \"Currency\": \"BRL\",\r\n    \"CountryISO2\": \"BR\",\r\n    \"CountryISO3\": \"BRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Mexican Exchange\",\r\n    \"Code\": \"MX\",\r\n    \"OperatingMIC\": \"XMEX\",\r\n    \"Country\": \"Mexico\",\r\n    \"Currency\": \"MXN\",\r\n    \"CountryISO2\": \"MX\",\r\n    \"CountryISO3\": \"MEX\"\r\n  },\r\n  {\r\n    \"Name\": \"London IL\",\r\n    \"Code\": \"IL\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Zagreb Stock Exchange\",\r\n    \"Code\": \"ZSE\",\r\n    \"OperatingMIC\": \"XZAG\",\r\n    \"Country\": \"Croatia\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"HR\",\r\n    \"CountryISO3\": \"HRV\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan Stock Exchange\",\r\n    \"Code\": \"TW\",\r\n    \"OperatingMIC\": \"XTAI\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"MICEX Moscow Russia\",\r\n    \"Code\": \"MCX\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Russia\",\r\n    \"Currency\": \"RUB\",\r\n    \"CountryISO2\": \"RU\",\r\n    \"CountryISO3\": \"RUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan OTC Exchange\",\r\n    \"Code\": \"TWO\",\r\n    \"OperatingMIC\": \"ROCO\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"Bolsa de Valores de Lima\",\r\n    \"Code\": \"LIM\",\r\n    \"OperatingMIC\": \"XLIM\",\r\n    \"Country\": \"Peru\",\r\n    \"Currency\": \"PEN\",\r\n    \"CountryISO2\": \"PE\",\r\n    \"CountryISO3\": \"PER\"\r\n  },\r\n  {\r\n    \"Name\": \"Money Market Virtual Exchange\",\r\n    \"Code\": \"MONEY\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Europe Fund Virtual Exchange\",\r\n    \"Code\": \"EUFUND\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Istanbul Stock Exchange\",\r\n    \"Code\": \"IS\",\r\n    \"OperatingMIC\": \"XIST\",\r\n    \"Country\": \"Turkey\",\r\n    \"Currency\": \"TRY\",\r\n    \"CountryISO2\": \"TR\",\r\n    \"CountryISO3\": \"TUR\"\r\n  },\r\n  {\r\n    \"Name\": \"Cryptocurrencies\",\r\n    \"Code\": \"CC\",\r\n    \"OperatingMIC\": \"CRYP\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"FOREX\",\r\n    \"Code\": \"FOREX\",\r\n    \"OperatingMIC\": \"CDSL\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n   {\r\n    \"Name\": \"Virtual Exchange Holding\",\r\n    \"Code\": \"INDX\",\r\n  },\r\n]\r\n\r\n","import { tickerList } from \"../index.js\";\nimport { exchangeListJson } from \"./exchange_list.js\";\nimport { exchangeSymbolList } from \"./import_data.js\";\nexport let selectEx = document.getElementById('select1');\nexport let selectTicker= document.getElementById('select2');\nexport let select1Options = [{ 'placeholder': true, 'text': 'Select the stock exchange','class': 'custom-color' }]\nexport let select2Options = [{ 'placeholder': true, 'text': 'First select the stock exchange' ,'class': 'custom-color'}]\nexport let exchangeSymbols\nlet select1\n\nconst apiKey = '65fd2d716aebf2.80647901';\nlet usExchangeList=[]\n\nexchangeSymbolList('US', apiKey)\n  .then(data => exchangeSymbols = data)\n  .then(() => {\n    for (let i = 0; i < exchangeSymbols.length; i++) {\n      if ((exchangeSymbols[i].Exchange)) {\n        if (!usExchangeList.includes(exchangeSymbols[i].Exchange)) {\n          usExchangeList.push(exchangeSymbols[i].Exchange)\n        }\n      }     \n    }\n    for (let i = 0; i < usExchangeList.length; i++){\n      select1Options.push({ text: `Usa Stock:  ${ usExchangeList[i]}` })\n    }\n  })\n  .then(() => {\n    for (let i = 0; i < exchangeListJson.length; i++){\n      if (exchangeListJson[i].Code != 'US') {\n        select1Options.push({ text: exchangeListJson[i].Name })\n      }\n    }\n  })\n  .then(() => {\n    select1.setData( select1Options)\n    }) \n\n  select1=new SlimSelect({\n    select: '#select1',\n    data: select1Options,\n    options: [\n\n    ]\n    })\n\nexport let select2=new SlimSelect({\n  select: '#select2',\n  data: select2Options\n})\n\n\n\nexport const slectTwo=(event)=>{\n  event.preventDefault()\n  let select2Options = []\n  let selectedEx = selectEx.options[selectEx.selectedIndex].value\n  if (!selectedEx.includes('Usa Stock:')) {\n    for (let i = 0; i < exchangeListJson.length; i++) {\n      if (exchangeListJson[i].Name === selectedEx) {\n        let exchange = exchangeListJson[i].Code\n        fetch(`https://eodhd.com/api/exchange-symbol-list/${exchange}?api_token=65fd2d716aebf2.80647901&fmt=json`)\n          .then(data => data.json())\n          .then(data => {\n            tickerList.push(data)\n            for (let i = 0; i < data.length; i++) {\n              select2Options.push({ text: `${data[i].Name}` })\n            }\n            select2.setData(select2Options)\n            return tickerList\n          })\n      }\n    }\n  }\n  else if (selectedEx.includes('Usa Stock:')) {\n    for (let i = 0; i < exchangeSymbols.length; i++) {\n      if (selectedEx.includes(exchangeSymbols[i].Exchange)) {\n            select2Options.push({ text: `${exchangeSymbols[i].Name}` })\n      }\n    }\n    tickerList.push(exchangeSymbols)\n    select2.setData(select2Options)\n    return tickerList\n  }\n  }\n\n  export const selectOne=(event, tickerList)=>{\n    event.preventDefault();\n    if (selectTicker.options[selectTicker.selectedIndex] != undefined) {\n      let selectedTicker = selectTicker.options[selectTicker.selectedIndex].value;\n      tickerList=tickerList[0]\n      for (let i = 0; i < tickerList.length;  i++){\n        if (selectedTicker != tickerList[i].Name) {\n        }\n        else {\n          ticker = tickerList[i].Code\n          if (tickerList[i].Country === 'USA' && tickerList[i].Exchange!=='INDX') {\n            exchange = 'US'\n          }\n          else {\n            exchange = tickerList[i].Exchange\n          }  \n          index = ticker.concat('.', exchange)\n          return index\n        }\n        \n      }\n    }\n  }\n\n\n\n\n\n      \n","import { newDataChart } from \"./graph\";\n\nexport function linearRegression(yAxis) {\n    let regressionData = []\n    for (let i = 0; i < yAxis.length; i++){\n        let regressionPoints = [i + 1, yAxis[i]]\n        regressionData.push(regressionPoints)\n    }\n    const result = regression.linear(regressionData);\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    let functionPattern=`y=${factorA}x+${factorB}`\n    let regYAxis = []\n    for (let i = 0; i < yAxis.length; i++){\n        regYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'linear regression',\n        data: regYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(265, 20, 135, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n\n    return {regYAxis, functionPattern}\n}\n\nexport function parRegression(yAxis) {\n    let parRegressionData = []\n    for (let i = 0; i < yAxis.length; i++){\n        let regressionPoints = [i + 1, yAxis[i]]\n        parRegressionData.push(regressionPoints)\n    }\n    const result2 = regression.polynomial(parRegressionData, { order: 2 });\n    const factorA = result2.equation[0];\n    const factorB = result2.equation[1];\n    const factorC = result2.equation[2];\n    let parFunctionPattern=`y=${factorA}x^2+${factorB}x+${factorC}`\n    let parRegYAxis = []\n    for (let i = 0; i < yAxis.length; i++){\n        parRegYAxis.push(factorA * i**2 + factorB*i+factorC)\n    }\n    newDataChart.data.datasets.push({\n        label: 'quadratic regression',\n        data: parRegYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(20, 265, 150, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        \n    });\n    newDataChart.update();\n\n    return {parRegYAxis, parFunctionPattern}\n}\n\nexport function upperPoints(regYAxis, yAxis) {\n    const selectedPoints = []\n    for (let i = 0; i < yAxis.length; i++) {\n        if (yAxis[i] - regYAxis[i] > 0) {\n            selectedPoints.push([(i),yAxis[i]])\n        }\n    }\n    const result = regression.linear(selectedPoints)\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    let topYAxis = []\n    for (let i = 0; i < yAxis.length; i++) {\n        topYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'top line',\n        data: topYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(20, 265, 150, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n}\n\n\nexport function bottomPoints(regYAxis, yAxis) {\n    const selectedPoints = []\n    for (let i = 0; i < yAxis.length; i++) {\n        if (regYAxis[i] - yAxis[i] > 0) {\n            selectedPoints.push([(i),yAxis[i]])\n        }\n    }\n    const result = regression.linear(selectedPoints)\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    let topYAxis = []\n    for (let i = 0; i < yAxis.length; i++) {\n        topYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'bottom line',\n        data: topYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(200, 100, 20, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n}\n\n \n","import { inProgres } from \"../index\";\n\nexport const setHeaderData = (data, headerData) =>{\n    let newData = data\n    let changeColor = '';\n    newData.forEach(element => {\n      element.change_p>0? changeColor='value-plus':changeColor='value-minus'\n    });\n    const markup = newData.map((ticker) => {\n    let changeColor = ''; // Initialize changeColor variable\n    if (ticker.change_p > 0) {\n        changeColor = 'value-plus';\n    } else if (ticker.change_p < 0) {\n        changeColor = 'value-minus';\n      }\n      if(inProgres === true){return}\n      return `<div class='short-data-div'>\n                <button class = 'delete-button'  type=\"button\" id=\"${ticker.code}\" >\n                <svg id = '${ticker.code}' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill = '#ec7c7c'>\n                  <path name = '${ticker.code}' d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\n                  <path name = '${ticker.code}' d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${ticker.code}'>\n                <p class='header-paragraph'>${ticker.code}</p>\n                <p class='header-paragraph'>Close: ${ticker.close}</p>\n                <p class='header-paragraph'>Change: <span class='${changeColor}'>${ticker.change_p}%</span></p>\n              </div>          \n            </div>`;\n  }).join(\"\"); \n    // Wstawianie wygenerowanego kodu HTML do elementu headerData\n    headerData.innerHTML = ''\n    headerData.insertAdjacentHTML(\"beforeend\", markup);\n  }","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","import { multipleDailyData } from \"./import_data.js\";\nimport { token, headerData, favButton, headerTickersList, setInProgres} from \"../index.js\";\nimport { setHeaderData } from \"./headerData.js\";\n\nexport const onClickHeaderButton = (event) => {\n    event.preventDefault();\n    setInProgres(true);\n    let tickerToDelete = event.target.parentNode.id;\n    let newList = headerTickersList.filter(ticker => ticker !== tickerToDelete);\n    multipleDailyData(newList, token)\n        .then(data => {\n            setHeaderData(data, headerData);\n        })\n        .then(() => {\n            delButton = document.querySelectorAll('.delete-button');\n            if (delButton.length < 3) {\n                for (let i = 0; i < delButton.length; i++) {\n                    delButton[i].disabled = true;\n                }\n            }\n            if (newList.length < 5) {\n                favButton.disabled = false;\n            }\n            headerTickersList.splice(0, headerTickersList.length, ...newList);\n            setInProgres(false);\n        })\n        .catch(error => {\n            console.error(\"Wystąpił błąd podczas pobierania danych:\", error);\n            setInProgres(false); // Upewnij się, że ustawiasz inProgres na false w przypadku błędu\n        });\n};","import { lineChart, createAxis, hideChart, showChart} from \"./js/graph.js\";\nimport { historicalStockData, dailyStockData, createDate, news } from \"./js/import_data.js\";\nimport { particularData } from \"./js/particular_data.js\";\nimport { selectEx, selectTicker, selectOne, slectTwo} from \"./js/select.js\";\nimport { linearRegression, bottomPoints, upperPoints } from \"./js/math.js\";\nimport { multipleDailyData } from \"./js/import_data.js\";\nimport { setHeaderData } from \"./js/headerData.js\";\nimport { onClickHeaderButton } from \"./js/onClickHeaderButton.js\";\nimport { newParagraph } from \"./js/newsParagraph.js\";\n\nlet dailyData\nlet historicalData\nlet newDataChart\nlet chartData\nlet delButton\nlet selectedDate\n\nlet exchange = 'WAR';\nlet ticker = 'ALE';\nlet index = ticker.concat('.', exchange)\nlet today = new Date();\nlet days = 30 \nlet startDate = new Date(today.getTime() - (days * 24 * 60 * 60 * 1000));\nlet endDate = createDate(today)\nlet index1 = 'ALE.WAR'\nlet index2 = 'GSPC.INDX'\nlet index3 = 'AAPL.US'\nlet index4 = 'EURPLN.FOREX'\nlet index5 = 'USDPLN.FOREX'\nconst regressionButton = document.querySelector('.regression-button');\n\nexport let tickerList = []\nexport const token = '65fd2d716aebf2.80647901';\nexport let headerTickersList=[index1, index2, index3, index4, index5]\nexport const headerData = document.querySelector('.short-data')\nexport const favButton = document.querySelector('.add-fav-button')\nexport let button = document.querySelector('.button')\nexport let inProgres = false\n\nflatpickr(\"#datepicker\", {\n  dateFormat: \"Y-m-d\", // Format daty\nmaxDate: new Date().fp_incr(0), // Maksymalna dozwolona data (30 dni od dzisiaj)\nonClose: function (selectedDates, dateStr) {\n  selectedDate = dateStr;\n  if (selectedDate != undefined) {\n  button.disabled=false\n  }\n}\n});\n\nexport const setInProgres = (value) => {\n  inProgres = value;\n};\n\nstartDate = createDate(startDate)\n\nif (headerTickersList.length >4){\n  favButton.disabled=true\n}\n\nmultipleDailyData(headerTickersList, token)\n  .then(data => {\n    setHeaderData(data, headerData)\n    delButton = document.querySelectorAll('.delete-button')\n  })\n  .catch(error => {\n    console.error(\"Wystąpił błąd podczas pobierania danych:\", error);\n  });\n\nsetInterval(() => {\n  multipleDailyData(headerTickersList, token)\n  .then(data => {\n    setHeaderData(data, headerData)\n    delButton = document.querySelectorAll('.delete-button')\n  })\n  .catch(error => {\n    console.error(\"Wystąpił błąd podczas pobierania danych:\", error);\n  });\n},5000\n);\n\nhistoricalStockData(index, token, startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData, historicalData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n  .then(data => {\n    const { regYAxis }=linearRegression(chartData.yAxis)\n    upperPoints(regYAxis, chartData.yAxis)\n    bottomPoints (regYAxis, chartData.yAxis)\n    newDataChart = data\n  })\n  .then(()=>{return news(index, token)})\n  .then(data=>{\n    newParagraph(data)\n  })\n\n\nregressionButton.addEventListener('click', function (event) {\n  event.preventDefault()\n  if (regressionButton.textContent === 'hide regression lines') {\n    hideChart()\n    regressionButton.textContent = 'show regression lines'\n  }\n  else if (regressionButton.textContent === 'show regression lines') {\n    showChart()\n    regressionButton.textContent = 'hide regression lines'\n  }\n})\n\nbutton.addEventListener('click', function (event,) {\n  event.preventDefault()\n  if (selectedDate===undefined){\n    selectedDate=startDate}\n  historicalStockData(index, token, selectedDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData, historicalData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    newDataChart.destroy();\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n    .then(data => {\n      const { regYAxis }=linearRegression(chartData.yAxis)\n      upperPoints(regYAxis, chartData.yAxis)\n      bottomPoints(regYAxis, chartData.yAxis)\n      newDataChart = data\n      if (regressionButton.textContent === 'show regression lines')\n        {hideChart()}\n  })\n})\n\nheaderData.addEventListener('click',function (event){\n  onClickHeaderButton(event)\n})\n\nfavButton.addEventListener('click', () => {\n  console.log(index)\n  headerTickersList.push(index)\n  multipleDailyData(headerTickersList, token)\n  .then(data => {\n      setHeaderData(data, headerData)\n      if (headerTickersList.length >4){\n        favButton.disabled=true\n      }\n      })\n  })\n\n  selectEx.addEventListener('change', function (event) {\n    slectTwo(event)\n  })\n\n  selectTicker.addEventListener('change', (event) => {\n    index=selectOne(event, tickerList)\n    \n  })\n","export const newParagraph=(data)=>{\n    let paragraph = document.querySelector(\"#news\")\n    const markup=data.map((article)=>\n      `<div class='newsCotainer'>  \n        <div class='newsDiv gallery-cell'>\n          <h2>${article.title}</h2>\n          <p>${article.date}</p>\n          <div class='div-afterp'>\n            <p>${article.content}</p>\n          </div>\n        </div>\n      </div>`)\n    .join(\"\");\n    paragraph.insertAdjacentHTML(\"beforeend\", markup);\n}"],"names":["$6f9ff0ffe48f7b70$export$f49711a816bad7d2","$8d417ee3705b7cf0$export$d55b601b45fa2097","stockIndex","apiKey","startDate","endDate","url","concat","fetch","then","response","ok","Error","json","data","catch","error","console","$8d417ee3705b7cf0$export$80d477eab0d1430a","realTimeDay","Date","timestamp","$8d417ee3705b7cf0$export$e029667a62135fd0","close","change_p","$8d417ee3705b7cf0$export$c15f9bb26c068cd","tickersList","API","UrlTickerData","i","length","date","year","getFullYear","month","getMonth","slice","day","getDate","$09b299ba83f5a694$export$8066b993bc416f6d","id","currentlyData","historicalData","container","document","getElementById","innerHTML","map","open","high","low","volume","insertAdjacentHTML","$6f9ff0ffe48f7b70$export$88642ec15bb62ae0","xAxis","yAxis","ticker","ctx","Chart","type","labels","datasets","label","borderWidth","pointRadius","options","responsive","maintainAspectRatio","$6f9ff0ffe48f7b70$export$6db76765312617ac","dailyData","chartData","push","log","$6f9ff0ffe48f7b70$export$59a1a2d9b46437c0","update","Object","defineProperty","module","exports","value","default","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","obj","parcelRequire","__esModule","len","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","constructor","name","test","$f54804c3b4bf0931$export$d3ccb3cff973a6d1","$f54804c3b4bf0931$var$select1","$2bbc9d2401120afe$export$402eb89ff95bd3f4","Name","Code","OperatingMIC","Country","Currency","CountryISO2","CountryISO3","$f54804c3b4bf0931$export$6194e7371c12e1d0","$f54804c3b4bf0931$export$244074419d36f200","$f54804c3b4bf0931$export$6b8651e7c280689c","placeholder","text","class","$f54804c3b4bf0931$var$usExchangeList","exchange","Exchange","includes","i1","setData","SlimSelect","select","$f54804c3b4bf0931$export$2ef10c4256d170a2","$f54804c3b4bf0931$export$4320ba52f304c4c9","event","preventDefault","select2Options1","selectedEx","selectedIndex","i2","$b8f9b7833fa37166$export$80170ed085a4fae9","i3","$f54804c3b4bf0931$export$9633ae49ba77655e","tickerList1","undefined","selectedTicker","index","$713d3b0c1368eedd$export$534d495db1d2c72c","regressionData","regressionPoints","result","regression","linear","factorA","equation","factorB","functionPattern","regYAxis","borderColor","backgroundColor","$713d3b0c1368eedd$export$19e582736d5e7ca6","selectedPoints","topYAxis","$713d3b0c1368eedd$export$7cd355bcc6b570a7","i4","$b228702367d324ba$export$f7be08e32ad83059","headerData","newData","forEach","element","markup","changeColor","$b8f9b7833fa37166$export$122f96a7a4167a15","code","join","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$b8f9b7833fa37166$var$dailyData","$b8f9b7833fa37166$var$historicalData","$b8f9b7833fa37166$var$newDataChart","$b8f9b7833fa37166$var$chartData","$b8f9b7833fa37166$var$selectedDate","$229fdda78f9beaac$export$e078c1676bd9bf5f","$b8f9b7833fa37166$export$810d4ebd8a4e2917","tickerToDelete","target","parentNode","newList","$b8f9b7833fa37166$export$a219f75e03f7e2a","filter","$b8f9b7833fa37166$export$9e1725a4cfeada27","$b8f9b7833fa37166$export$3dc6eb3bf063d456","_headerTickersList","delButton","querySelectorAll","disabled","$b8f9b7833fa37166$export$a866a0116c3f2c18","splice","apply","$parcel$interopDefault","$d3286789d7088fce$export$980760c061fea218","paragraph","querySelector","article","title","content","$b8f9b7833fa37166$var$ticker","$b8f9b7833fa37166$var$index","$b8f9b7833fa37166$var$today","$b8f9b7833fa37166$var$startDate","getTime","$b8f9b7833fa37166$var$days","$b8f9b7833fa37166$var$endDate","$b8f9b7833fa37166$var$regressionButton","$b8f9b7833fa37166$export$2ba01fb71ed41cb6","flatpickr","dateFormat","maxDate","fp_incr","onClose","selectedDates","dateStr","setInterval","addEventListener","textContent","destroy"],"version":3,"file":"index.409a6767.js.map"}