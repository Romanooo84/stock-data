{"mappings":"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","sources":["src/js/import_data.js","src/js/particular_data.js","src/js/graph.js","src/js/exchange_list.js","src/js/select.js","src/js/date-time.js","src/index.js","src/js/math.js"],"sourcesContent":[" //pobieranie danych historycznych\nexport function historicalStockData(stockIndex,apiKey, startDate, endDate) {\n  // url dla danych historycznych\n  const url = `https://eodhd.com/api/eod/${stockIndex}?from=${startDate}&to=${endDate}&period=d&api_token=${apiKey}&fmt=json`;  \n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let historicalData = data;\n      return historicalData\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie danych codziennych\nexport function dailyStockData(stockIndex,apiKey) {\n  // url dla danych codziennych\n  const url = `https://eodhd.com/api/real-time/${stockIndex}?api_token=${apiKey}&fmt=json`;\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let realTimeDay= new Date(data.timestamp * 1000);\n      realTimeDay = createDate(realTimeDay)\n      close = data.close\n      let change_p = data.change_p\n      return { realTimeDay, close, change_p };\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie listy obsługiwanych giełd\nexport function exchangeList(apiKey) {\n  const url = `https://eodhd.com/api/exchanges-list/?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeData = data;\n      return exchangeData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function exchangeSymbolList(exchange,apiKey) {\n  const url = `https://eodhd.com/api/exchange-symbol-list/${exchange}?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeSymbols = data;\n      return exchangeSymbols;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n// pobieranie danych historycznych z interwałem 5m\nexport function interdayData(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/intraday/${stockIndex}?interval=5m&api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let interdayData = data;\n      return interdayData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function news(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/news?${stockIndex}S&offset=0&limit=10&api_token=${apiKey}&fmt=json`\n  return fetch(url)\n  .then(response => {\n    // Sprawdzamy, czy odpowiedź jest poprawna\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    // Parsujemy odpowiedź jako JSON i zwracamy ją\n    return response.json();\n  })\n  .then(data => {\n    return data\n  })\n  .catch(error => {\n    // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n    console.error('There was a problem with your fetch operation:', error);\n  });\n}\n\nexport function createDate(date) {\n  const year = date.getFullYear();\n  const month = ('0' + (date.getMonth() + 1)).slice(-2); // Dodanie 1, bo getMonth() zwraca miesiące od 0 do 11, oraz formatowanie do dwóch cyfr\n  const day = ('0' + date.getDate()).slice(-2); // Formatowanie do dwóch cyfr\n  date = `${year}-${month}-${day}`;\n  return date\n}\n\n\n\n","export function particularData(id, stockIndex, currentlyData) {\n    let container = document.getElementById(`${id}`);\n    container.innerHTML=''\n    let map = `<p>${stockIndex} <span></span>${currentlyData.change_p}%</p>`\n    container.insertAdjacentHTML('beforeEnd', map)\n}\n","import { historicalStockData, dailyStockData, createDate, interdayData } from \"./import_data.js\";\nimport { particularData } from \"./particular_data.js\";\n\nexport let newDataChart\n\nexport function lineChart(xAxis, yAxis, ticker) {\n  const ctx = document.getElementById('myChart');\n\n  newDataChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: xAxis,\n      datasets: [{\n        label: ticker,\n        data: yAxis,\n        borderWidth: 3,\n        pointRadius: 0,\n      }]\n    },\n    options: {\n      responsive: true\n    }\n  });\n  return newDataChart\n}\n\n//dodawanie danych do wykresu\n\nexport function addData(chart, label, newData) {\n  chart.data.labels.push(label);\n  chart.data.datasets.forEach((dataset) => {\n    dataset.data.push(newData);\n  });\n  chart.update();\n}\n  //usuwanie danych z wykresu\nexport function updateChart(chart,newXAxis, newYAxis) {\n  chart.data.labels = newYAxis\n  chart.data.datasets[0].data=newXAxis\n  chart.update();\n}\n\nexport function graphDelete(newDataChart) {\n  newDataChart.destroy()\n}\n\n// pobranie danych do wykresu\n\nexport function createAxis(historicalData, dailyData) {\n   // Zainicjowanie listy danych dla osi x i y\n      let chartData = {\n        yAxis: [],\n        xAxis: []\n  };\n      // Wstawienie danych do listy danych osi x i y\n  for (let i = 0; i < historicalData.length; i++) {\n        if (historicalData[i].close !=='NA')\n            chartData.yAxis.push(historicalData[i].close);\n            chartData.xAxis.push(historicalData[i].date);\n  }\n  if (historicalData[historicalData.length - 1].date != dailyData.realTimeDay) {\n    if (dailyData.close !=='NA')\n    chartData.yAxis.push(dailyData.close);\n    chartData.xAxis.push(dailyData.realTimeDay);\n  }\n  else{console.log('brak aktualnych danych')}\n      return chartData;\n    }\n\nexport function createGraph(index, token, startDate, endDate, ticker) {\n historicalStockData(index, token, startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n  .then(data => {\n    newDataChart=data\n  })\n  \n}\n\nexport function hideChart() {\n  newDataChart.data.datasets[1].borderWidth = 0\n  newDataChart.data.datasets[2].borderWidth = 0\n  newDataChart.update()\n}\n\nexport function showChart() {\n  newDataChart.data.datasets[1].borderWidth = 1\n  newDataChart.data.datasets[2].borderWidth = 1\n  newDataChart.update()\n}\n\n","export const exchangeListJson= [\r\n  {\r\n    \"Name\": \"USA Stocks\",\r\n    \"Code\": \"US\",\r\n    \"OperatingMIC\": \"XNAS, XNYS\",\r\n    \"Country\": \"USA\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"US\",\r\n    \"CountryISO3\": \"USA\"\r\n  },\r\n  {\r\n    \"Name\": \"London Exchange\",\r\n    \"Code\": \"LSE\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"GBP\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Toronto Exchange\",\r\n    \"Code\": \"TO\",\r\n    \"OperatingMIC\": \"XTSE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"NEO Exchange\",\r\n    \"Code\": \"NEO\",\r\n    \"OperatingMIC\": \"NEOE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"TSX Venture Exchange\",\r\n    \"Code\": \"V\",\r\n    \"OperatingMIC\": \"XTSX\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"Berlin Exchange\",\r\n    \"Code\": \"BE\",\r\n    \"OperatingMIC\": \"XBER\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hamburg Exchange\",\r\n    \"Code\": \"HM\",\r\n    \"OperatingMIC\": \"XHAM\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"XETRA Stock Exchange\",\r\n    \"Code\": \"XETRA\",\r\n    \"OperatingMIC\": \"XETR\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Dusseldorf Exchange\",\r\n    \"Code\": \"DU\",\r\n    \"OperatingMIC\": \"XDUS\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hanover Exchange\",\r\n    \"Code\": \"HA\",\r\n    \"OperatingMIC\": \"XHAN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Munich Exchange\",\r\n    \"Code\": \"MU\",\r\n    \"OperatingMIC\": \"XMUN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Stuttgart Exchange\",\r\n    \"Code\": \"STU\",\r\n    \"OperatingMIC\": \"XSTU\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Frankfurt Exchange\",\r\n    \"Code\": \"F\",\r\n    \"OperatingMIC\": \"XFRA\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Luxembourg Stock Exchange\",\r\n    \"Code\": \"LU\",\r\n    \"OperatingMIC\": \"XLUX\",\r\n    \"Country\": \"Luxembourg\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"LU\",\r\n    \"CountryISO3\": \"LUX\"\r\n  },\r\n  {\r\n    \"Name\": \"Vienna Exchange\",\r\n    \"Code\": \"VI\",\r\n    \"OperatingMIC\": \"XWBO\",\r\n    \"Country\": \"Austria\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"AT\",\r\n    \"CountryISO3\": \"AUT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Paris\",\r\n    \"Code\": \"PA\",\r\n    \"OperatingMIC\": \"XPAR\",\r\n    \"Country\": \"France\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FR\",\r\n    \"CountryISO3\": \"FRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Brussels\",\r\n    \"Code\": \"BR\",\r\n    \"OperatingMIC\": \"XBRU\",\r\n    \"Country\": \"Belgium\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"BE\",\r\n    \"CountryISO3\": \"BEL\"\r\n  },\r\n  {\r\n    \"Name\": \"Madrid Exchange\",\r\n    \"Code\": \"MC\",\r\n    \"OperatingMIC\": \"BMEX\",\r\n    \"Country\": \"Spain\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"ES\",\r\n    \"CountryISO3\": \"ESP\"\r\n  },\r\n  {\r\n    \"Name\": \"SIX Swiss Exchange\",\r\n    \"Code\": \"SW\",\r\n    \"OperatingMIC\": \"XSWX\",\r\n    \"Country\": \"Switzerland\",\r\n    \"Currency\": \"CHF\",\r\n    \"CountryISO2\": \"CH\",\r\n    \"CountryISO3\": \"CHE\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Lisbon\",\r\n    \"Code\": \"LS\",\r\n    \"OperatingMIC\": \"XLIS\",\r\n    \"Country\": \"Portugal\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"PT\",\r\n    \"CountryISO3\": \"PRT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Amsterdam\",\r\n    \"Code\": \"AS\",\r\n    \"OperatingMIC\": \"XAMS\",\r\n    \"Country\": \"Netherlands\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"NL\",\r\n    \"CountryISO3\": \"NLD\"\r\n  },\r\n  {\r\n    \"Name\": \"Iceland Exchange\",\r\n    \"Code\": \"IC\",\r\n    \"OperatingMIC\": \"XICE\",\r\n    \"Country\": \"Iceland\",\r\n    \"Currency\": \"ISK\",\r\n    \"CountryISO2\": \"IS\",\r\n    \"CountryISO3\": \"ISL\"\r\n  },\r\n  {\r\n    \"Name\": \"Irish Exchange\",\r\n    \"Code\": \"IR\",\r\n    \"OperatingMIC\": \"XDUB\",\r\n    \"Country\": \"Ireland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"IE\",\r\n    \"CountryISO3\": \"IRL\"\r\n  },\r\n  {\r\n    \"Name\": \"Helsinki Exchange\",\r\n    \"Code\": \"HE\",\r\n    \"OperatingMIC\": \"XHEL\",\r\n    \"Country\": \"Finland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FI\",\r\n    \"CountryISO3\": \"FIN\"\r\n  },\r\n  {\r\n    \"Name\": \"Oslo Stock Exchange\",\r\n    \"Code\": \"OL\",\r\n    \"OperatingMIC\": \"XOSL\",\r\n    \"Country\": \"Norway\",\r\n    \"Currency\": \"NOK\",\r\n    \"CountryISO2\": \"NO\",\r\n    \"CountryISO3\": \"NOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Copenhagen Exchange\",\r\n    \"Code\": \"CO\",\r\n    \"OperatingMIC\": \"XCSE\",\r\n    \"Country\": \"Denmark\",\r\n    \"Currency\": \"DKK\",\r\n    \"CountryISO2\": \"DK\",\r\n    \"CountryISO3\": \"DNK\"\r\n  },\r\n  {\r\n    \"Name\": \"Stockholm Exchange\",\r\n    \"Code\": \"ST\",\r\n    \"OperatingMIC\": \"XSTO\",\r\n    \"Country\": \"Sweden\",\r\n    \"Currency\": \"SEK\",\r\n    \"CountryISO2\": \"SE\",\r\n    \"CountryISO3\": \"SWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Victoria Falls Stock Exchange\",\r\n    \"Code\": \"VFEX\",\r\n    \"OperatingMIC\": \"VFEX\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Zimbabwe Stock Exchange\",\r\n    \"Code\": \"XZIM\",\r\n    \"OperatingMIC\": \"XZIM\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Lusaka Stock Exchange\",\r\n    \"Code\": \"LUSE\",\r\n    \"OperatingMIC\": \"XLUS\",\r\n    \"Country\": \"Zambia \",\r\n    \"Currency\": \"ZMW\",\r\n    \"CountryISO2\": \"ZM\",\r\n    \"CountryISO3\": \"ZMB\"\r\n  },\r\n  {\r\n    \"Name\": \"Uganda Securities Exchange\",\r\n    \"Code\": \"USE\",\r\n    \"OperatingMIC\": \"XUGA\",\r\n    \"Country\": \"Uganda\",\r\n    \"Currency\": \"UGX\",\r\n    \"CountryISO2\": \"UG\",\r\n    \"CountryISO3\": \"UGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Dar es Salaam Stock Exchange\",\r\n    \"Code\": \"DSE\",\r\n    \"OperatingMIC\": \"XDAR\",\r\n    \"Country\": \"Tanzania\",\r\n    \"Currency\": \"TZS\",\r\n    \"CountryISO2\": \"TZ\",\r\n    \"CountryISO3\": \"TZA\"\r\n  },\r\n  {\r\n    \"Name\": \"Prague Stock Exchange \",\r\n    \"Code\": \"PR\",\r\n    \"OperatingMIC\": \"XPRA\",\r\n    \"Country\": \"Czech Republic\",\r\n    \"Currency\": \"CZK\",\r\n    \"CountryISO2\": \"CZ\",\r\n    \"CountryISO3\": \"CZE\"\r\n  },\r\n  {\r\n    \"Name\": \"Rwanda Stock Exchange\",\r\n    \"Code\": \"RSE\",\r\n    \"OperatingMIC\": \"RSEX\",\r\n    \"Country\": \"Rwanda\",\r\n    \"Currency\": \"RWF \",\r\n    \"CountryISO2\": \"RW\",\r\n    \"CountryISO3\": \"RWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Botswana Stock Exchange \",\r\n    \"Code\": \"XBOT\",\r\n    \"OperatingMIC\": \"XBOT\",\r\n    \"Country\": \"Botswana\",\r\n    \"Currency\": \"BWP\",\r\n    \"CountryISO2\": \"BW\",\r\n    \"CountryISO3\": \"BWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Egyptian Exchange\",\r\n    \"Code\": \"EGX\",\r\n    \"OperatingMIC\": \"NILX\",\r\n    \"Country\": \"Egypt\",\r\n    \"Currency\": \"EGP\",\r\n    \"CountryISO2\": \"EG\",\r\n    \"CountryISO3\": \"EGY\"\r\n  },\r\n  {\r\n    \"Name\": \"Nigerian Stock Exchange\",\r\n    \"Code\": \"XNSA\",\r\n    \"OperatingMIC\": \"XNSA\",\r\n    \"Country\": \"Nigeria\",\r\n    \"Currency\": \"NGN\",\r\n    \"CountryISO2\": \"NG\",\r\n    \"CountryISO3\": \"NGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Ghana Stock Exchange\",\r\n    \"Code\": \"GSE\",\r\n    \"OperatingMIC\": \"XGHA\",\r\n    \"Country\": \"Ghana\",\r\n    \"Currency\": \"GHS\",\r\n    \"CountryISO2\": \"GH\",\r\n    \"CountryISO3\": \"GHA\"\r\n  },\r\n  {\r\n    \"Name\": \"Malawi Stock Exchange\",\r\n    \"Code\": \"MSE\",\r\n    \"OperatingMIC\": \"XMSW\",\r\n    \"Country\": \"Malawi\",\r\n    \"Currency\": \"MWK\",\r\n    \"CountryISO2\": \"MW\",\r\n    \"CountryISO3\": \"MWI\"\r\n  },\r\n  {\r\n    \"Name\": \"Regional Securities Exchange\",\r\n    \"Code\": \"BRVM\",\r\n    \"OperatingMIC\": \"XBRV\",\r\n    \"Country\": \"Ivory Coast\",\r\n    \"Currency\": \"XOF\",\r\n    \"CountryISO2\": \"CI\",\r\n    \"CountryISO3\": \"CIV\"\r\n  },\r\n  {\r\n    \"Name\": \"Nairobi Securities Exchange\",\r\n    \"Code\": \"XNAI\",\r\n    \"OperatingMIC\": \"XNAI\",\r\n    \"Country\": \"Kenya\",\r\n    \"Currency\": \"KES\",\r\n    \"CountryISO2\": \"KE\",\r\n    \"CountryISO3\": \"KEN\"\r\n  },\r\n  {\r\n    \"Name\": \"Casablanca Stock Exchange\",\r\n    \"Code\": \"BC\",\r\n    \"OperatingMIC\": \"XCAS\",\r\n    \"Country\": \"Morocco\",\r\n    \"Currency\": \"MAD\",\r\n    \"CountryISO2\": \"MA\",\r\n    \"CountryISO3\": \"MAR\"\r\n  },\r\n  {\r\n    \"Name\": \"Stock Exchange of Mauritius\",\r\n    \"Code\": \"SEM\",\r\n    \"OperatingMIC\": \"XMAU\",\r\n    \"Country\": \"Mauritius\",\r\n    \"Currency\": \"MUR\",\r\n    \"CountryISO2\": \"MU\",\r\n    \"CountryISO3\": \"MUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Tel Aviv Stock Exchange\",\r\n    \"Code\": \"TA\",\r\n    \"OperatingMIC\": \"XTAE\",\r\n    \"Country\": \"Israel\",\r\n    \"Currency\": \"ILS\",\r\n    \"CountryISO2\": \"IL\",\r\n    \"CountryISO3\": \"ISR\"\r\n  },\r\n  {\r\n    \"Name\": \"Korea Stock Exchange\",\r\n    \"Code\": \"KO\",\r\n    \"OperatingMIC\": \"XKRX\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"KOSDAQ\",\r\n    \"Code\": \"KQ\",\r\n    \"OperatingMIC\": \"XKOS\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Budapest Stock Exchange\",\r\n    \"Code\": \"BUD\",\r\n    \"OperatingMIC\": \"XBUD\",\r\n    \"Country\": \"Hungary\",\r\n    \"Currency\": \"HUF\",\r\n    \"CountryISO2\": \"HU\",\r\n    \"CountryISO3\": \"HUN\"\r\n  },\r\n  {\r\n    \"Name\": \"Warsaw Stock Exchange\",\r\n    \"Code\": \"WAR\",\r\n    \"OperatingMIC\": \"XWAR\",\r\n    \"Country\": \"Poland\",\r\n    \"Currency\": \"PLN\",\r\n    \"CountryISO2\": \"PL\",\r\n    \"CountryISO3\": \"POL\"\r\n  },\r\n  {\r\n    \"Name\": \"Philippine Stock Exchange\",\r\n    \"Code\": \"PSE\",\r\n    \"OperatingMIC\": \"XPHS\",\r\n    \"Country\": \"Philippines\",\r\n    \"Currency\": \"PHP\",\r\n    \"CountryISO2\": \"PH\",\r\n    \"CountryISO3\": \"PHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Karachi Stock Exchange\",\r\n    \"Code\": \"KAR\",\r\n    \"OperatingMIC\": \"XKAR\",\r\n    \"Country\": \"Pakistan\",\r\n    \"Currency\": \"PKR\",\r\n    \"CountryISO2\": \"PK\",\r\n    \"CountryISO3\": \"PAK\"\r\n  },\r\n  {\r\n    \"Name\": \"Australian Securities Exchange\",\r\n    \"Code\": \"AU\",\r\n    \"OperatingMIC\": \"XASX\",\r\n    \"Country\": \"Australia\",\r\n    \"Currency\": \"AUD\",\r\n    \"CountryISO2\": \"AU\",\r\n    \"CountryISO3\": \"AUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Johannesburg Exchange\",\r\n    \"Code\": \"JSE\",\r\n    \"OperatingMIC\": \"XJSE\",\r\n    \"Country\": \"South Africa\",\r\n    \"Currency\": \"ZAR\",\r\n    \"CountryISO2\": \"ZA\",\r\n    \"CountryISO3\": \"ZAF\"\r\n  },\r\n  {\r\n    \"Name\": \"Chilean Stock Exchange\",\r\n    \"Code\": \"SN\",\r\n    \"OperatingMIC\": \"XSGO\",\r\n    \"Country\": \"Chile\",\r\n    \"Currency\": \"CLP\",\r\n    \"CountryISO2\": \"CL\",\r\n    \"CountryISO3\": \"CHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Jakarta Exchange\",\r\n    \"Code\": \"JK\",\r\n    \"OperatingMIC\": \"XIDX\",\r\n    \"Country\": \"Indonesia\",\r\n    \"Currency\": \"IDR\",\r\n    \"CountryISO2\": \"ID\",\r\n    \"CountryISO3\": \"IDN\"\r\n  },\r\n  {\r\n    \"Name\": \"Thailand Exchange\",\r\n    \"Code\": \"BK\",\r\n    \"OperatingMIC\": \"XBKK\",\r\n    \"Country\": \"Thailand\",\r\n    \"Currency\": \"THB\",\r\n    \"CountryISO2\": \"TH\",\r\n    \"CountryISO3\": \"THA\"\r\n  },\r\n  {\r\n    \"Name\": \"Shenzhen Stock Exchange\",\r\n    \"Code\": \"SHE\",\r\n    \"OperatingMIC\": \"XSHE\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Athens Exchange\",\r\n    \"Code\": \"AT\",\r\n    \"OperatingMIC\": \"ASEX\",\r\n    \"Country\": \"Greece\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"GR\",\r\n    \"CountryISO3\": \"GRC\"\r\n  },\r\n  {\r\n    \"Name\": \"National Stock Exchange of India\",\r\n    \"Code\": \"NSE\",\r\n    \"OperatingMIC\": \"XNSE\",\r\n    \"Country\": \"India\",\r\n    \"Currency\": \"INR\",\r\n    \"CountryISO2\": \"IN\",\r\n    \"CountryISO3\": \"IND\"\r\n  },\r\n  {\r\n    \"Name\": \"Shanghai Stock Exchange\",\r\n    \"Code\": \"SHG\",\r\n    \"OperatingMIC\": \"XSHG\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Colombo Stock Exchange\",\r\n    \"Code\": \"CM\",\r\n    \"OperatingMIC\": \"XCOL\",\r\n    \"Country\": \"Sri Lanka\",\r\n    \"Currency\": \"LKR\",\r\n    \"CountryISO2\": \"LK\",\r\n    \"CountryISO3\": \"LKA\"\r\n  },\r\n  {\r\n    \"Name\": \"Vietnam Stocks\",\r\n    \"Code\": \"VN\",\r\n    \"OperatingMIC\": \"HSTC\",\r\n    \"Country\": \"Vietnam\",\r\n    \"Currency\": \"VND\",\r\n    \"CountryISO2\": \"VN\",\r\n    \"CountryISO3\": \"VNM\"\r\n  },\r\n  {\r\n    \"Name\": \"Kuala Lumpur Exchange\",\r\n    \"Code\": \"KLSE\",\r\n    \"OperatingMIC\": \"XKLS\",\r\n    \"Country\": \"Malaysia\",\r\n    \"Currency\": \"MYR\",\r\n    \"CountryISO2\": \"MY\",\r\n    \"CountryISO3\": \"MYS\"\r\n  },\r\n  {\r\n    \"Name\": \"Bucharest Stock Exchange\",\r\n    \"Code\": \"RO\",\r\n    \"OperatingMIC\": \"XBSE\",\r\n    \"Country\": \"Romania\",\r\n    \"Currency\": \"RON\",\r\n    \"CountryISO2\": \"RO\",\r\n    \"CountryISO3\": \"ROU\"\r\n  },\r\n  {\r\n    \"Name\": \"Buenos Aires Exchange\",\r\n    \"Code\": \"BA\",\r\n    \"OperatingMIC\": \"XBUE\",\r\n    \"Country\": \"Argentina\",\r\n    \"Currency\": \"ARS\",\r\n    \"CountryISO2\": \"AR\",\r\n    \"CountryISO3\": \"ARG\"\r\n  },\r\n  {\r\n    \"Name\": \"Sao Paulo Exchange\",\r\n    \"Code\": \"SA\",\r\n    \"OperatingMIC\": \"BVMF\",\r\n    \"Country\": \"Brazil\",\r\n    \"Currency\": \"BRL\",\r\n    \"CountryISO2\": \"BR\",\r\n    \"CountryISO3\": \"BRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Mexican Exchange\",\r\n    \"Code\": \"MX\",\r\n    \"OperatingMIC\": \"XMEX\",\r\n    \"Country\": \"Mexico\",\r\n    \"Currency\": \"MXN\",\r\n    \"CountryISO2\": \"MX\",\r\n    \"CountryISO3\": \"MEX\"\r\n  },\r\n  {\r\n    \"Name\": \"London IL\",\r\n    \"Code\": \"IL\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Zagreb Stock Exchange\",\r\n    \"Code\": \"ZSE\",\r\n    \"OperatingMIC\": \"XZAG\",\r\n    \"Country\": \"Croatia\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"HR\",\r\n    \"CountryISO3\": \"HRV\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan Stock Exchange\",\r\n    \"Code\": \"TW\",\r\n    \"OperatingMIC\": \"XTAI\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"MICEX Moscow Russia\",\r\n    \"Code\": \"MCX\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Russia\",\r\n    \"Currency\": \"RUB\",\r\n    \"CountryISO2\": \"RU\",\r\n    \"CountryISO3\": \"RUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan OTC Exchange\",\r\n    \"Code\": \"TWO\",\r\n    \"OperatingMIC\": \"ROCO\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"Bolsa de Valores de Lima\",\r\n    \"Code\": \"LIM\",\r\n    \"OperatingMIC\": \"XLIM\",\r\n    \"Country\": \"Peru\",\r\n    \"Currency\": \"PEN\",\r\n    \"CountryISO2\": \"PE\",\r\n    \"CountryISO3\": \"PER\"\r\n  },\r\n  {\r\n    \"Name\": \"Money Market Virtual Exchange\",\r\n    \"Code\": \"MONEY\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Europe Fund Virtual Exchange\",\r\n    \"Code\": \"EUFUND\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Istanbul Stock Exchange\",\r\n    \"Code\": \"IS\",\r\n    \"OperatingMIC\": \"XIST\",\r\n    \"Country\": \"Turkey\",\r\n    \"Currency\": \"TRY\",\r\n    \"CountryISO2\": \"TR\",\r\n    \"CountryISO3\": \"TUR\"\r\n  },\r\n  {\r\n    \"Name\": \"Cryptocurrencies\",\r\n    \"Code\": \"CC\",\r\n    \"OperatingMIC\": \"CRYP\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"FOREX\",\r\n    \"Code\": \"FOREX\",\r\n    \"OperatingMIC\": \"CDSL\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  }\r\n]\r\n\r\n","import { exchangeListJson } from \"./exchange_list.js\";\nimport { exchangeSymbolList } from \"./import_data.js\";\nexport let selectEx = document.getElementById('select1');\nexport let selectTicker= document.getElementById('select2');\nexport let select1Options = [{ 'placeholder': true, 'text': 'Select the stock exchange' }]\nexport let select2Options = [{ 'placeholder': true, 'text': 'First select the stock exchange' }]\nexport let exchangeSymbols\nlet select1\n\nconst apiKey = '65fd2d716aebf2.80647901';\nlet usExchangeList=[]\n\nexchangeSymbolList('US', apiKey)\n  .then(data => exchangeSymbols = data)\n  .then(() => {\n    for (let i = 0; i < exchangeSymbols.length; i++) {\n      if ((exchangeSymbols[i].Exchange)) {\n        if (!usExchangeList.includes(exchangeSymbols[i].Exchange)) {\n          usExchangeList.push(exchangeSymbols[i].Exchange)\n        }\n      }     \n    }\n    for (let i = 0; i < usExchangeList.length; i++){\n      select1Options.push({ text: `Usa Stock:  ${ usExchangeList[i]}` })\n    }\n  })\n  .then(() => {\n    for (let i = 0; i < exchangeListJson.length; i++){\n      if (exchangeListJson[i].Code != 'US') {\n        select1Options.push({ text: exchangeListJson[i].Name })\n      }\n    }\n  })\n  .then(() => {\n    select1.setData( select1Options)\n    }) \n\n  select1=new SlimSelect({\n    select: '#select1',\n    data: select1Options\n    })\n\n\n\nexport let select2=new SlimSelect({\n  select: '#select2',\n  data: select2Options\n})\n\n\n\n      \n","import { button } from \"../index.js\";\nexport let selectedDate\n\nflatpickr(\"#datepicker\", {\n    dateFormat: \"Y-m-d\", // Format daty\n  maxDate: new Date().fp_incr(0), // Maksymalna dozwolona data (30 dni od dzisiaj)\n  onClose: function (selectedDates, dateStr) {\n    selectedDate = dateStr;\n    if (selectedDate != undefined) {\n    button.disabled=false\n    }\n  }\n});\n","import { lineChart, createAxis, hideChart, showChart} from \"./js/graph.js\";\nimport { historicalStockData, dailyStockData, createDate, news } from \"./js/import_data.js\";\nimport { particularData } from \"./js/particular_data.js\";\nimport { exchangeListJson } from \"./js/exchange_list.js\";\nimport { selectEx, select2, selectTicker, exchangeSymbols } from \"./js/select.js\";\nimport { linearRegression, bottomPoints, upperPoints } from \"./js/math.js\";\nimport './js/select.js'\nimport './js/date-time'\nimport { selectedDate } from \"./js/date-time\";\n\nlet dailyData\nlet historicalData\nlet newDataChart\nlet chartData\nlet endDate\nlet tickerList\n\nconst token = '65fd2d716aebf2.80647901';\nlet exchange = 'WAR';\nlet ticker = 'ALE';\nlet index = ticker.concat('.', exchange)\nlet today = new Date();\nlet days = 30 \nlet startDate = new Date(today.getTime() - (days * 24 * 60 * 60 * 1000));\n\nendDate = createDate(today)\nstartDate = createDate(startDate)\n\n\nhistoricalStockData(index, token, startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n  .then(data => {\n     const { regYAxis }=linearRegression(chartData.yAxis)\n    upperPoints(regYAxis, chartData.yAxis)\n    bottomPoints (regYAxis, chartData.yAxis)\n    newDataChart = data\n  })\n  .then(()=>{return news(index, token)})\n  .then(data=>{\n    let paragraph = document.querySelector(\"#news\")\n    const markup=data.map((article)=>\n      `<h2>${article.title}</h2><p>${article.date}</p><p>${article.content}</p>`)\n    .join(\"\");\n    paragraph.insertAdjacentHTML(\"beforeend\", markup);\n  })\n\nconst graphInterval=()=>setInterval(goOffEverySecond, 1000)\n\n\nexport let button = document.querySelector('.button')\nbutton.disabled=true\nbutton.addEventListener('click', function (event,) {\n  event.preventDefault()\n  historicalStockData(index, token, selectedDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    newDataChart.destroy()\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n    .then(data => {\n      const { regYAxis }=linearRegression(chartData.yAxis)\n      upperPoints(regYAxis, chartData.yAxis)\n      bottomPoints(regYAxis, chartData.yAxis)\n      if (regressionButton.textContent === 'show regression lines')\n        {hideChart()}\n      newDataChart = data\n  })\n  .then(()=>{return news(index, token)})\n  .then(data=>{\n    let paragraph = document.querySelector(\"#news\")\n    console.log(data)\n  })\n})\n\nconst regressionButton = document.querySelector('.regression-button');\nregressionButton.addEventListener('click', function (event) {\n  event.preventDefault()\n  if (regressionButton.textContent === 'hide regression lines') {\n    hideChart()\n    regressionButton.textContent = 'show regression lines'\n  }\n  else if (regressionButton.textContent === 'show regression lines') {\n    showChart()\n    regressionButton.textContent = 'hide regression lines'\n  }\n})\n  \n\nselectEx.addEventListener('change', function (event) {\n  event.preventDefault()\n  let select2Options = []\n  let selectedEx = selectEx.options[selectEx.selectedIndex].value\n  if (!selectedEx.includes('Usa Stock:')) {\n    for (let i = 0; i < exchangeListJson.length; i++) {\n      if (exchangeListJson[i].Name === selectedEx) {\n        let exchange = exchangeListJson[i].Code\n        fetch(`https://eodhd.com/api/exchange-symbol-list/${exchange}?api_token=65fd2d716aebf2.80647901&fmt=json`)\n          .then(data => data.json())\n          .then(data => {\n            tickerList = data\n            for (let i = 0; i < data.length; i++) {\n              select2Options.push({ text: `${data[i].Name}` })\n            }\n            select2.setData(select2Options)\n          })\n      }\n    }\n  }\n  else {\n    for (let i = 0; i < exchangeSymbols.length; i++) {\n      if (selectedEx.includes(exchangeSymbols[i].Exchange)) {\n            select2Options.push({ text: `${exchangeSymbols[i].Name}` })\n      }\n    }\n    tickerList = exchangeSymbols\n    select2.setData(select2Options)\n  }\n  })\n\n  selectTicker.addEventListener('change', (event) => {\n  event.preventDefault();\n    if (selectTicker.options[selectTicker.selectedIndex] != undefined) {\n      let selectedTicker = selectTicker.options[selectTicker.selectedIndex].value;\n      for (let i = 0; i < tickerList.length;  i++){\n        if (selectedTicker != tickerList[i].Name) {\n        }\n        else {\n          ticker = tickerList[i].Code\n          if (tickerList[i].Country === 'USA') {\n            exchange = 'US'\n          }\n          else {\n            exchange = tickerList[i].Exchange\n          }\n          index = ticker.concat('.', exchange)\n\n        }\n      }\n    }\n  })\n","import { newDataChart } from \"./graph\";\n\nexport function linearRegression(yAxis) {\n    let regressionData = []\n    for (let i = 0; i < yAxis.length; i++){\n        let regressionPoints = [i + 1, yAxis[i]]\n        regressionData.push(regressionPoints)\n    }\n    console.log(regressionData)\n    const result = regression.linear(regressionData);\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    console.log(`y=${factorA}x+${factorB}`)\n    let functionPattern=`y=${factorA}x+${factorB}`\n    let regYAxis = []\n    for (let i = 0; i < yAxis.length; i++){\n        regYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'linear regression',\n        data: regYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(265, 20, 135, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n\n    return {regYAxis, functionPattern}\n}\n\nexport function parRegression(yAxis) {\n    let parRegressionData = []\n    for (let i = 0; i < yAxis.length; i++){\n        let regressionPoints = [i + 1, yAxis[i]]\n        parRegressionData.push(regressionPoints)\n    }\n    const result2 = regression.polynomial(parRegressionData, { order: 2 });\n    const factorA = result2.equation[0];\n    const factorB = result2.equation[1];\n    const factorC = result2.equation[2];\n    console.log(`y=${factorA}x^2+${factorB}x+${factorC}`)\n    let parFunctionPattern=`y=${factorA}x^2+${factorB}x+${factorC}`\n    let parRegYAxis = []\n    for (let i = 0; i < yAxis.length; i++){\n        parRegYAxis.push(factorA * i**2 + factorB*i+factorC)\n    }\n    newDataChart.data.datasets.push({\n        label: 'quadratic regression',\n        data: parRegYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(20, 265, 150, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        \n    });\n    newDataChart.update();\n\n    return {parRegYAxis, parFunctionPattern}\n}\n\nexport function upperPoints(regYAxis, yAxis) {\n    const selectedPoints = []\n    for (let i = 0; i < yAxis.length; i++) {\n        if (yAxis[i] - regYAxis[i] > 0) {\n            selectedPoints.push([(i),yAxis[i]])\n        }\n    }\n    const result = regression.linear(selectedPoints)\n    console.log(result)\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    console.log(`y=${factorA}x+${factorB}`)\n    let topYAxis = []\n    for (let i = 0; i < yAxis.length; i++) {\n        topYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'top line',\n        data: topYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(20, 265, 150, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n}\n\n\nexport function bottomPoints(regYAxis, yAxis) {\n    const selectedPoints = []\n    for (let i = 0; i < yAxis.length; i++) {\n        if (regYAxis[i] - yAxis[i] > 0) {\n            selectedPoints.push([(i),yAxis[i]])\n        }\n    }\n    const result = regression.linear(selectedPoints)\n    console.log(result)\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    console.log(`y=${factorA}x+${factorB}`)\n    let topYAxis = []\n    for (let i = 0; i < yAxis.length; i++) {\n        topYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'bottom line',\n        data: topYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(200, 100, 20, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n}\n\n \n"],"names":["$8d417ee3705b7cf0$export$d55b601b45fa2097","stockIndex","apiKey","startDate","endDate","url","concat","fetch","then","response","ok","Error","json","data","catch","error","console","$8d417ee3705b7cf0$export$80d477eab0d1430a","realTimeDay","Date","timestamp","$8d417ee3705b7cf0$export$e029667a62135fd0","close","change_p","$8d417ee3705b7cf0$export$df4cb166265252c7","date","year","getFullYear","month","getMonth","slice","day","getDate","$09b299ba83f5a694$export$8066b993bc416f6d","id","currentlyData","container","document","getElementById","innerHTML","map","insertAdjacentHTML","$6f9ff0ffe48f7b70$export$f49711a816bad7d2","$6f9ff0ffe48f7b70$export$88642ec15bb62ae0","xAxis","yAxis","ticker","ctx","Chart","type","labels","datasets","label","borderWidth","pointRadius","options","responsive","$6f9ff0ffe48f7b70$export$6db76765312617ac","historicalData","dailyData","chartData","i","length","push","log","$6f9ff0ffe48f7b70$export$59a1a2d9b46437c0","update","$f54804c3b4bf0931$export$d3ccb3cff973a6d1","$f54804c3b4bf0931$var$select1","exchange","$2bbc9d2401120afe$export$402eb89ff95bd3f4","Name","Code","OperatingMIC","Country","Currency","CountryISO2","CountryISO3","$f54804c3b4bf0931$export$6194e7371c12e1d0","$f54804c3b4bf0931$export$244074419d36f200","$f54804c3b4bf0931$export$6b8651e7c280689c","placeholder","text","$f54804c3b4bf0931$var$usExchangeList","Exchange","includes","i1","setData","SlimSelect","select","$13afad41afc070b3$export$5c4b4171546508a2","$b8f9b7833fa37166$var$dailyData","$b8f9b7833fa37166$var$historicalData","$b8f9b7833fa37166$var$newDataChart","$b8f9b7833fa37166$var$chartData","$b8f9b7833fa37166$var$endDate","$b8f9b7833fa37166$var$tickerList","$f54804c3b4bf0931$export$2ef10c4256d170a2","$713d3b0c1368eedd$export$534d495db1d2c72c","regressionData","regressionPoints","result","regression","linear","factorA","equation","factorB","functionPattern","regYAxis","borderColor","backgroundColor","$713d3b0c1368eedd$export$19e582736d5e7ca6","selectedPoints","topYAxis","i3","$713d3b0c1368eedd$export$7cd355bcc6b570a7","i4","flatpickr","dateFormat","maxDate","fp_incr","onClose","selectedDates","dateStr","undefined","$b8f9b7833fa37166$export$2ba01fb71ed41cb6","disabled","$b8f9b7833fa37166$var$token","$b8f9b7833fa37166$var$exchange","$b8f9b7833fa37166$var$ticker","$b8f9b7833fa37166$var$index","$b8f9b7833fa37166$var$today","$b8f9b7833fa37166$var$startDate","getTime","$b8f9b7833fa37166$var$days","paragraph","querySelector","markup","article","title","content","join","addEventListener","event","preventDefault","destroy","$b8f9b7833fa37166$var$regressionButton","textContent","select2Options","selectedEx","selectedIndex","value","i2","exchange1","selectedTicker"],"version":3,"file":"index.62078a20.js.map"}