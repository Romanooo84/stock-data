{"mappings":"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","sources":["src/js/graph.js","src/js/import_data.js","src/js/particular_data.js","src/index.js"],"sourcesContent":["\nexport function lineChart(xAxis, yAxis, ticker) {\n  const ctx = document.getElementById('myChart');\n\n  new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: xAxis,\n      datasets: [{\n        label: ticker,\n        data: yAxis,\n        borderWidth: 1\n      }]\n    },\n    options: {\n    }\n  });\n\n}\n\n// pobranie danych do wykresu\n\nexport function dataGraph(dailyData, historicalData) {\n  //przetworzenie bieżacej daty z unix na normalną\n        let currentDateUnix = dailyData.timestamp // pobranie daty\n        let currentDate = new Date(currentDateUnix * 1000) //przerobienie daty\n        // wybranie roku miesiąca i dnia\n        const year = currentDate.getFullYear();\n        const month = ('0' + (currentDate.getMonth() + 1)).slice(-2); // Dodanie 1, bo getMonth() zwraca miesiące od 0 do 11, oraz formatowanie do dwóch cyfr\n        const day = ('0' + currentDate.getDate()).slice(-2); // Formatowanie do dwóch cyfr\n        currentDate = `${year}-${month}-${day}`;\n        // pobranie ostatniej daty z osi czasu\n        let lastAxisDate = historicalData.xAxis[historicalData.xAxis.length - 1]\n        // sprawdzenie dat\n        if (currentDate > lastAxisDate) {\n          historicalData.xAxis.push(currentDate)\n          historicalData.yAxis.push(dailyData.close)\n        }\n        else if(currentDate === lastAxisDate) {\n          historicalData.yAxis.pop()\n          historicalData.yAxis.push(dailyData.close)\n        }\n}\n\n"," //pobieranie danych historycznych\nexport function historicalStockData(stockIndex,apiKey) {\n  // url dla danych historycznych\n  const url = `https://eodhd.com/api/eod/${stockIndex}?period=d&api_token=${apiKey}&fmt=json`;\n\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let historicalData = data;\n      return historicalData\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie danych codziennych\nexport function dailyStockData(stockIndex,apiKey) {\n  // url dla danych codziennych\n  const url = `https://eodhd.com/api/real-time/${stockIndex}?api_token=${apiKey}&fmt=json`;\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let dailyData = data;\n      return dailyData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie listy obsługiwanych giełd\nexport function exchangeList(apiKey) {\n  const url = `https://eodhd.com/api/exchanges-list/?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeData = data;\n      return exchangeData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n// pobieranie danych historycznych z interwałem 5m\nexport function interdayData(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/intraday/${stockIndex}?interval=5m&api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let interdayData = data;\n      return interdayData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  \n  \n}\n\n\n\n","export function particularData(id, stockIndex, currentlyData) {\n    let container = document.getElementById(`${id}`);\n    container.innerHTML=''\n    let map = `<p>${stockIndex} <span></span>${currentlyData}%</p>`\n    container.insertAdjacentHTML('beforeEnd', map)\n}","import { lineChart, dataGraph } from \"./js/graph.js\";\nimport { historicalStockData, dailyStockData, exchangeList, interdayData } from \"./js/import_data.js\";\nimport { particularData } from \"./js/particular_data.js\";\n\nconst token = '65fd2d716aebf2.80647901';\nconst exchange = 'WAR';\nconst ticker = 'ETFBM40TR';\nconst index = ticker.concat('.', exchange)\nlet chartData\n\n// pobranie danych o giełdach\nexchangeList(token)\n .then(exchangeData => console.log(exchangeData))\n .catch(error => console.error(error));\n\n //pobieranie danych historycznych z interwałem\ninterdayData(index, token)\n\n//wyświetlenie wykresu danych historycznych\nhistoricalStockData(index, token)\n  .then(historicalData => {\n    // zainicjowanie listy danych dla osi x i y\n    chartData = {\n      yAxis: [],\n      xAxis: []\n    };\n    // wstawienie danych do listy danych osi x i y\n    for (let i = 0; i < historicalData.length; i++) {\n      chartData.yAxis.push(historicalData[i].close);\n      chartData.xAxis.push(historicalData[i].date);\n    }\n    return { chartData }\n  })\n  .then(()=> {\n    dailyStockData(index, token)\n      .then(dailyData => {\n        dataGraph(dailyData, chartData)\n        particularData('currentData', ticker, dailyData.change_p)\n        lineChart(chartData.xAxis, chartData.yAxis, ticker)\n      })\n  })\n\nlet button = document.querySelector('.button')\nconsole.log(button)\nbutton.addEventListener('click', function () { console.log(chartData) })\n  \nconst timerId = setInterval(() => {\n  dailyStockData(index, token)\n  .then(dailyData => {\n        dataGraph(dailyData, chartData)\n        particularData('currentData', ticker, dailyData.change_p)\n    console.log('updated')\n      })\n}, 60000);\n"],"names":["$6f9ff0ffe48f7b70$export$dd1e1af624a72a5f","dailyData","historicalData","currentDateUnix","timestamp","currentDate","Date","year","getFullYear","month","getMonth","slice","day","getDate","concat","lastAxisDate","xAxis","length","push","yAxis","close","pop","$8d417ee3705b7cf0$export$80d477eab0d1430a","stockIndex","apiKey","url","fetch","then","response","ok","Error","json","data","catch","error","console","$09b299ba83f5a694$export$8066b993bc416f6d","id","currentlyData","container","document","getElementById","innerHTML","map","insertAdjacentHTML","$b8f9b7833fa37166$var$chartData","$b8f9b7833fa37166$var$token","$b8f9b7833fa37166$var$ticker","$b8f9b7833fa37166$var$index","exchangeData","log","i","date","chartData","ticker","ctx","change_p","Chart","type","labels","datasets","label","borderWidth","options","$b8f9b7833fa37166$var$button","querySelector","addEventListener","setInterval"],"version":3,"file":"index.924008f4.js.map"}