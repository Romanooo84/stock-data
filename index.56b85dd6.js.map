{"mappings":"YACO,SAASA,EAAUC,EAAOC,EAAOC,GACtCC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZ,IAAMI,EAAMC,SAASC,eAAe,WAEpC,IAAIC,MAAMH,EAAK,CACbI,KAAM,OACNC,KAAM,CACJC,OAAQX,EACRY,SAAU,CAAC,CACTC,MAAOX,EACPQ,KAAMT,EACNa,YAAa,KAGjBC,QAAS,CACPC,OAAQ,CACNC,EAAG,CACDC,aAAa,M,CChBvB,ICFoCC,EAAWC,EAEvCC,EDAFC,EAAQ,0BAERC,EAAS,YACTC,EAAQD,EAAOE,OAAO,IAFX,QCHmBN,EDchBK,ECd2BJ,EDcpBE,ECZnBD,EAAM,6BAA8DI,OAAjCN,EAAW,wBAA6BM,OAAPL,EAAO,aAG1EM,MAAML,GACVM,MAAK,SAAAC,GAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,M,IAEjBJ,MAAK,SAAAjB,GAIJ,OADqBA,C,IAGtBsB,OAAM,SAAAC,GAEC9B,QAAE8B,MAAM,iDAAkDA,E,KDPnEN,MAAK,SAAAO,GAKJ,IAJA,IAAIC,EAAY,CAChBlC,MAAO,GACPD,MAAO,IAEEoC,EAAI,EAAGA,EAAIF,EAAeG,OAAQD,IACzCD,EAAUlC,MAAMqC,KAAKJ,EAAeE,GAAGG,OACvCJ,EAAUnC,MAAMsC,KAAKJ,EAAeE,GAAGI,MAKzC,OAHAzC,EAAUoC,EAAUnC,MAAOmC,EAAUlC,MAAOsB,GAGrC,CAAEtB,MAAOkC,EAAUlC,MAAOD,MAAOmC,EAAUnC,M,IAEnD2B,MAAK,SAAAjB,GACJP,QAAQC,IAAI,iBAAoBM,EAAKT,OACnCE,QAAMC,IAAI,iBAAkBM,EAAKV,M,IAEpC2B,KCNI,SAAwBR,EAAWC,GAExC,IAAMC,EAAM,mCAA2DI,OAAxBN,EAAW,eAAoBM,OAAPL,EAAO,aAI7E,OAHDjB,QAAQC,IAAI,SACZD,QAAQC,IAAIiB,GAELK,MAAML,GACVM,MAAK,SAAAC,GAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,M,IAEjBJ,MAAK,SAAAjB,GAGJ,OADgBA,C,IAGjBsB,OAAM,SAAAC,GAEC9B,QAAE8B,MAAM,iDAAkDA,E,IDhB9D,CAAeT,EAAOF,IAC3BK,MAAK,SAAAc,G,OAAatC,QAAQC,IAAI,kBAAkBqC,E,IAChDT,OAAM,SAAAC,G,OAAS9B,QAAQ8B,MAAMA,E","sources":["src/js/graph.js","src/index.js","src/js/import_data.js"],"sourcesContent":["\nexport function lineChart(xAxis, yAxis, ticker) {\n  console.log(xAxis)\n  console.log(yAxis)\n  const ctx = document.getElementById('myChart');\n\n  new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: xAxis,\n      datasets: [{\n        label: ticker,\n        data: yAxis,\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n\n}","import { lineChart } from \"./js/graph\";\nimport { historicalStockData, dailyStockData, exchangeList } from \"./js/import_data\";\n\nconst token = '65fe0a1382dc25.48851936';\nconst exchange = 'WAR';\nconst ticker = 'ETFBM40TR';\nconst index = ticker.concat('.',exchange)\n\n// pobranie danych o giełdach\n/*exchangeList(token)\n .then(exchangeData => console.log(exchangeData))\n  .catch(error => console.error(error));\n*/\n\n//wyświetlenie wykresu danych historycznych\nhistoricalStockData(index, token)\n  .then(historicalData => {\n    let chartData = {\n    yAxis: [],\n    xAxis: []\n};\n    for (let i = 0; i < historicalData.length; i++) {\n      chartData.yAxis.push(historicalData[i].close);\n      chartData.xAxis.push(historicalData[i].date);\n    }\n    lineChart(chartData.xAxis, chartData.yAxis, ticker)\n    //chart.canvas.parentNode.style.height = '1280px';\n    //chart.canvas.parentNode.style.width = '1280px';\n    return { yAxis: chartData.yAxis, xAxis: chartData.xAxis }\n  })\n  .then(data => {\n    console.log(\"Wartość yAxis:\", data.yAxis);\n    console.log(\"Wartość xAxis:\", data.xAxis);\n  })\n  .then(dailyStockData(index, token))\n  .then(dailyData => console.log('Dane codzienne:',dailyData))\n  .catch(error => console.error(error));\n\n"," //pobieranie danych historycznych\nexport function historicalStockData(stockIndex,apiKey) {\n  // url dla danych historycznych\n  const url = `https://eodhd.com/api/eod/${stockIndex}?period=d&api_token=${apiKey}&fmt=json`;\n\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      // Tutaj możesz pracować na danych, np. wyświetlić je w konsoli\n      //console.log(data);\n      let historicalData = data;\n      return historicalData\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie danych codziennych\nexport function dailyStockData(stockIndex,apiKey) {\n  // url dla danych codziennych\n  const url = `https://eodhd.com/api/real-time/${stockIndex}?api_token=${apiKey}&fmt=json`;\n  console.log('start')\n  console.log(url)\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      // Tutaj możesz pracować na danych, np. wyświetlić je w konsoli\n      let dailyData = data;\n      return dailyData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie listy obsługiwanych giełd\nexport function exchangeList(apiKey) {\n  const url = `https://eodhd.com/api/exchanges-list/?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      // Tutaj możesz pracować na danych, np. wyświetlić je w konsoli\n      let exchangeData = data;\n      return exchangeData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n"],"names":["$6f9ff0ffe48f7b70$export$88642ec15bb62ae0","xAxis","yAxis","ticker","console","log","ctx","document","getElementById","Chart","type","data","labels","datasets","label","borderWidth","options","scales","y","beginAtZero","stockIndex","apiKey","url","$b8f9b7833fa37166$var$token","$b8f9b7833fa37166$var$ticker","$b8f9b7833fa37166$var$index","concat","fetch","then","response","ok","Error","json","catch","error","historicalData","chartData","i","length","push","close","date","dailyData"],"version":3,"file":"index.56b85dd6.js.map"}