{"mappings":"AACO,SAASA,EAAoBC,EAAWC,EAAQC,EAAWC,GAI/D,OAAMC,MAFK,6BAA6BJ,UAAmBE,QAAgBC,wBAA8BF,cAGvGI,MAAKC,IAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,MAAM,IAEvBJ,MAAKK,GACiBA,IAGtBC,OAAMC,IAECC,QAAED,MAAM,iDAAkDA,EAAM,G,CAKrE,SAASE,EAAed,EAAWC,GAIvC,OAAMG,MAFK,mCAAmCJ,eAAwBC,cAGpEI,MAAKC,IAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,MAAM,IAEvBJ,MAAKK,IACJ,IAAIK,EAAa,IAAIC,KAAsB,IAAjBN,EAAKO,WAC/BF,EAAcG,EAAWH,GACzBI,MAAQT,EAAKS,MACb,IAAIC,EAAWV,EAAKU,SACpB,MAAO,C,YAAEL,E,MAAaI,M,SAAOC,EAAU,IAExCT,OAAMC,IAECC,QAAED,MAAM,iDAAkDA,EAAM,G,CAIrE,SAASS,EAAkBC,EAAaC,GAC7C,IAAIC,EAAgB,GACpB,IAAK,IAAIC,EAAE,EAAGA,EAAEH,EAAYI,OAAQD,IACxB,IAANA,EACFD,EAAgBF,EAAYG,GAAG,MAG/BD,GADa,IAANC,EACyB,GAAGH,EAAYG,KAGf,IAAIH,EAAYG,KAKpD,OAAOrB,MAFK,mCAAmCoB,eAA2BD,cAGvElB,MAAKC,IAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,MAAM,IAEvBJ,MAAKK,GACGA,IAERC,OAAMC,IAECC,QAAED,MAAM,iDAAkDA,EAAM,G,CAwErE,SAASe,EAAK3B,EAAYC,GAE/B,OAAOG,MADK,8BAA8BJ,kCAA2CC,cAEpFI,MAAKC,IAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,MAAM,IAEvBJ,MAAKK,GACGA,IAERC,OAAMC,IAECC,QAAED,MAAM,iDAAkDA,EAAM,G,CAMnE,SAASM,EAAWU,GACzB,MAAMC,EAAOD,EAAKE,cACZC,GAAS,KAAOH,EAAKI,WAAa,IAAIC,OAAM,GAC5CC,GAAO,IAAMN,EAAKO,WAAWF,OAAM,GAEzC,OADAL,EAAO,GAAGC,KAAQE,KAASG,G,CClLtB,SAASE,EAAeC,EAAIrC,EAAYsC,EAAeC,GAC1D,IAAIC,EAAYC,SAASC,eAAe,GAAGL,KAC3CG,EAAUG,UAAU,GACpB,IAAIC,EAAM,iBACL5C,WAAoBsC,EAAclB,4JAGYmB,EAAe,GAAGX,mEACjBW,EAAe,GAAGM,oEACjBN,EAAe,GAAGpB,oEACnBoB,EAAe,GAAGO,kEACnBP,EAAe,GAAGQ,oEACfR,EAAe,GAAGS,oIAGpBT,EAAeA,EAAeb,OAAO,GAAGE,mEACxCW,EAAeA,EAAeb,OAAO,GAAGmB,oEACvCN,EAAeA,EAAeb,OAAO,GAAGP,oEACzCoB,EAAeA,EAAeb,OAAO,GAAGoB,kEACzCP,EAAeA,EAAeb,OAAO,GAAGqB,oEACrCR,EAAeA,EAAeb,OAAO,GAAGsB,8DAK9FR,EAAUS,mBAAmB,YAAaL,E,CCtBvC,IAAIM,EAEJ,SAASC,EAAUC,EAAOC,EAAOC,GACtC,MAAMC,EAAMd,SAASC,eAAe,WAiBpC,OAfAQ,EAAe,IAAIM,MAAMD,EAAK,CAC5BE,KAAM,OACN/C,KAAM,CACJgD,OAAQN,EACRO,SAAU,CAAC,CACTC,MAAON,EACP5C,KAAM2C,EACNQ,YAAa,EACbC,YAAa,KAGjBC,QAAS,CACPC,YAAY,KAGTd,C,CAyBF,SAASe,EAAW1B,EAAgB2B,GAErC,IAAIC,EAAY,CACdd,MAAO,GACPD,MAAO,IAGb,IAAK,IAAI3B,EAAI,EAAGA,EAAIc,EAAeb,OAAQD,IACN,OAA3Bc,EAAed,GAAGN,OAClBgD,EAAUd,MAAMe,KAAK7B,EAAed,GAAGN,OACvCgD,EAAUf,MAAMgB,KAAK7B,EAAed,GAAGG,MAQ7C,OANAW,EAAeA,EAAeb,OAAS,GAAGE,MAAQsC,EAAUnD,aACvC,OAAnBmD,EAAU/C,OACdgD,EAAUd,MAAMe,KAAKF,EAAU/C,OAC/BgD,EAAUf,MAAMgB,KAAKF,EAAUnD,cAE5BF,QAAQwD,IAAI,0BACNF,C,CAwBN,SAASG,IACdpB,EAAaxC,KAAKiD,SAAS,GAAGE,YAAc,EAC5CX,EAAaxC,KAAKiD,SAAS,GAAGE,YAAc,EAC5CX,EAAaxC,KAAKiD,SAAS,GAAGE,YAAc,EAC5CX,EAAaqB,Q,CC9FR,MAAMC,EAAkB,CAC7B,CACEC,KAAQ,aACRC,KAAQ,KACRC,aAAgB,aAChBC,QAAW,MACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,KACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,eACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,uBACRC,KAAQ,IACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,uBACRC,KAAQ,QACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,sBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,qBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,qBACRC,KAAQ,IACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,4BACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,aACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,iBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,oBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,qBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,cACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,WACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,qBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,cACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,iBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,oBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,sBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,sBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,qBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,gCACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,0BACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,6BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,+BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,WACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,yBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,iBACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,OACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,2BACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,WACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,oBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,0BACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,uBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,+BACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,cACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,8BACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,4BACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,8BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,0BACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,uBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,SACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,0BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,4BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,cACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,yBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,WACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,iCACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,eACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,yBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,oBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,WACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,0BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,kBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mCACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,0BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,QACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,yBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,iBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,OACRC,aAAgB,OAChBC,QAAW,WACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,2BACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,YACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,qBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,YACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,KACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,wBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,sBACRC,KAAQ,MACRC,aAAgB,KAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,sBACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,2BACRC,KAAQ,MACRC,aAAgB,OAChBC,QAAW,OACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,gCACRC,KAAQ,QACRC,aAAgB,KAChBC,QAAW,UACXC,SAAY,UACZC,YAAe,GACfC,YAAe,IAEjB,CACEN,KAAQ,+BACRC,KAAQ,SACRC,aAAgB,KAChBC,QAAW,UACXC,SAAY,MACZC,YAAe,GACfC,YAAe,IAEjB,CACEN,KAAQ,0BACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,SACXC,SAAY,MACZC,YAAe,KACfC,YAAe,OAEjB,CACEN,KAAQ,mBACRC,KAAQ,KACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,UACZC,YAAe,GACfC,YAAe,IAEjB,CACEN,KAAQ,QACRC,KAAQ,QACRC,aAAgB,OAChBC,QAAW,UACXC,SAAY,UACZC,YAAe,GACfC,YAAe,IAEhB,CACCN,KAAQ,2BACRC,KAAQ,SCtrBL,IAIIM,EACPC,EALOC,EAAWzC,SAASC,eAAe,WACnCyC,EAAc1C,SAASC,eAAe,WACtC0C,EAAiB,CAAC,CAAEC,aAAe,EAAMC,KAAQ,4BAA4BC,MAAS,iBAMjG,IAAIC,EAAe,GJiGZ,IAA4BC,EAASxF,GAATwF,EI/FhB,KJ+FyBxF,EIlG7B,0BJqGNG,MAFK,8CAA8CqF,eAAsBxF,cAG7EI,MAAKC,IAEH,IAAIA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAGhB,OAAKF,EAASG,MAAM,IAEvBJ,MAAKK,GACkBA,IAGvBC,OAAMC,IAECC,QAAED,MAAM,iDAAkDA,EAAM,KIhHzEP,MAAKK,GAAQsE,EAAkBtE,IAC/BL,MAAK,KACJ,IAAK,IAAIoB,EAAI,EAAGA,EAAIuD,EAAgBtD,OAAQD,IACrCuD,EAAgBvD,GAAGiE,WACjBF,EAAeG,SAASX,EAAgBvD,GAAGiE,WAC9CF,EAAepB,KAAKY,EAAgBvD,GAAGiE,WAI7C,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAe9D,OAAQkE,IACzCR,EAAehB,KAAK,CAAEkB,KAAM,eAAgBE,EAAeI,MAAO,IAGrEvF,MAAK,KACJ,IAAK,IAAIoB,EAAI,EAAGA,EAAI+C,EAAiB9C,OAAQD,IACX,MAA5B+C,EAAiB/C,GAAGiD,MACtBU,EAAehB,KAAK,CAAEkB,KAAMd,EAAiB/C,GAAGgD,MAAO,IAI5DpE,MAAK,KACJ4E,EAAQY,QAAST,EAAe,IAGlCH,EAAQ,IAAIa,WAAW,CACrBC,OAAQ,WACRrF,KAAM0E,EACNrB,QAAS,KAON,IC9CIiC,ECSPC,EACAC,EACAC,EACAC,EACAC,EACAC,EFgCOC,EAAQ,IAAIT,WAAW,CAChCC,OAAQ,WACRrF,KA5C0B,CAAC,CAAE2E,aAAe,EAAMC,KAAQ,kCAAmCC,MAAS,mBGHjG,SAASiB,EAAiBnD,GAC7B,IAAIoD,EAAiB,GACrB,IAAK,IAAIhF,EAAI,EAAGA,EAAI4B,EAAM3B,OAAQD,IAAI,CAClC,IAAIiF,EAAmB,CAACjF,EAAI,EAAG4B,EAAM5B,IACrCgF,EAAerC,KAAKsC,E,CAExB,MAAMC,EAASC,WAAWC,OAAOJ,GAC3BK,EAAUH,EAAOI,SAAS,GAC1BC,EAAUL,EAAOI,SAAS,GAChC,IAAIE,EAAgB,KAAKH,MAAYE,IACjCE,EAAW,GACf,IAAK,IAAItB,EAAI,EAAGA,EAAIvC,EAAM3B,OAAQkE,IAC9BsB,EAAS9C,KAAK0C,EAAUlB,EAAIoB,GAYhC,OAVA9D,EAAaxC,KAAKiD,SAASS,KAAK,CAC5BR,MAAO,oBACPlD,KAAMwG,EACNrD,YAAa,EACbC,YAAa,EACbqD,YAAa,wBACbC,gBAAiB,2BAErBlE,EAAaqB,SAEN,C,SAAC2C,E,gBAAUD,E,CAgCf,SAASI,EAAYH,EAAU7D,GAClC,MAAMiE,EAAiB,GACvB,IAAK,IAAI7F,EAAI,EAAGA,EAAI4B,EAAM3B,OAAQD,IAC1B4B,EAAM5B,GAAKyF,EAASzF,GAAK,GACzB6F,EAAelD,KAAK,CAAE3C,EAAG4B,EAAM5B,KAGvC,MAAMkF,EAASC,WAAWC,OAAOS,GAC3BR,EAAUH,EAAOI,SAAS,GAC1BC,EAAUL,EAAOI,SAAS,GAChC,IAAIQ,EAAW,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAInE,EAAM3B,OAAQ8F,IAC9BD,EAASnD,KAAK0C,EAAUU,EAAIR,GAEhC9D,EAAaxC,KAAKiD,SAASS,KAAK,CAC5BR,MAAO,WACPlD,KAAM6G,EACN1D,YAAa,EACbC,YAAa,EACbqD,YAAa,wBACbC,gBAAiB,2BAErBlE,EAAaqB,Q,CAIV,SAASkD,EAAaP,EAAU7D,GACnC,MAAMiE,EAAiB,GACvB,IAAK,IAAI7F,EAAI,EAAGA,EAAI4B,EAAM3B,OAAQD,IAC1ByF,EAASzF,GAAK4B,EAAM5B,GAAK,GACzB6F,EAAelD,KAAK,CAAE3C,EAAG4B,EAAM5B,KAGvC,MAAMkF,EAASC,WAAWC,OAAOS,GAC3BR,EAAUH,EAAOI,SAAS,GAC1BC,EAAUL,EAAOI,SAAS,GAChC,IAAIQ,EAAW,GACf,IAAK,IAAIG,EAAI,EAAGA,EAAIrE,EAAM3B,OAAQgG,IAC9BH,EAASnD,KAAK0C,EAAUY,EAAIV,GAEhC9D,EAAaxC,KAAKiD,SAASS,KAAK,CAC5BR,MAAO,cACPlD,KAAM6G,EACN1D,YAAa,EACbC,YAAa,EACbqD,YAAa,wBACbC,gBAAiB,2BAErBlE,EAAaqB,Q,CFvGjBoD,UAAU,cAAe,CACrBC,WAAY,QACdC,SAAS,IAAI7G,MAAO8G,QAAQ,GAC5BC,QAAS,SAAUC,EAAeC,GAChCjC,EAAeiC,EACKC,MAAhBlC,IACJmC,EAAOC,UAAS,E,ICSpB,IAWIC,EAXAC,EAAW,MACXC,EAAS,MACTC,EAAQD,EAAOE,OAAO,IAAKH,GAC3BI,EAAQ,IAAI1H,KAEZ2H,EAAY,IAAI3H,KAAK0H,EAAME,UAAaC,QAQ5CxC,EAAUnF,EAAWwH,GACrBC,EAAYzH,EAAWyH,GAEvB,IAAIG,EAAkB,CAVT,UACA,YACA,UACA,eACA,gBAOTC,EAAatG,SAASuG,cAAc,eACxC,MAAMC,EAAYxG,SAASuG,cAAc,mBAErCF,EAAkBpH,OAAQ,IAC5BuH,EAAUb,UAAS,GAGrB/G,EAAkByH,EAzBJ,2BA0BXzI,MAAKK,IACJ,IAAIwI,EAAUxI,EACdqI,EAAWpG,UAAY,GACvB,MAAMwG,EAASD,EAAQtG,KAAKwG,IAC5B,IAAIC,EAAc,GAMlB,OALID,EAAOhI,SAAW,EAClBiI,EAAc,aACPD,EAAOhI,SAAW,IACzBiI,EAAc,eAEX,oGAC0DD,EAAOE,uCAC/CF,EAAOE,wJACFF,EAAOE,uLACPF,EAAOE,mSAGQF,EAAOE,uDACVF,EAAOE,gEACAF,EAAOjI,+EACOkI,MAAgBD,EAAOhI,0EAEvE,IACdmI,KAAK,IAEJR,EAAW9F,mBAAmB,YAAakG,GAC3Cd,EAAY5F,SAAS+G,iBAAiB,iBAAiB,IAE1D7I,OAAMC,IACLC,QAAQD,MAAM,2CAAgDA,EAAM,IAGxE6I,aAAY,KACZpI,EAAkByH,EA3DJ,2BA4DXzI,MAAKK,IACJ,IAAIwI,EAAUxI,EACVgJ,EAAc,GAClBR,EAAQS,SAAQC,IACMF,EAApBE,EAAQxI,SAAS,EAAe,aAAyB,aAAa,IAExE2H,EAAWpG,UAAY,GACvB,MAAMwG,EAASD,EAAQtG,KAAKiH,IAC5B,IAAIR,EAAc,GAMhB,OALEQ,EAAOzI,SAAW,EAClBiI,EAAc,aACPQ,EAAOzI,SAAW,IACzBiI,EAAc,eAET,oGACwDQ,EAAOP,uCAC/CO,EAAOP,wJACFO,EAAOP,uLACPO,EAAOP,mSAGQO,EAAOP,uDACVO,EAAOP,gEACAO,EAAO1I,+EACOkI,MAAgBQ,EAAOzI,0EAEvE,IACdmI,KAAK,IAEJR,EAAW9F,mBAAmB,YAAakG,EAAO,IAErDxI,OAAMC,IACLC,QAAQD,MAAM,2CAAgDA,EAAM,GACpE,GACF,KAGFmI,EAAWe,iBAAiB,SAAQ,SAAUC,GAC1CA,EAAMC,iBACN,IAAIC,EAAeF,EAAMG,OAAOC,WAAW9H,GAC3CyG,EAAoBA,EAAmBsB,QAAOC,GAAUA,IAAWJ,IACnE5I,EAAkByH,EArGR,2BAsGTzI,MAAKK,IAEJ,MAAMyI,EADQzI,EACSkC,KAAK0H,IAC5B,IAAIjB,EAAc,GAMlB,OALIiB,EAAOlJ,SAAW,EAClBiI,EAAc,aACPiB,EAAOlJ,SAAW,IACzBiI,EAAc,eAEX,sGAC0DiB,EAAOhB,yCAC/CgB,EAAOhB,0JACFgB,EAAOhB,yLACPgB,EAAOhB,ySAGQgB,EAAOhB,yDACVgB,EAAOhB,kEACAgB,EAAOnJ,iFACOkI,MAAgBiB,EAAOlJ,oEAEvE,IACZmI,KAAK,IAKN,GAHAR,EAAWpG,UAAY,GACvBoG,EAAW9F,mBAAmB,YAAakG,GAC3Cd,EAAY5F,SAAS+G,iBAAiB,kBAClCnB,EAAU3G,OAAO,EACrB,IAAK,IAAID,EAAI,EAAGA,EAAI4G,EAAU3G,OAAQD,IACpC4G,EAAU5G,GAAG2G,UAAW,EAExBU,EAAkBpH,OAAQ,IAC5BuH,EAAUb,UAAS,EAAK,IAG3BzH,OAAMC,IACLC,QAAQD,MAAM,2CAA4CA,EAAM,G,IAItEb,EAAoByI,EA9IN,0BA8IoBG,EAAWtC,GAC1ChG,MAAKK,IACJwF,EAAiBxF,EACVI,EAAe0H,EAjJZ,8BAmJXnI,MAAKK,IACJuF,EAAYvF,EACZG,QAAQwD,IAAI4B,GACL7D,EAAe,cAAeoG,EAAOvC,EAAWC,MAExD7F,MAAK,IAAe4D,EAAWiC,EAAgBD,KAC/C5F,MAAKK,IACJ0F,EAAY1F,EACLyC,EAAUiD,EAAUhD,MAAOgD,EAAU/C,MAAOkF,MAEpDlI,MAAKK,IACJ,MAAMwG,SAAEA,GAAWV,EAAiBJ,EAAU/C,OAC9CgE,EAAYH,EAAUd,EAAU/C,OAChCoE,EAAcP,EAAUd,EAAU/C,OAClC8C,EAAezF,CAAI,IAEpBL,MAAK,IAAYsB,EAAK6G,EAnKX,6BAoKXnI,MAAKK,IACJ,IAAI6J,EAAY9H,SAASuG,cAAc,SACvC,MAAMG,EAAOzI,EAAKkC,KAAK4H,GACrB,4BAA4BA,EAAQC,gBAAgBD,EAAQ5I,sCAAsC4I,EAAQE,4BAC3GnB,KAAK,IACNgB,EAAUtH,mBAAmB,YAAakG,EAAO,IAG9C,IAAIhB,EAAS1F,SAASuG,cAAc,WAC3Cb,EAAO2B,iBAAiB,SAAS,SAAUC,GACzCA,EAAMC,iBACNjK,EAAoByI,EA/KR,0BA+KsBmC,aAAahC,EAAWtC,GACzDhG,MAAKK,IACJwF,EAAiBxF,EACVI,EAAe0H,EAlLZ,8BAoLXnI,MAAKK,IACJuF,EAAYvF,EACL0B,EAAe,cAAeoG,EAAOvC,EAAWC,MAExD7F,MAAK,IAAe4D,EAAWiC,EAAgBD,KAC/C5F,MAAKK,IACJ0F,EAAY1F,EACZyF,EAAayE,UACNzH,EAAUiD,EAAUhD,MAAOgD,EAAU/C,MAAOkF,MAElDlI,MAAKK,IACJ,MAAMwG,SAAEA,GAAWV,EAAiBJ,EAAU/C,OAC9CgE,EAAYH,EAAUd,EAAU/C,OAChCoE,EAAaP,EAAUd,EAAU/C,OACjC8C,EAAezF,EACsB,0BAAjCmK,EAAiBC,aAClBxG,GAAW,G,IAIpB,MAAMuG,EAAmBpI,SAASuG,cAAc,sBAChD6B,EAAiBf,iBAAiB,SAAS,SAAUC,GACnDA,EAAMC,iBAC+B,0BAAjCa,EAAiBC,aACnBxG,IACAuG,EAAiBC,YAAc,yBAES,0BAAjCD,EAAiBC,cJ9H1B5H,EAAaxC,KAAKiD,SAAS,GAAGE,YAAc,EAC5CX,EAAaxC,KAAKiD,SAAS,GAAGE,YAAc,EAC5CX,EAAaxC,KAAKiD,SAAS,GAAGE,YAAc,EAC5CX,EAAaqB,SI6HXsG,EAAiBC,YAAc,wB,IAInC7B,EAAUa,iBAAiB,SAAQ,KACjChB,EAAkB1E,KAAKoE,GACvBnH,EAAkByH,EAvNN,2BAwNXzI,MAAKK,IACJ,IAAIwI,EAAUxI,EACdqI,EAAWpG,UAAY,GACvB,MAAMwG,EAASD,EAAQtG,KAAKmI,IAC5B,IAAI1B,EAAc,GAMlB,OALI0B,EAAO3J,SAAW,EAClBiI,EAAc,aACP0B,EAAO3J,SAAW,IACzBiI,EAAc,eAEX,oGAC0D0B,EAAOzB,uCAC/CyB,EAAOzB,wJACFyB,EAAOzB,uLACPyB,EAAOzB,mSAGQyB,EAAOzB,uDACVyB,EAAOzB,gEACAyB,EAAO5J,+EACOkI,MAAgB0B,EAAO3J,+EAGvE,IACdmI,KAAK,IAEJR,EAAWpG,UAAY,GACvBoG,EAAW9F,mBAAmB,YAAakG,GACvCL,EAAkBpH,OAAQ,IAC5BuH,EAAUb,UAAS,EAAI,GAEvB,IAGRlD,EAAS4E,iBAAiB,UAAU,SAAUC,GAC5CA,EAAMC,iBACN,IAAIgB,EAAiB,GACjBC,EAAa/F,EAASnB,QAAQmB,EAASgG,eAAeC,MAC1D,GAAKF,EAAWtF,SAAS,eAgBpB,GAAIsF,EAAWtF,SAAS,cAAe,CAC1C,IAAK,IAAIlE,EAAI,EAAGA,EAAIuD,EAAgBtD,OAAQD,IACtCwJ,EAAWtF,SAASX,EAAgBvD,GAAGiE,WACrCsF,EAAe5G,KAAK,CAAEkB,KAAM,GAAGN,EAAgBvD,GAAGgD,SAG1D6B,EAAatB,EACbuB,EAAQV,QAAQmF,E,OAtBhB,IAAK,IAAIpF,EAAI,EAAGA,EAAIpB,EAAiB9C,OAAQkE,IAC3C,GAAIpB,EAAiBoB,GAAGnB,OAASwG,EAAY,CAC3C,IAAIG,EAAW5G,EAAiBoB,GAAGlB,KACnCtE,MAAM,8CAA8CgL,gDACjD/K,MAAKK,GAAQA,EAAKD,SAClBJ,MAAKK,IACJ4F,EAAa5F,EACb,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAKgB,OAAQD,IAC/BuJ,EAAe5G,KAAK,CAAEkB,KAAM,GAAG5E,EAAKe,GAAGgD,SAEzC8B,EAAQV,QAAQmF,EAAe,G,KAgBzC7F,EAAa2E,iBAAiB,UAAWC,IAEvC,GADFA,EAAMC,iBACoD9B,MAApD/C,EAAapB,QAAQoB,EAAa+F,eAA6B,CACjE,IAAIG,EAAiBlG,EAAapB,QAAQoB,EAAa+F,eAAeC,MAEtE,IAAK,IAAI1J,EAAI,EAAGA,EAAI6E,EAAW5E,OAASD,IAClC4J,GAAkB/E,EAAW7E,GAAGgD,OAGlC8D,EAASjC,EAAW7E,GAAGiD,KAErB4D,EAD4B,QAA1BhC,EAAW7E,GAAGmD,SAA8C,SAAzB0B,EAAW7E,GAAGiE,SACxC,KAGAY,EAAW7E,GAAGiE,SAG3B8C,EAAQD,EAAOE,OAAO,IAAKH,G","sources":["src/js/import_data.js","src/js/particular_data.js","src/js/graph.js","src/js/exchange_list.js","src/js/select.js","src/js/date-time.js","src/index.js","src/js/math.js"],"sourcesContent":[" //pobieranie danych historycznych\nexport function historicalStockData(stockIndex,apiKey, startDate, endDate) {\n  // url dla danych historycznych\n  const url = `https://eodhd.com/api/eod/${stockIndex}?from=${startDate}&to=${endDate}&period=d&api_token=${apiKey}&fmt=json`;  \n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let historicalData = data;\n      return historicalData\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie danych codziennych\nexport function dailyStockData(stockIndex,apiKey) {\n  // url dla danych codziennych\n  const url = `https://eodhd.com/api/real-time/${stockIndex}?api_token=${apiKey}&fmt=json`;\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let realTimeDay= new Date(data.timestamp * 1000);\n      realTimeDay = createDate(realTimeDay)\n      close = data.close\n      let change_p = data.change_p\n      return { realTimeDay, close, change_p };\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function multipleDailyData(tickersList, API) {\n  let UrlTickerData = ''\n  for (let i=0; i<tickersList.length; i++){\n    if (i === 0){\n      UrlTickerData = tickersList[i]+'?s='\n    }\n    else if (i === 1){\n      UrlTickerData = UrlTickerData + `${tickersList[i]}`\n    }\n    else {\n      UrlTickerData = UrlTickerData + `,${tickersList[i]}`\n    }\n  }\n  const url = `https://eodhd.com/api/real-time/${UrlTickerData}&api_token=${API}&fmt=json`\n  \n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      return data;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie listy obsługiwanych giełd\nexport function exchangeList(apiKey) {\n  const url = `https://eodhd.com/api/exchanges-list/?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeData = data;\n      return exchangeData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function exchangeSymbolList(exchange,apiKey) {\n  const url = `https://eodhd.com/api/exchange-symbol-list/${exchange}?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeSymbols = data;\n      return exchangeSymbols;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n// pobieranie danych historycznych z interwałem 5m\nexport function interdayData(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/intraday/${stockIndex}?interval=5m&api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let interdayData = data;\n      return interdayData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\nexport function news(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/news?${stockIndex}S&offset=0&limit=10&api_token=${apiKey}&fmt=json`\n  return fetch(url)\n  .then(response => {\n    // Sprawdzamy, czy odpowiedź jest poprawna\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    // Parsujemy odpowiedź jako JSON i zwracamy ją\n    return response.json();\n  })\n  .then(data => {\n    return data\n  })\n  .catch(error => {\n    // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n    console.error('There was a problem with your fetch operation:', error);\n  });\n}\n\n\n\nexport function createDate(date) {\n  const year = date.getFullYear();\n  const month = ('0' + (date.getMonth() + 1)).slice(-2); // Dodanie 1, bo getMonth() zwraca miesiące od 0 do 11, oraz formatowanie do dwóch cyfr\n  const day = ('0' + date.getDate()).slice(-2); // Formatowanie do dwóch cyfr\n  date = `${year}-${month}-${day}`;\n  return date\n}\n\n\n\n","export function particularData(id, stockIndex, currentlyData, historicalData) {\n    let container = document.getElementById(`${id}`);\n    container.innerHTML=''\n    let map = `<div>\n    <p>${stockIndex} <span>${currentlyData.change_p}%</span></p>\n        <div class='ticker-data'>\n            <div class='historical-data'>\n                <p class='historical-paragraph-date'>${historicalData[0].date}</p>\n                <p class='historical-paragraph'>Open: ${historicalData[0].open}</p>\n                <p class='historical-paragraph'>Close: ${historicalData[0].close}</p>\n                <p class='historical-paragraph'>High: ${historicalData[0].high}</p>\n                <p class='historical-paragraph'>Low: ${historicalData[0].low}</p>\n                <p class='historical-paragraph'>Volume: ${historicalData[0].volume}</p>\n            </div>\n            <div class='historical-data'>\n                <p class='historical-paragraph-date'> ${historicalData[historicalData.length-1].date}</p>\n                <p class='historical-paragraph'>Open: ${historicalData[historicalData.length-1].open}</p>\n                <p class='historical-paragraph'>Close: ${historicalData[historicalData.length-1].close}</p>\n                <p class='historical-paragraph'>High: ${historicalData[historicalData.length-1].high}</p>\n                <p class='historical-paragraph'>Low: ${historicalData[historicalData.length-1].low}</p>\n                <p class='historical-paragraph'>Volume: ${historicalData[historicalData.length-1].volume}</p>\n            </div>\n        </div> \n    </div>`\n\n    container.insertAdjacentHTML('beforeEnd', map)\n}\n","import { historicalStockData, dailyStockData, createDate, interdayData } from \"./import_data.js\";\nimport { particularData } from \"./particular_data.js\";\n\nexport let newDataChart\n\nexport function lineChart(xAxis, yAxis, ticker) {\n  const ctx = document.getElementById('myChart');\n\n  newDataChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: xAxis,\n      datasets: [{\n        label: ticker,\n        data: yAxis,\n        borderWidth: 3,\n        pointRadius: 0,\n      }]\n    },\n    options: {\n      responsive: true\n    }\n  });\n  return newDataChart\n}\n\n//dodawanie danych do wykresu\n\nexport function addData(chart, label, newData) {\n  chart.data.labels.push(label);\n  chart.data.datasets.forEach((dataset) => {\n    dataset.data.push(newData);\n  });\n  chart.update();\n}\n  //usuwanie danych z wykresu\nexport function updateChart(chart,newXAxis, newYAxis) {\n  chart.data.labels = newYAxis\n  chart.data.datasets[0].data=newXAxis\n  chart.update();\n}\n\nexport function graphDelete(newDataChart) {\n  newDataChart.destroy()\n}\n\n// pobranie danych do wykresu\n\nexport function createAxis(historicalData, dailyData) {\n   // Zainicjowanie listy danych dla osi x i y\n      let chartData = {\n        yAxis: [],\n        xAxis: []\n  };\n      // Wstawienie danych do listy danych osi x i y\n  for (let i = 0; i < historicalData.length; i++) {\n        if (historicalData[i].close !=='NA')\n            chartData.yAxis.push(historicalData[i].close);\n            chartData.xAxis.push(historicalData[i].date);\n  }\n  if (historicalData[historicalData.length - 1].date != dailyData.realTimeDay) {\n    if (dailyData.close !=='NA')\n    chartData.yAxis.push(dailyData.close);\n    chartData.xAxis.push(dailyData.realTimeDay);\n  }\n  else{console.log('brak aktualnych danych')}\n      return chartData;\n    }\n\nexport function createGraph(index, token, startDate, endDate, ticker) {\n historicalStockData(index, token, startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n  .then(data => {\n    newDataChart=data\n  })\n  \n}\n\nexport function hideChart() {\n  newDataChart.data.datasets[1].borderWidth = 0\n  newDataChart.data.datasets[2].borderWidth = 0\n  newDataChart.data.datasets[3].borderWidth = 0\n  newDataChart.update()\n}\n\nexport function showChart() {\n  newDataChart.data.datasets[1].borderWidth = 1\n  newDataChart.data.datasets[2].borderWidth = 1\n  newDataChart.data.datasets[3].borderWidth = 1\n  newDataChart.update()\n}\n\n","export const exchangeListJson= [\r\n  {\r\n    \"Name\": \"USA Stocks\",\r\n    \"Code\": \"US\",\r\n    \"OperatingMIC\": \"XNAS, XNYS\",\r\n    \"Country\": \"USA\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"US\",\r\n    \"CountryISO3\": \"USA\"\r\n  },\r\n  {\r\n    \"Name\": \"London Exchange\",\r\n    \"Code\": \"LSE\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"GBP\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Toronto Exchange\",\r\n    \"Code\": \"TO\",\r\n    \"OperatingMIC\": \"XTSE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"NEO Exchange\",\r\n    \"Code\": \"NEO\",\r\n    \"OperatingMIC\": \"NEOE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"TSX Venture Exchange\",\r\n    \"Code\": \"V\",\r\n    \"OperatingMIC\": \"XTSX\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"Berlin Exchange\",\r\n    \"Code\": \"BE\",\r\n    \"OperatingMIC\": \"XBER\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hamburg Exchange\",\r\n    \"Code\": \"HM\",\r\n    \"OperatingMIC\": \"XHAM\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"XETRA Stock Exchange\",\r\n    \"Code\": \"XETRA\",\r\n    \"OperatingMIC\": \"XETR\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Dusseldorf Exchange\",\r\n    \"Code\": \"DU\",\r\n    \"OperatingMIC\": \"XDUS\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hanover Exchange\",\r\n    \"Code\": \"HA\",\r\n    \"OperatingMIC\": \"XHAN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Munich Exchange\",\r\n    \"Code\": \"MU\",\r\n    \"OperatingMIC\": \"XMUN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Stuttgart Exchange\",\r\n    \"Code\": \"STU\",\r\n    \"OperatingMIC\": \"XSTU\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Frankfurt Exchange\",\r\n    \"Code\": \"F\",\r\n    \"OperatingMIC\": \"XFRA\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Luxembourg Stock Exchange\",\r\n    \"Code\": \"LU\",\r\n    \"OperatingMIC\": \"XLUX\",\r\n    \"Country\": \"Luxembourg\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"LU\",\r\n    \"CountryISO3\": \"LUX\"\r\n  },\r\n  {\r\n    \"Name\": \"Vienna Exchange\",\r\n    \"Code\": \"VI\",\r\n    \"OperatingMIC\": \"XWBO\",\r\n    \"Country\": \"Austria\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"AT\",\r\n    \"CountryISO3\": \"AUT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Paris\",\r\n    \"Code\": \"PA\",\r\n    \"OperatingMIC\": \"XPAR\",\r\n    \"Country\": \"France\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FR\",\r\n    \"CountryISO3\": \"FRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Brussels\",\r\n    \"Code\": \"BR\",\r\n    \"OperatingMIC\": \"XBRU\",\r\n    \"Country\": \"Belgium\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"BE\",\r\n    \"CountryISO3\": \"BEL\"\r\n  },\r\n  {\r\n    \"Name\": \"Madrid Exchange\",\r\n    \"Code\": \"MC\",\r\n    \"OperatingMIC\": \"BMEX\",\r\n    \"Country\": \"Spain\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"ES\",\r\n    \"CountryISO3\": \"ESP\"\r\n  },\r\n  {\r\n    \"Name\": \"SIX Swiss Exchange\",\r\n    \"Code\": \"SW\",\r\n    \"OperatingMIC\": \"XSWX\",\r\n    \"Country\": \"Switzerland\",\r\n    \"Currency\": \"CHF\",\r\n    \"CountryISO2\": \"CH\",\r\n    \"CountryISO3\": \"CHE\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Lisbon\",\r\n    \"Code\": \"LS\",\r\n    \"OperatingMIC\": \"XLIS\",\r\n    \"Country\": \"Portugal\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"PT\",\r\n    \"CountryISO3\": \"PRT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Amsterdam\",\r\n    \"Code\": \"AS\",\r\n    \"OperatingMIC\": \"XAMS\",\r\n    \"Country\": \"Netherlands\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"NL\",\r\n    \"CountryISO3\": \"NLD\"\r\n  },\r\n  {\r\n    \"Name\": \"Iceland Exchange\",\r\n    \"Code\": \"IC\",\r\n    \"OperatingMIC\": \"XICE\",\r\n    \"Country\": \"Iceland\",\r\n    \"Currency\": \"ISK\",\r\n    \"CountryISO2\": \"IS\",\r\n    \"CountryISO3\": \"ISL\"\r\n  },\r\n  {\r\n    \"Name\": \"Irish Exchange\",\r\n    \"Code\": \"IR\",\r\n    \"OperatingMIC\": \"XDUB\",\r\n    \"Country\": \"Ireland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"IE\",\r\n    \"CountryISO3\": \"IRL\"\r\n  },\r\n  {\r\n    \"Name\": \"Helsinki Exchange\",\r\n    \"Code\": \"HE\",\r\n    \"OperatingMIC\": \"XHEL\",\r\n    \"Country\": \"Finland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FI\",\r\n    \"CountryISO3\": \"FIN\"\r\n  },\r\n  {\r\n    \"Name\": \"Oslo Stock Exchange\",\r\n    \"Code\": \"OL\",\r\n    \"OperatingMIC\": \"XOSL\",\r\n    \"Country\": \"Norway\",\r\n    \"Currency\": \"NOK\",\r\n    \"CountryISO2\": \"NO\",\r\n    \"CountryISO3\": \"NOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Copenhagen Exchange\",\r\n    \"Code\": \"CO\",\r\n    \"OperatingMIC\": \"XCSE\",\r\n    \"Country\": \"Denmark\",\r\n    \"Currency\": \"DKK\",\r\n    \"CountryISO2\": \"DK\",\r\n    \"CountryISO3\": \"DNK\"\r\n  },\r\n  {\r\n    \"Name\": \"Stockholm Exchange\",\r\n    \"Code\": \"ST\",\r\n    \"OperatingMIC\": \"XSTO\",\r\n    \"Country\": \"Sweden\",\r\n    \"Currency\": \"SEK\",\r\n    \"CountryISO2\": \"SE\",\r\n    \"CountryISO3\": \"SWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Victoria Falls Stock Exchange\",\r\n    \"Code\": \"VFEX\",\r\n    \"OperatingMIC\": \"VFEX\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Zimbabwe Stock Exchange\",\r\n    \"Code\": \"XZIM\",\r\n    \"OperatingMIC\": \"XZIM\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Lusaka Stock Exchange\",\r\n    \"Code\": \"LUSE\",\r\n    \"OperatingMIC\": \"XLUS\",\r\n    \"Country\": \"Zambia \",\r\n    \"Currency\": \"ZMW\",\r\n    \"CountryISO2\": \"ZM\",\r\n    \"CountryISO3\": \"ZMB\"\r\n  },\r\n  {\r\n    \"Name\": \"Uganda Securities Exchange\",\r\n    \"Code\": \"USE\",\r\n    \"OperatingMIC\": \"XUGA\",\r\n    \"Country\": \"Uganda\",\r\n    \"Currency\": \"UGX\",\r\n    \"CountryISO2\": \"UG\",\r\n    \"CountryISO3\": \"UGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Dar es Salaam Stock Exchange\",\r\n    \"Code\": \"DSE\",\r\n    \"OperatingMIC\": \"XDAR\",\r\n    \"Country\": \"Tanzania\",\r\n    \"Currency\": \"TZS\",\r\n    \"CountryISO2\": \"TZ\",\r\n    \"CountryISO3\": \"TZA\"\r\n  },\r\n  {\r\n    \"Name\": \"Prague Stock Exchange \",\r\n    \"Code\": \"PR\",\r\n    \"OperatingMIC\": \"XPRA\",\r\n    \"Country\": \"Czech Republic\",\r\n    \"Currency\": \"CZK\",\r\n    \"CountryISO2\": \"CZ\",\r\n    \"CountryISO3\": \"CZE\"\r\n  },\r\n  {\r\n    \"Name\": \"Rwanda Stock Exchange\",\r\n    \"Code\": \"RSE\",\r\n    \"OperatingMIC\": \"RSEX\",\r\n    \"Country\": \"Rwanda\",\r\n    \"Currency\": \"RWF \",\r\n    \"CountryISO2\": \"RW\",\r\n    \"CountryISO3\": \"RWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Botswana Stock Exchange \",\r\n    \"Code\": \"XBOT\",\r\n    \"OperatingMIC\": \"XBOT\",\r\n    \"Country\": \"Botswana\",\r\n    \"Currency\": \"BWP\",\r\n    \"CountryISO2\": \"BW\",\r\n    \"CountryISO3\": \"BWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Egyptian Exchange\",\r\n    \"Code\": \"EGX\",\r\n    \"OperatingMIC\": \"NILX\",\r\n    \"Country\": \"Egypt\",\r\n    \"Currency\": \"EGP\",\r\n    \"CountryISO2\": \"EG\",\r\n    \"CountryISO3\": \"EGY\"\r\n  },\r\n  {\r\n    \"Name\": \"Nigerian Stock Exchange\",\r\n    \"Code\": \"XNSA\",\r\n    \"OperatingMIC\": \"XNSA\",\r\n    \"Country\": \"Nigeria\",\r\n    \"Currency\": \"NGN\",\r\n    \"CountryISO2\": \"NG\",\r\n    \"CountryISO3\": \"NGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Ghana Stock Exchange\",\r\n    \"Code\": \"GSE\",\r\n    \"OperatingMIC\": \"XGHA\",\r\n    \"Country\": \"Ghana\",\r\n    \"Currency\": \"GHS\",\r\n    \"CountryISO2\": \"GH\",\r\n    \"CountryISO3\": \"GHA\"\r\n  },\r\n  {\r\n    \"Name\": \"Malawi Stock Exchange\",\r\n    \"Code\": \"MSE\",\r\n    \"OperatingMIC\": \"XMSW\",\r\n    \"Country\": \"Malawi\",\r\n    \"Currency\": \"MWK\",\r\n    \"CountryISO2\": \"MW\",\r\n    \"CountryISO3\": \"MWI\"\r\n  },\r\n  {\r\n    \"Name\": \"Regional Securities Exchange\",\r\n    \"Code\": \"BRVM\",\r\n    \"OperatingMIC\": \"XBRV\",\r\n    \"Country\": \"Ivory Coast\",\r\n    \"Currency\": \"XOF\",\r\n    \"CountryISO2\": \"CI\",\r\n    \"CountryISO3\": \"CIV\"\r\n  },\r\n  {\r\n    \"Name\": \"Nairobi Securities Exchange\",\r\n    \"Code\": \"XNAI\",\r\n    \"OperatingMIC\": \"XNAI\",\r\n    \"Country\": \"Kenya\",\r\n    \"Currency\": \"KES\",\r\n    \"CountryISO2\": \"KE\",\r\n    \"CountryISO3\": \"KEN\"\r\n  },\r\n  {\r\n    \"Name\": \"Casablanca Stock Exchange\",\r\n    \"Code\": \"BC\",\r\n    \"OperatingMIC\": \"XCAS\",\r\n    \"Country\": \"Morocco\",\r\n    \"Currency\": \"MAD\",\r\n    \"CountryISO2\": \"MA\",\r\n    \"CountryISO3\": \"MAR\"\r\n  },\r\n  {\r\n    \"Name\": \"Stock Exchange of Mauritius\",\r\n    \"Code\": \"SEM\",\r\n    \"OperatingMIC\": \"XMAU\",\r\n    \"Country\": \"Mauritius\",\r\n    \"Currency\": \"MUR\",\r\n    \"CountryISO2\": \"MU\",\r\n    \"CountryISO3\": \"MUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Tel Aviv Stock Exchange\",\r\n    \"Code\": \"TA\",\r\n    \"OperatingMIC\": \"XTAE\",\r\n    \"Country\": \"Israel\",\r\n    \"Currency\": \"ILS\",\r\n    \"CountryISO2\": \"IL\",\r\n    \"CountryISO3\": \"ISR\"\r\n  },\r\n  {\r\n    \"Name\": \"Korea Stock Exchange\",\r\n    \"Code\": \"KO\",\r\n    \"OperatingMIC\": \"XKRX\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"KOSDAQ\",\r\n    \"Code\": \"KQ\",\r\n    \"OperatingMIC\": \"XKOS\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Budapest Stock Exchange\",\r\n    \"Code\": \"BUD\",\r\n    \"OperatingMIC\": \"XBUD\",\r\n    \"Country\": \"Hungary\",\r\n    \"Currency\": \"HUF\",\r\n    \"CountryISO2\": \"HU\",\r\n    \"CountryISO3\": \"HUN\"\r\n  },\r\n  {\r\n    \"Name\": \"Warsaw Stock Exchange\",\r\n    \"Code\": \"WAR\",\r\n    \"OperatingMIC\": \"XWAR\",\r\n    \"Country\": \"Poland\",\r\n    \"Currency\": \"PLN\",\r\n    \"CountryISO2\": \"PL\",\r\n    \"CountryISO3\": \"POL\"\r\n  },\r\n  {\r\n    \"Name\": \"Philippine Stock Exchange\",\r\n    \"Code\": \"PSE\",\r\n    \"OperatingMIC\": \"XPHS\",\r\n    \"Country\": \"Philippines\",\r\n    \"Currency\": \"PHP\",\r\n    \"CountryISO2\": \"PH\",\r\n    \"CountryISO3\": \"PHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Karachi Stock Exchange\",\r\n    \"Code\": \"KAR\",\r\n    \"OperatingMIC\": \"XKAR\",\r\n    \"Country\": \"Pakistan\",\r\n    \"Currency\": \"PKR\",\r\n    \"CountryISO2\": \"PK\",\r\n    \"CountryISO3\": \"PAK\"\r\n  },\r\n  {\r\n    \"Name\": \"Australian Securities Exchange\",\r\n    \"Code\": \"AU\",\r\n    \"OperatingMIC\": \"XASX\",\r\n    \"Country\": \"Australia\",\r\n    \"Currency\": \"AUD\",\r\n    \"CountryISO2\": \"AU\",\r\n    \"CountryISO3\": \"AUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Johannesburg Exchange\",\r\n    \"Code\": \"JSE\",\r\n    \"OperatingMIC\": \"XJSE\",\r\n    \"Country\": \"South Africa\",\r\n    \"Currency\": \"ZAR\",\r\n    \"CountryISO2\": \"ZA\",\r\n    \"CountryISO3\": \"ZAF\"\r\n  },\r\n  {\r\n    \"Name\": \"Chilean Stock Exchange\",\r\n    \"Code\": \"SN\",\r\n    \"OperatingMIC\": \"XSGO\",\r\n    \"Country\": \"Chile\",\r\n    \"Currency\": \"CLP\",\r\n    \"CountryISO2\": \"CL\",\r\n    \"CountryISO3\": \"CHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Jakarta Exchange\",\r\n    \"Code\": \"JK\",\r\n    \"OperatingMIC\": \"XIDX\",\r\n    \"Country\": \"Indonesia\",\r\n    \"Currency\": \"IDR\",\r\n    \"CountryISO2\": \"ID\",\r\n    \"CountryISO3\": \"IDN\"\r\n  },\r\n  {\r\n    \"Name\": \"Thailand Exchange\",\r\n    \"Code\": \"BK\",\r\n    \"OperatingMIC\": \"XBKK\",\r\n    \"Country\": \"Thailand\",\r\n    \"Currency\": \"THB\",\r\n    \"CountryISO2\": \"TH\",\r\n    \"CountryISO3\": \"THA\"\r\n  },\r\n  {\r\n    \"Name\": \"Shenzhen Stock Exchange\",\r\n    \"Code\": \"SHE\",\r\n    \"OperatingMIC\": \"XSHE\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Athens Exchange\",\r\n    \"Code\": \"AT\",\r\n    \"OperatingMIC\": \"ASEX\",\r\n    \"Country\": \"Greece\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"GR\",\r\n    \"CountryISO3\": \"GRC\"\r\n  },\r\n  {\r\n    \"Name\": \"National Stock Exchange of India\",\r\n    \"Code\": \"NSE\",\r\n    \"OperatingMIC\": \"XNSE\",\r\n    \"Country\": \"India\",\r\n    \"Currency\": \"INR\",\r\n    \"CountryISO2\": \"IN\",\r\n    \"CountryISO3\": \"IND\"\r\n  },\r\n  {\r\n    \"Name\": \"Shanghai Stock Exchange\",\r\n    \"Code\": \"SHG\",\r\n    \"OperatingMIC\": \"XSHG\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Colombo Stock Exchange\",\r\n    \"Code\": \"CM\",\r\n    \"OperatingMIC\": \"XCOL\",\r\n    \"Country\": \"Sri Lanka\",\r\n    \"Currency\": \"LKR\",\r\n    \"CountryISO2\": \"LK\",\r\n    \"CountryISO3\": \"LKA\"\r\n  },\r\n  {\r\n    \"Name\": \"Vietnam Stocks\",\r\n    \"Code\": \"VN\",\r\n    \"OperatingMIC\": \"HSTC\",\r\n    \"Country\": \"Vietnam\",\r\n    \"Currency\": \"VND\",\r\n    \"CountryISO2\": \"VN\",\r\n    \"CountryISO3\": \"VNM\"\r\n  },\r\n  {\r\n    \"Name\": \"Kuala Lumpur Exchange\",\r\n    \"Code\": \"KLSE\",\r\n    \"OperatingMIC\": \"XKLS\",\r\n    \"Country\": \"Malaysia\",\r\n    \"Currency\": \"MYR\",\r\n    \"CountryISO2\": \"MY\",\r\n    \"CountryISO3\": \"MYS\"\r\n  },\r\n  {\r\n    \"Name\": \"Bucharest Stock Exchange\",\r\n    \"Code\": \"RO\",\r\n    \"OperatingMIC\": \"XBSE\",\r\n    \"Country\": \"Romania\",\r\n    \"Currency\": \"RON\",\r\n    \"CountryISO2\": \"RO\",\r\n    \"CountryISO3\": \"ROU\"\r\n  },\r\n  {\r\n    \"Name\": \"Buenos Aires Exchange\",\r\n    \"Code\": \"BA\",\r\n    \"OperatingMIC\": \"XBUE\",\r\n    \"Country\": \"Argentina\",\r\n    \"Currency\": \"ARS\",\r\n    \"CountryISO2\": \"AR\",\r\n    \"CountryISO3\": \"ARG\"\r\n  },\r\n  {\r\n    \"Name\": \"Sao Paulo Exchange\",\r\n    \"Code\": \"SA\",\r\n    \"OperatingMIC\": \"BVMF\",\r\n    \"Country\": \"Brazil\",\r\n    \"Currency\": \"BRL\",\r\n    \"CountryISO2\": \"BR\",\r\n    \"CountryISO3\": \"BRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Mexican Exchange\",\r\n    \"Code\": \"MX\",\r\n    \"OperatingMIC\": \"XMEX\",\r\n    \"Country\": \"Mexico\",\r\n    \"Currency\": \"MXN\",\r\n    \"CountryISO2\": \"MX\",\r\n    \"CountryISO3\": \"MEX\"\r\n  },\r\n  {\r\n    \"Name\": \"London IL\",\r\n    \"Code\": \"IL\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Zagreb Stock Exchange\",\r\n    \"Code\": \"ZSE\",\r\n    \"OperatingMIC\": \"XZAG\",\r\n    \"Country\": \"Croatia\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"HR\",\r\n    \"CountryISO3\": \"HRV\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan Stock Exchange\",\r\n    \"Code\": \"TW\",\r\n    \"OperatingMIC\": \"XTAI\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"MICEX Moscow Russia\",\r\n    \"Code\": \"MCX\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Russia\",\r\n    \"Currency\": \"RUB\",\r\n    \"CountryISO2\": \"RU\",\r\n    \"CountryISO3\": \"RUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan OTC Exchange\",\r\n    \"Code\": \"TWO\",\r\n    \"OperatingMIC\": \"ROCO\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"Bolsa de Valores de Lima\",\r\n    \"Code\": \"LIM\",\r\n    \"OperatingMIC\": \"XLIM\",\r\n    \"Country\": \"Peru\",\r\n    \"Currency\": \"PEN\",\r\n    \"CountryISO2\": \"PE\",\r\n    \"CountryISO3\": \"PER\"\r\n  },\r\n  {\r\n    \"Name\": \"Money Market Virtual Exchange\",\r\n    \"Code\": \"MONEY\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Europe Fund Virtual Exchange\",\r\n    \"Code\": \"EUFUND\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Istanbul Stock Exchange\",\r\n    \"Code\": \"IS\",\r\n    \"OperatingMIC\": \"XIST\",\r\n    \"Country\": \"Turkey\",\r\n    \"Currency\": \"TRY\",\r\n    \"CountryISO2\": \"TR\",\r\n    \"CountryISO3\": \"TUR\"\r\n  },\r\n  {\r\n    \"Name\": \"Cryptocurrencies\",\r\n    \"Code\": \"CC\",\r\n    \"OperatingMIC\": \"CRYP\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"FOREX\",\r\n    \"Code\": \"FOREX\",\r\n    \"OperatingMIC\": \"CDSL\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n   {\r\n    \"Name\": \"Virtual Exchange Holding\",\r\n    \"Code\": \"INDX\",\r\n  },\r\n]\r\n\r\n","import { exchangeListJson } from \"./exchange_list.js\";\nimport { exchangeSymbolList } from \"./import_data.js\";\nexport let selectEx = document.getElementById('select1');\nexport let selectTicker= document.getElementById('select2');\nexport let select1Options = [{ 'placeholder': true, 'text': 'Select the stock exchange','class': 'custom-color' }]\nexport let select2Options = [{ 'placeholder': true, 'text': 'First select the stock exchange' ,'class': 'custom-color'}]\nexport let exchangeSymbols\nlet select1\n\nconst apiKey = '65fd2d716aebf2.80647901';\nlet usExchangeList=[]\n\nexchangeSymbolList('US', apiKey)\n  .then(data => exchangeSymbols = data)\n  .then(() => {\n    for (let i = 0; i < exchangeSymbols.length; i++) {\n      if ((exchangeSymbols[i].Exchange)) {\n        if (!usExchangeList.includes(exchangeSymbols[i].Exchange)) {\n          usExchangeList.push(exchangeSymbols[i].Exchange)\n        }\n      }     \n    }\n    for (let i = 0; i < usExchangeList.length; i++){\n      select1Options.push({ text: `Usa Stock:  ${ usExchangeList[i]}` })\n    }\n  })\n  .then(() => {\n    for (let i = 0; i < exchangeListJson.length; i++){\n      if (exchangeListJson[i].Code != 'US') {\n        select1Options.push({ text: exchangeListJson[i].Name })\n      }\n    }\n  })\n  .then(() => {\n    select1.setData( select1Options)\n    }) \n\n  select1=new SlimSelect({\n    select: '#select1',\n    data: select1Options,\n    options: [\n\n    ]\n    })\n\n\n\nexport let select2=new SlimSelect({\n  select: '#select2',\n  data: select2Options\n})\n\n\n\n\n      \n","import { button } from \"../index.js\";\nexport let selectedDate\n\nflatpickr(\"#datepicker\", {\n    dateFormat: \"Y-m-d\", // Format daty\n  maxDate: new Date().fp_incr(0), // Maksymalna dozwolona data (30 dni od dzisiaj)\n  onClose: function (selectedDates, dateStr) {\n    selectedDate = dateStr;\n    if (selectedDate != undefined) {\n    button.disabled=false\n    }\n  }\n});\n","import { lineChart, createAxis, hideChart, showChart} from \"./js/graph.js\";\nimport { historicalStockData, dailyStockData, createDate, news } from \"./js/import_data.js\";\nimport { particularData } from \"./js/particular_data.js\";\nimport { exchangeListJson } from \"./js/exchange_list.js\";\nimport { selectEx, select2, selectTicker, exchangeSymbols } from \"./js/select.js\";\nimport { linearRegression, bottomPoints, upperPoints } from \"./js/math.js\";\nimport './js/select.js'\nimport './js/date-time'\nimport { multipleDailyData } from \"./js/import_data.js\";\n\nlet dailyData\nlet historicalData\nlet newDataChart\nlet chartData\nlet endDate\nlet tickerList\n\nconst token = '65fd2d716aebf2.80647901';\nlet exchange = 'WAR';\nlet ticker = 'ALE';\nlet index = ticker.concat('.', exchange)\nlet today = new Date();\nlet days = 30 \nlet startDate = new Date(today.getTime() - (days * 24 * 60 * 60 * 1000));\nlet index1 = 'ALE.WAR'\nlet index2 = 'GSPC.INDX'\nlet index3 = 'AAPL.US'\nlet index4 = 'EURPLN.FOREX'\nlet index5 = 'USDPLN.FOREX'\nlet delButton \n\nendDate = createDate(today)\nstartDate = createDate(startDate)\n\nlet headerTickersList=[index1, index2, index3, index4, index5]\nlet headerData = document.querySelector('.short-data')\nconst favButton = document.querySelector('.add-fav-button')\n\nif (headerTickersList.length >4){\n  favButton.disabled=true\n}\n\nmultipleDailyData(headerTickersList, token)\n  .then(data => {\n    let newData = data\n    headerData.innerHTML = ''\n    const markup = newData.map((ticker) => {\n    let changeColor = ''; // Initialize changeColor variable\n    if (ticker.change_p > 0) {\n        changeColor = 'value-plus';\n    } else if (ticker.change_p < 0) {\n        changeColor = 'value-minus';\n    }\n    return `<div class='short-data-div'>\n                <button class = 'delete-button'  type=\"button\" id=\"${ticker.code}\" >\n                <svg id = '${ticker.code}' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill = '#ec7c7c'>\n                  <path name = '${ticker.code}' d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\n                  <path name = '${ticker.code}' d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${ticker.code}'>\n                <p class='header-paragraph'>${ticker.code}</p>\n                <p class='header-paragraph'>Close: ${ticker.close}</p>\n                <p class='header-paragraph'>Change: <span class='${changeColor}'>${ticker.change_p}%</span></p>\n              </div>          \n            </div>`;\n  }).join(\"\");\n      // Wstawianie wygenerowanego kodu HTML do elementu headerData\n      headerData.insertAdjacentHTML(\"beforeend\", markup);\n      delButton = document.querySelectorAll('.delete-button')\n  })\n  .catch(error => {\n    console.error(\"Wystąpił błąd podczas pobierania danych:\", error);\n  });\n\nsetInterval(()=> {\nmultipleDailyData(headerTickersList, token)\n  .then(data => {\n    let newData = data\n    let changeColor = '';\n    newData.forEach(element => {\n      element.change_p>0? changeColor='value-plus':changeColor='value-minus'\n    });\n    headerData.innerHTML = ''\n    const markup = newData.map((ticker) => {\n    let changeColor = ''; // Initialize changeColor variable\n    if (ticker.change_p > 0) {\n        changeColor = 'value-plus';\n    } else if (ticker.change_p < 0) {\n        changeColor = 'value-minus';\n      }\n      return `<div class='short-data-div'>\n                <button class = 'delete-button'  type=\"button\" id=\"${ticker.code}\" >\n                <svg id = '${ticker.code}' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill = '#ec7c7c'>\n                  <path name = '${ticker.code}' d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\n                  <path name = '${ticker.code}' d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${ticker.code}'>\n                <p class='header-paragraph'>${ticker.code}</p>\n                <p class='header-paragraph'>Close: ${ticker.close}</p>\n                <p class='header-paragraph'>Change: <span class='${changeColor}'>${ticker.change_p}%</span></p>\n              </div>          \n            </div>`;\n  }).join(\"\"); \n      // Wstawianie wygenerowanego kodu HTML do elementu headerData\n      headerData.insertAdjacentHTML(\"beforeend\", markup);\n  })\n  .catch(error => {\n    console.error(\"Wystąpił błąd podczas pobierania danych:\", error);\n  });\n},2000\n);\n\nheaderData.addEventListener('click',function (event){\n    event.preventDefault()\n    let tickerToDelete=event.target.parentNode.id\n    headerTickersList = headerTickersList .filter(ticker => ticker !== tickerToDelete);\n    multipleDailyData(headerTickersList, token)\n    .then(data => {\n      let newData = data\n      const markup = newData.map((ticker) => {\n      let changeColor = ''; // Initialize changeColor variable\n      if (ticker.change_p > 0) {\n          changeColor = 'value-plus';\n      } else if (ticker.change_p < 0) {\n          changeColor = 'value-minus';\n      }\n      return `<div class='short-data-div'>\n                  <button class = 'delete-button'  type=\"button\" id=\"${ticker.code}\" >\n                  <svg id = '${ticker.code}' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill = '#ec7c7c'>\n                    <path name = '${ticker.code}' d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\n                    <path name = '${ticker.code}' d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\n                  </svg>\n                </button>\n                <div class='single-data' name = '${ticker.code}'>\n                  <p class='header-paragraph'>${ticker.code}</p>\n                  <p class='header-paragraph'>Close: ${ticker.close}</p>\n                  <p class='header-paragraph'>Change: <span class='${changeColor}'>${ticker.change_p}%</span></p>\n                </div>\n              </div>`;\n      }).join(\"\");\n        // Wstawianie wygenerowanego kodu HTML do elementu headerData\n        headerData.innerHTML = ''\n        headerData.insertAdjacentHTML(\"beforeend\", markup);\n        delButton = document.querySelectorAll('.delete-button')    \n        if (delButton.length<3){\n        for (var i = 0; i < delButton.length; i++) {\n          delButton[i].disabled = true;\n      }}\n      if (headerTickersList.length <5){\n        favButton.disabled=false\n      }\n      })\n    .catch(error => {\n      console.error(\"Wystąpił błąd podczas pobierania danych:\", error);\n    });\n})\n\nhistoricalStockData(index, token, startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    console.log(dailyData)\n    return particularData(\"currentData\", index, dailyData, historicalData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n  .then(data => {\n    const { regYAxis }=linearRegression(chartData.yAxis)\n    upperPoints(regYAxis, chartData.yAxis)\n    bottomPoints (regYAxis, chartData.yAxis)\n    newDataChart = data\n  })\n  .then(()=>{return news(index, token)})\n  .then(data=>{\n    let paragraph = document.querySelector(\"#news\")\n    const markup=data.map((article)=>\n      `<div class='newsDiv'><h2>${article.title}</h2><p>${article.date}</p><div class='div-afterp'><p>${article.content}</p></div></div>`)\n    .join(\"\");\n    paragraph.insertAdjacentHTML(\"beforeend\", markup);\n  })\n\nexport let button = document.querySelector('.button')\nbutton.addEventListener('click', function (event,) {\n  event.preventDefault()\n  historicalStockData(index, token, selectedDate=startDate, endDate)\n  .then(data => {\n    historicalData = data;\n    return dailyStockData(index, token);\n  })\n  .then(data => {\n    dailyData = data;\n    return particularData(\"currentData\", index, dailyData, historicalData)\n  })\n  .then(() => { return createAxis(historicalData, dailyData) })\n  .then(data => {\n    chartData = data\n    newDataChart.destroy();\n    return lineChart(chartData.xAxis, chartData.yAxis, ticker)\n  })\n    .then(data => {\n      const { regYAxis }=linearRegression(chartData.yAxis)\n      upperPoints(regYAxis, chartData.yAxis)\n      bottomPoints(regYAxis, chartData.yAxis)\n      newDataChart = data\n      if (regressionButton.textContent === 'show regression lines')\n        {hideChart()}\n  })\n})\n\nconst regressionButton = document.querySelector('.regression-button');\nregressionButton.addEventListener('click', function (event) {\n  event.preventDefault()\n  if (regressionButton.textContent === 'hide regression lines') {\n    hideChart()\n    regressionButton.textContent = 'show regression lines'\n  }\n  else if (regressionButton.textContent === 'show regression lines') {\n    showChart()\n    regressionButton.textContent = 'hide regression lines'\n  }\n})\n\nfavButton.addEventListener('click',()=> {\n  headerTickersList.push(index)\n  multipleDailyData(headerTickersList, token)\n  .then(data => {\n    let newData = data\n    headerData.innerHTML = ''\n    const markup = newData.map((ticker) => {\n    let changeColor = ''; // Initialize changeColor variable\n    if (ticker.change_p > 0) {\n        changeColor = 'value-plus';\n    } else if (ticker.change_p < 0) {\n        changeColor = 'value-minus';\n    }\n    return `<div class='short-data-div'>\n                <button class = 'delete-button'  type=\"button\" id=\"${ticker.code}\" >\n                <svg id = '${ticker.code}' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill = '#ec7c7c'>\n                  <path name = '${ticker.code}' d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\n                  <path name = '${ticker.code}' d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${ticker.code}'>\n                <p class='header-paragraph'>${ticker.code}</p>\n                <p class='header-paragraph'>Close: ${ticker.close}</p>\n                <p class='header-paragraph'>Change: <span class='${changeColor}'>${ticker.change_p}%</span></p>\n              </div>\n             \n            </div>`;\n  }).join(\"\");\n      // Wstawianie wygenerowanego kodu HTML do elementu headerData\n      headerData.innerHTML = ''\n      headerData.insertAdjacentHTML(\"beforeend\", markup);\n      if (headerTickersList.length >4){\n        favButton.disabled=true\n      }\n      })\n  })\n\nselectEx.addEventListener('change', function (event) {\n  event.preventDefault()\n  let select2Options = []\n  let selectedEx = selectEx.options[selectEx.selectedIndex].value\n  if (!selectedEx.includes('Usa Stock:')) {\n    for (let i = 0; i < exchangeListJson.length; i++) {\n      if (exchangeListJson[i].Name === selectedEx) {\n        let exchange = exchangeListJson[i].Code\n        fetch(`https://eodhd.com/api/exchange-symbol-list/${exchange}?api_token=65fd2d716aebf2.80647901&fmt=json`)\n          .then(data => data.json())\n          .then(data => {\n            tickerList = data\n            for (let i = 0; i < data.length; i++) {\n              select2Options.push({ text: `${data[i].Name}` })\n            }\n            select2.setData(select2Options)\n          })\n      }\n    }\n  }\n  else if (selectedEx.includes('Usa Stock:')) {\n    for (let i = 0; i < exchangeSymbols.length; i++) {\n      if (selectedEx.includes(exchangeSymbols[i].Exchange)) {\n            select2Options.push({ text: `${exchangeSymbols[i].Name}` })\n      }\n    }\n    tickerList = exchangeSymbols\n    select2.setData(select2Options)\n  }\n  })\n\n  selectTicker.addEventListener('change', (event) => {\n  event.preventDefault();\n    if (selectTicker.options[selectTicker.selectedIndex] != undefined) {\n      let selectedTicker = selectTicker.options[selectTicker.selectedIndex].value;\n      \n      for (let i = 0; i < tickerList.length;  i++){\n        if (selectedTicker != tickerList[i].Name) {\n        }\n        else {\n          ticker = tickerList[i].Code\n          if (tickerList[i].Country === 'USA' && tickerList[i].Exchange!=='INDX') {\n            exchange = 'US'\n          }\n          else {\n            exchange = tickerList[i].Exchange\n          }\n          \n          index = ticker.concat('.', exchange)\n    \n\n        }\n      }\n    }\n  })\n","import { newDataChart } from \"./graph\";\n\nexport function linearRegression(yAxis) {\n    let regressionData = []\n    for (let i = 0; i < yAxis.length; i++){\n        let regressionPoints = [i + 1, yAxis[i]]\n        regressionData.push(regressionPoints)\n    }\n    const result = regression.linear(regressionData);\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    let functionPattern=`y=${factorA}x+${factorB}`\n    let regYAxis = []\n    for (let i = 0; i < yAxis.length; i++){\n        regYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'linear regression',\n        data: regYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(265, 20, 135, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n\n    return {regYAxis, functionPattern}\n}\n\nexport function parRegression(yAxis) {\n    let parRegressionData = []\n    for (let i = 0; i < yAxis.length; i++){\n        let regressionPoints = [i + 1, yAxis[i]]\n        parRegressionData.push(regressionPoints)\n    }\n    const result2 = regression.polynomial(parRegressionData, { order: 2 });\n    const factorA = result2.equation[0];\n    const factorB = result2.equation[1];\n    const factorC = result2.equation[2];\n    let parFunctionPattern=`y=${factorA}x^2+${factorB}x+${factorC}`\n    let parRegYAxis = []\n    for (let i = 0; i < yAxis.length; i++){\n        parRegYAxis.push(factorA * i**2 + factorB*i+factorC)\n    }\n    newDataChart.data.datasets.push({\n        label: 'quadratic regression',\n        data: parRegYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(20, 265, 150, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        \n    });\n    newDataChart.update();\n\n    return {parRegYAxis, parFunctionPattern}\n}\n\nexport function upperPoints(regYAxis, yAxis) {\n    const selectedPoints = []\n    for (let i = 0; i < yAxis.length; i++) {\n        if (yAxis[i] - regYAxis[i] > 0) {\n            selectedPoints.push([(i),yAxis[i]])\n        }\n    }\n    const result = regression.linear(selectedPoints)\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    let topYAxis = []\n    for (let i = 0; i < yAxis.length; i++) {\n        topYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'top line',\n        data: topYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(20, 265, 150, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n}\n\n\nexport function bottomPoints(regYAxis, yAxis) {\n    const selectedPoints = []\n    for (let i = 0; i < yAxis.length; i++) {\n        if (regYAxis[i] - yAxis[i] > 0) {\n            selectedPoints.push([(i),yAxis[i]])\n        }\n    }\n    const result = regression.linear(selectedPoints)\n    const factorA = result.equation[0];\n    const factorB = result.equation[1];\n    let topYAxis = []\n    for (let i = 0; i < yAxis.length; i++) {\n        topYAxis.push(factorA * i + factorB)\n    }\n    newDataChart.data.datasets.push({\n        label: 'bottom line',\n        data: topYAxis,\n        borderWidth: 1,\n        pointRadius: 0,\n        borderColor: 'rgba(200, 100, 20, 1)',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n    });\n    newDataChart.update();\n}\n\n \n"],"names":["$b31943c533a76ae8$export$d55b601b45fa2097","stockIndex","apiKey","startDate","endDate","fetch","then","response","ok","Error","json","data","catch","error","console","$b31943c533a76ae8$export$80d477eab0d1430a","realTimeDay","Date","timestamp","$b31943c533a76ae8$export$e029667a62135fd0","close","change_p","$b31943c533a76ae8$export$c15f9bb26c068cd","tickersList","API","UrlTickerData","i","length","$b31943c533a76ae8$export$df4cb166265252c7","date","year","getFullYear","month","getMonth","slice","day","getDate","$963c3c230e2426a4$export$8066b993bc416f6d","id","currentlyData","historicalData","container","document","getElementById","innerHTML","map","open","high","low","volume","insertAdjacentHTML","$b47b44e404b43a67$export$f49711a816bad7d2","$b47b44e404b43a67$export$88642ec15bb62ae0","xAxis","yAxis","ticker","ctx","Chart","type","labels","datasets","label","borderWidth","pointRadius","options","responsive","$b47b44e404b43a67$export$6db76765312617ac","dailyData","chartData","push","log","$b47b44e404b43a67$export$59a1a2d9b46437c0","update","$c9c354799861a6b7$export$402eb89ff95bd3f4","Name","Code","OperatingMIC","Country","Currency","CountryISO2","CountryISO3","$55192131fc4a8194$export$d3ccb3cff973a6d1","$55192131fc4a8194$var$select1","$55192131fc4a8194$export$6194e7371c12e1d0","$55192131fc4a8194$export$244074419d36f200","$55192131fc4a8194$export$6b8651e7c280689c","placeholder","text","class","$55192131fc4a8194$var$usExchangeList","exchange","Exchange","includes","i1","setData","SlimSelect","select","$d23400db230dea71$export$5c4b4171546508a2","$1f0dc3b9307be026$var$dailyData","$1f0dc3b9307be026$var$historicalData","$1f0dc3b9307be026$var$newDataChart","$1f0dc3b9307be026$var$chartData","$1f0dc3b9307be026$var$endDate","$1f0dc3b9307be026$var$tickerList","$55192131fc4a8194$export$2ef10c4256d170a2","$dbb6f002dfcf005b$export$534d495db1d2c72c","regressionData","regressionPoints","result","regression","linear","factorA","equation","factorB","functionPattern","regYAxis","borderColor","backgroundColor","$dbb6f002dfcf005b$export$19e582736d5e7ca6","selectedPoints","topYAxis","i3","$dbb6f002dfcf005b$export$7cd355bcc6b570a7","i4","flatpickr","dateFormat","maxDate","fp_incr","onClose","selectedDates","dateStr","undefined","$1f0dc3b9307be026$export$2ba01fb71ed41cb6","disabled","$1f0dc3b9307be026$var$delButton","$1f0dc3b9307be026$var$exchange","$1f0dc3b9307be026$var$ticker","$1f0dc3b9307be026$var$index","concat","$1f0dc3b9307be026$var$today","$1f0dc3b9307be026$var$startDate","getTime","$1f0dc3b9307be026$var$days","$1f0dc3b9307be026$var$headerTickersList","$1f0dc3b9307be026$var$headerData","querySelector","$1f0dc3b9307be026$var$favButton","newData","markup","ticker1","changeColor","code","join","querySelectorAll","setInterval","changeColor1","forEach","element","ticker2","addEventListener","event","preventDefault","tickerToDelete","target","parentNode","filter","ticker3","ticker4","paragraph","article","title","content","selectedDate","destroy","$1f0dc3b9307be026$var$regressionButton","textContent","ticker5","select2Options","selectedEx","selectedIndex","value","exchange1","selectedTicker"],"version":3,"file":"index.3c734d45.js.map"}