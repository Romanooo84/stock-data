{"mappings":"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","sources":["src/js/graph.js","src/js/particular_data.js","src/js/exchange_list.js","src/js/select.js","src/index.js","src/js/import_data.js"],"sourcesContent":["\nexport function lineChart(xAxis, yAxis, ticker) {\n  const ctx = document.getElementById('myChart');\n\n  let newDataChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: xAxis,\n      datasets: [{\n        label: ticker,\n        data: yAxis,\n        borderWidth: 1,\n        pointRadius: 1,\n      }]\n    },\n    options: {\n\n    }\n  });\n  return newDataChart\n}\n\n//dodawanie danych do wykresu\n\nexport function addData(chart, label, newData) {\n  chart.data.labels.push(label);\n  chart.data.datasets.forEach((dataset) => {\n    dataset.data.push(newData);\n  });\n  chart.update();\n}\n  //usuwanie danych z wykresu\nexport function updateChart(chart,newXAxis, newYAxis) {\n  chart.data.labels = newYAxis\n  chart.data.datasets[0].data=newXAxis\n  chart.update();\n}\n\n// pobranie danych do wykresu\n\nexport function dataGraph(dailyData, historicalData) {\n  //przetworzenie bieżacej daty z unix na normalną\n  let currentDateUnix = dailyData.timestamp // pobranie daty\n  let currentDate = new Date(currentDateUnix * 1000) //przerobienie daty\n  // wybranie roku miesiąca i dnia\n  const year = currentDate.getFullYear();\n  const month = ('0' + (currentDate.getMonth() + 1)).slice(-2); // Dodanie 1, bo getMonth() zwraca miesiące od 0 do 11, oraz formatowanie do dwóch cyfr\n  const day = ('0' + currentDate.getDate()).slice(-2); // Formatowanie do dwóch cyfr\n  currentDate = `${year}-${month}-${day}`;\n  // pobranie ostatniej daty z osi czasu\n  let lastAxisDate = historicalData.xAxis[historicalData.xAxis.length - 1]\n  // sprawdzenie dat\n  if (currentDate > lastAxisDate) {\n    historicalData.xAxis.push(currentDate)\n    historicalData.yAxis.push(dailyData.close)\n  }\n  else if (currentDate === lastAxisDate) {\n    historicalData.yAxis.pop()\n    console.log(dailyData.close)\n    historicalData.yAxis.push(dailyData.close)\n  }\n}\n\n//Tworzenie wykresu\n\nexport function createGraph(historicalStockData){\n  //wyświetlenie wykresu danych historycznych\n  historicalStockData(index, token)\n    .then(historicalData => {\n      // zainicjowanie listy danych dla osi x i y\n      chartData = {\n        yAxis: [],\n        xAxis: []\n      };\n      // wstawienie danych do listy danych osi x i y\n      for (let i = 0; i < historicalData.length; i++) {\n        chartData.yAxis.push(historicalData[i].close);\n        chartData.xAxis.push(historicalData[i].date);\n      }\n      return { chartData }\n    })\n    .then(()=> {\n      dailyStockData(index, token)\n        .then(dailyData => {\n          dataGraph(dailyData, chartData)\n          particularData('currentData', ticker, dailyData.change_p)\n          newDataChart=lineChart(chartData.xAxis, chartData.yAxis, ticker)\n        })\n    })\n  }\n  ","export function particularData(id, stockIndex, currentlyData) {\n    let container = document.getElementById(`${id}`);\n    container.innerHTML=''\n    let map = `<p>${stockIndex} <span></span>${currentlyData}%</p>`\n    container.insertAdjacentHTML('beforeEnd', map)\n}","export const exchangeListJson= [\r\n  {\r\n    \"Name\": \"USA Stocks\",\r\n    \"Code\": \"US\",\r\n    \"OperatingMIC\": \"XNAS, XNYS\",\r\n    \"Country\": \"USA\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"US\",\r\n    \"CountryISO3\": \"USA\"\r\n  },\r\n  {\r\n    \"Name\": \"London Exchange\",\r\n    \"Code\": \"LSE\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"GBP\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Toronto Exchange\",\r\n    \"Code\": \"TO\",\r\n    \"OperatingMIC\": \"XTSE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"NEO Exchange\",\r\n    \"Code\": \"NEO\",\r\n    \"OperatingMIC\": \"NEOE\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"TSX Venture Exchange\",\r\n    \"Code\": \"V\",\r\n    \"OperatingMIC\": \"XTSX\",\r\n    \"Country\": \"Canada\",\r\n    \"Currency\": \"CAD\",\r\n    \"CountryISO2\": \"CA\",\r\n    \"CountryISO3\": \"CAN\"\r\n  },\r\n  {\r\n    \"Name\": \"Berlin Exchange\",\r\n    \"Code\": \"BE\",\r\n    \"OperatingMIC\": \"XBER\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hamburg Exchange\",\r\n    \"Code\": \"HM\",\r\n    \"OperatingMIC\": \"XHAM\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"XETRA Stock Exchange\",\r\n    \"Code\": \"XETRA\",\r\n    \"OperatingMIC\": \"XETR\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Dusseldorf Exchange\",\r\n    \"Code\": \"DU\",\r\n    \"OperatingMIC\": \"XDUS\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Hanover Exchange\",\r\n    \"Code\": \"HA\",\r\n    \"OperatingMIC\": \"XHAN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Munich Exchange\",\r\n    \"Code\": \"MU\",\r\n    \"OperatingMIC\": \"XMUN\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Stuttgart Exchange\",\r\n    \"Code\": \"STU\",\r\n    \"OperatingMIC\": \"XSTU\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Frankfurt Exchange\",\r\n    \"Code\": \"F\",\r\n    \"OperatingMIC\": \"XFRA\",\r\n    \"Country\": \"Germany\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"DE\",\r\n    \"CountryISO3\": \"DEU\"\r\n  },\r\n  {\r\n    \"Name\": \"Luxembourg Stock Exchange\",\r\n    \"Code\": \"LU\",\r\n    \"OperatingMIC\": \"XLUX\",\r\n    \"Country\": \"Luxembourg\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"LU\",\r\n    \"CountryISO3\": \"LUX\"\r\n  },\r\n  {\r\n    \"Name\": \"Vienna Exchange\",\r\n    \"Code\": \"VI\",\r\n    \"OperatingMIC\": \"XWBO\",\r\n    \"Country\": \"Austria\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"AT\",\r\n    \"CountryISO3\": \"AUT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Paris\",\r\n    \"Code\": \"PA\",\r\n    \"OperatingMIC\": \"XPAR\",\r\n    \"Country\": \"France\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FR\",\r\n    \"CountryISO3\": \"FRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Brussels\",\r\n    \"Code\": \"BR\",\r\n    \"OperatingMIC\": \"XBRU\",\r\n    \"Country\": \"Belgium\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"BE\",\r\n    \"CountryISO3\": \"BEL\"\r\n  },\r\n  {\r\n    \"Name\": \"Madrid Exchange\",\r\n    \"Code\": \"MC\",\r\n    \"OperatingMIC\": \"BMEX\",\r\n    \"Country\": \"Spain\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"ES\",\r\n    \"CountryISO3\": \"ESP\"\r\n  },\r\n  {\r\n    \"Name\": \"SIX Swiss Exchange\",\r\n    \"Code\": \"SW\",\r\n    \"OperatingMIC\": \"XSWX\",\r\n    \"Country\": \"Switzerland\",\r\n    \"Currency\": \"CHF\",\r\n    \"CountryISO2\": \"CH\",\r\n    \"CountryISO3\": \"CHE\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Lisbon\",\r\n    \"Code\": \"LS\",\r\n    \"OperatingMIC\": \"XLIS\",\r\n    \"Country\": \"Portugal\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"PT\",\r\n    \"CountryISO3\": \"PRT\"\r\n  },\r\n  {\r\n    \"Name\": \"Euronext Amsterdam\",\r\n    \"Code\": \"AS\",\r\n    \"OperatingMIC\": \"XAMS\",\r\n    \"Country\": \"Netherlands\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"NL\",\r\n    \"CountryISO3\": \"NLD\"\r\n  },\r\n  {\r\n    \"Name\": \"Iceland Exchange\",\r\n    \"Code\": \"IC\",\r\n    \"OperatingMIC\": \"XICE\",\r\n    \"Country\": \"Iceland\",\r\n    \"Currency\": \"ISK\",\r\n    \"CountryISO2\": \"IS\",\r\n    \"CountryISO3\": \"ISL\"\r\n  },\r\n  {\r\n    \"Name\": \"Irish Exchange\",\r\n    \"Code\": \"IR\",\r\n    \"OperatingMIC\": \"XDUB\",\r\n    \"Country\": \"Ireland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"IE\",\r\n    \"CountryISO3\": \"IRL\"\r\n  },\r\n  {\r\n    \"Name\": \"Helsinki Exchange\",\r\n    \"Code\": \"HE\",\r\n    \"OperatingMIC\": \"XHEL\",\r\n    \"Country\": \"Finland\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"FI\",\r\n    \"CountryISO3\": \"FIN\"\r\n  },\r\n  {\r\n    \"Name\": \"Oslo Stock Exchange\",\r\n    \"Code\": \"OL\",\r\n    \"OperatingMIC\": \"XOSL\",\r\n    \"Country\": \"Norway\",\r\n    \"Currency\": \"NOK\",\r\n    \"CountryISO2\": \"NO\",\r\n    \"CountryISO3\": \"NOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Copenhagen Exchange\",\r\n    \"Code\": \"CO\",\r\n    \"OperatingMIC\": \"XCSE\",\r\n    \"Country\": \"Denmark\",\r\n    \"Currency\": \"DKK\",\r\n    \"CountryISO2\": \"DK\",\r\n    \"CountryISO3\": \"DNK\"\r\n  },\r\n  {\r\n    \"Name\": \"Stockholm Exchange\",\r\n    \"Code\": \"ST\",\r\n    \"OperatingMIC\": \"XSTO\",\r\n    \"Country\": \"Sweden\",\r\n    \"Currency\": \"SEK\",\r\n    \"CountryISO2\": \"SE\",\r\n    \"CountryISO3\": \"SWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Victoria Falls Stock Exchange\",\r\n    \"Code\": \"VFEX\",\r\n    \"OperatingMIC\": \"VFEX\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Zimbabwe Stock Exchange\",\r\n    \"Code\": \"XZIM\",\r\n    \"OperatingMIC\": \"XZIM\",\r\n    \"Country\": \"Zimbabwe \",\r\n    \"Currency\": \"ZWL\",\r\n    \"CountryISO2\": \"ZW\",\r\n    \"CountryISO3\": \"ZWE\"\r\n  },\r\n  {\r\n    \"Name\": \"Lusaka Stock Exchange\",\r\n    \"Code\": \"LUSE\",\r\n    \"OperatingMIC\": \"XLUS\",\r\n    \"Country\": \"Zambia \",\r\n    \"Currency\": \"ZMW\",\r\n    \"CountryISO2\": \"ZM\",\r\n    \"CountryISO3\": \"ZMB\"\r\n  },\r\n  {\r\n    \"Name\": \"Uganda Securities Exchange\",\r\n    \"Code\": \"USE\",\r\n    \"OperatingMIC\": \"XUGA\",\r\n    \"Country\": \"Uganda\",\r\n    \"Currency\": \"UGX\",\r\n    \"CountryISO2\": \"UG\",\r\n    \"CountryISO3\": \"UGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Dar es Salaam Stock Exchange\",\r\n    \"Code\": \"DSE\",\r\n    \"OperatingMIC\": \"XDAR\",\r\n    \"Country\": \"Tanzania\",\r\n    \"Currency\": \"TZS\",\r\n    \"CountryISO2\": \"TZ\",\r\n    \"CountryISO3\": \"TZA\"\r\n  },\r\n  {\r\n    \"Name\": \"Prague Stock Exchange \",\r\n    \"Code\": \"PR\",\r\n    \"OperatingMIC\": \"XPRA\",\r\n    \"Country\": \"Czech Republic\",\r\n    \"Currency\": \"CZK\",\r\n    \"CountryISO2\": \"CZ\",\r\n    \"CountryISO3\": \"CZE\"\r\n  },\r\n  {\r\n    \"Name\": \"Rwanda Stock Exchange\",\r\n    \"Code\": \"RSE\",\r\n    \"OperatingMIC\": \"RSEX\",\r\n    \"Country\": \"Rwanda\",\r\n    \"Currency\": \"RWF \",\r\n    \"CountryISO2\": \"RW\",\r\n    \"CountryISO3\": \"RWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Botswana Stock Exchange \",\r\n    \"Code\": \"XBOT\",\r\n    \"OperatingMIC\": \"XBOT\",\r\n    \"Country\": \"Botswana\",\r\n    \"Currency\": \"BWP\",\r\n    \"CountryISO2\": \"BW\",\r\n    \"CountryISO3\": \"BWA\"\r\n  },\r\n  {\r\n    \"Name\": \"Egyptian Exchange\",\r\n    \"Code\": \"EGX\",\r\n    \"OperatingMIC\": \"NILX\",\r\n    \"Country\": \"Egypt\",\r\n    \"Currency\": \"EGP\",\r\n    \"CountryISO2\": \"EG\",\r\n    \"CountryISO3\": \"EGY\"\r\n  },\r\n  {\r\n    \"Name\": \"Nigerian Stock Exchange\",\r\n    \"Code\": \"XNSA\",\r\n    \"OperatingMIC\": \"XNSA\",\r\n    \"Country\": \"Nigeria\",\r\n    \"Currency\": \"NGN\",\r\n    \"CountryISO2\": \"NG\",\r\n    \"CountryISO3\": \"NGA\"\r\n  },\r\n  {\r\n    \"Name\": \"Ghana Stock Exchange\",\r\n    \"Code\": \"GSE\",\r\n    \"OperatingMIC\": \"XGHA\",\r\n    \"Country\": \"Ghana\",\r\n    \"Currency\": \"GHS\",\r\n    \"CountryISO2\": \"GH\",\r\n    \"CountryISO3\": \"GHA\"\r\n  },\r\n  {\r\n    \"Name\": \"Malawi Stock Exchange\",\r\n    \"Code\": \"MSE\",\r\n    \"OperatingMIC\": \"XMSW\",\r\n    \"Country\": \"Malawi\",\r\n    \"Currency\": \"MWK\",\r\n    \"CountryISO2\": \"MW\",\r\n    \"CountryISO3\": \"MWI\"\r\n  },\r\n  {\r\n    \"Name\": \"Regional Securities Exchange\",\r\n    \"Code\": \"BRVM\",\r\n    \"OperatingMIC\": \"XBRV\",\r\n    \"Country\": \"Ivory Coast\",\r\n    \"Currency\": \"XOF\",\r\n    \"CountryISO2\": \"CI\",\r\n    \"CountryISO3\": \"CIV\"\r\n  },\r\n  {\r\n    \"Name\": \"Nairobi Securities Exchange\",\r\n    \"Code\": \"XNAI\",\r\n    \"OperatingMIC\": \"XNAI\",\r\n    \"Country\": \"Kenya\",\r\n    \"Currency\": \"KES\",\r\n    \"CountryISO2\": \"KE\",\r\n    \"CountryISO3\": \"KEN\"\r\n  },\r\n  {\r\n    \"Name\": \"Casablanca Stock Exchange\",\r\n    \"Code\": \"BC\",\r\n    \"OperatingMIC\": \"XCAS\",\r\n    \"Country\": \"Morocco\",\r\n    \"Currency\": \"MAD\",\r\n    \"CountryISO2\": \"MA\",\r\n    \"CountryISO3\": \"MAR\"\r\n  },\r\n  {\r\n    \"Name\": \"Stock Exchange of Mauritius\",\r\n    \"Code\": \"SEM\",\r\n    \"OperatingMIC\": \"XMAU\",\r\n    \"Country\": \"Mauritius\",\r\n    \"Currency\": \"MUR\",\r\n    \"CountryISO2\": \"MU\",\r\n    \"CountryISO3\": \"MUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Tel Aviv Stock Exchange\",\r\n    \"Code\": \"TA\",\r\n    \"OperatingMIC\": \"XTAE\",\r\n    \"Country\": \"Israel\",\r\n    \"Currency\": \"ILS\",\r\n    \"CountryISO2\": \"IL\",\r\n    \"CountryISO3\": \"ISR\"\r\n  },\r\n  {\r\n    \"Name\": \"Korea Stock Exchange\",\r\n    \"Code\": \"KO\",\r\n    \"OperatingMIC\": \"XKRX\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"KOSDAQ\",\r\n    \"Code\": \"KQ\",\r\n    \"OperatingMIC\": \"XKOS\",\r\n    \"Country\": \"Korea\",\r\n    \"Currency\": \"KRW\",\r\n    \"CountryISO2\": \"KR\",\r\n    \"CountryISO3\": \"KOR\"\r\n  },\r\n  {\r\n    \"Name\": \"Budapest Stock Exchange\",\r\n    \"Code\": \"BUD\",\r\n    \"OperatingMIC\": \"XBUD\",\r\n    \"Country\": \"Hungary\",\r\n    \"Currency\": \"HUF\",\r\n    \"CountryISO2\": \"HU\",\r\n    \"CountryISO3\": \"HUN\"\r\n  },\r\n  {\r\n    \"Name\": \"Warsaw Stock Exchange\",\r\n    \"Code\": \"WAR\",\r\n    \"OperatingMIC\": \"XWAR\",\r\n    \"Country\": \"Poland\",\r\n    \"Currency\": \"PLN\",\r\n    \"CountryISO2\": \"PL\",\r\n    \"CountryISO3\": \"POL\"\r\n  },\r\n  {\r\n    \"Name\": \"Philippine Stock Exchange\",\r\n    \"Code\": \"PSE\",\r\n    \"OperatingMIC\": \"XPHS\",\r\n    \"Country\": \"Philippines\",\r\n    \"Currency\": \"PHP\",\r\n    \"CountryISO2\": \"PH\",\r\n    \"CountryISO3\": \"PHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Karachi Stock Exchange\",\r\n    \"Code\": \"KAR\",\r\n    \"OperatingMIC\": \"XKAR\",\r\n    \"Country\": \"Pakistan\",\r\n    \"Currency\": \"PKR\",\r\n    \"CountryISO2\": \"PK\",\r\n    \"CountryISO3\": \"PAK\"\r\n  },\r\n  {\r\n    \"Name\": \"Australian Securities Exchange\",\r\n    \"Code\": \"AU\",\r\n    \"OperatingMIC\": \"XASX\",\r\n    \"Country\": \"Australia\",\r\n    \"Currency\": \"AUD\",\r\n    \"CountryISO2\": \"AU\",\r\n    \"CountryISO3\": \"AUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Johannesburg Exchange\",\r\n    \"Code\": \"JSE\",\r\n    \"OperatingMIC\": \"XJSE\",\r\n    \"Country\": \"South Africa\",\r\n    \"Currency\": \"ZAR\",\r\n    \"CountryISO2\": \"ZA\",\r\n    \"CountryISO3\": \"ZAF\"\r\n  },\r\n  {\r\n    \"Name\": \"Chilean Stock Exchange\",\r\n    \"Code\": \"SN\",\r\n    \"OperatingMIC\": \"XSGO\",\r\n    \"Country\": \"Chile\",\r\n    \"Currency\": \"CLP\",\r\n    \"CountryISO2\": \"CL\",\r\n    \"CountryISO3\": \"CHL\"\r\n  },\r\n  {\r\n    \"Name\": \"Jakarta Exchange\",\r\n    \"Code\": \"JK\",\r\n    \"OperatingMIC\": \"XIDX\",\r\n    \"Country\": \"Indonesia\",\r\n    \"Currency\": \"IDR\",\r\n    \"CountryISO2\": \"ID\",\r\n    \"CountryISO3\": \"IDN\"\r\n  },\r\n  {\r\n    \"Name\": \"Thailand Exchange\",\r\n    \"Code\": \"BK\",\r\n    \"OperatingMIC\": \"XBKK\",\r\n    \"Country\": \"Thailand\",\r\n    \"Currency\": \"THB\",\r\n    \"CountryISO2\": \"TH\",\r\n    \"CountryISO3\": \"THA\"\r\n  },\r\n  {\r\n    \"Name\": \"Shenzhen Stock Exchange\",\r\n    \"Code\": \"SHE\",\r\n    \"OperatingMIC\": \"XSHE\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Athens Exchange\",\r\n    \"Code\": \"AT\",\r\n    \"OperatingMIC\": \"ASEX\",\r\n    \"Country\": \"Greece\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"GR\",\r\n    \"CountryISO3\": \"GRC\"\r\n  },\r\n  {\r\n    \"Name\": \"National Stock Exchange of India\",\r\n    \"Code\": \"NSE\",\r\n    \"OperatingMIC\": \"XNSE\",\r\n    \"Country\": \"India\",\r\n    \"Currency\": \"INR\",\r\n    \"CountryISO2\": \"IN\",\r\n    \"CountryISO3\": \"IND\"\r\n  },\r\n  {\r\n    \"Name\": \"Shanghai Stock Exchange\",\r\n    \"Code\": \"SHG\",\r\n    \"OperatingMIC\": \"XSHG\",\r\n    \"Country\": \"China\",\r\n    \"Currency\": \"CNY\",\r\n    \"CountryISO2\": \"CN\",\r\n    \"CountryISO3\": \"CHN\"\r\n  },\r\n  {\r\n    \"Name\": \"Colombo Stock Exchange\",\r\n    \"Code\": \"CM\",\r\n    \"OperatingMIC\": \"XCOL\",\r\n    \"Country\": \"Sri Lanka\",\r\n    \"Currency\": \"LKR\",\r\n    \"CountryISO2\": \"LK\",\r\n    \"CountryISO3\": \"LKA\"\r\n  },\r\n  {\r\n    \"Name\": \"Vietnam Stocks\",\r\n    \"Code\": \"VN\",\r\n    \"OperatingMIC\": \"HSTC\",\r\n    \"Country\": \"Vietnam\",\r\n    \"Currency\": \"VND\",\r\n    \"CountryISO2\": \"VN\",\r\n    \"CountryISO3\": \"VNM\"\r\n  },\r\n  {\r\n    \"Name\": \"Kuala Lumpur Exchange\",\r\n    \"Code\": \"KLSE\",\r\n    \"OperatingMIC\": \"XKLS\",\r\n    \"Country\": \"Malaysia\",\r\n    \"Currency\": \"MYR\",\r\n    \"CountryISO2\": \"MY\",\r\n    \"CountryISO3\": \"MYS\"\r\n  },\r\n  {\r\n    \"Name\": \"Bucharest Stock Exchange\",\r\n    \"Code\": \"RO\",\r\n    \"OperatingMIC\": \"XBSE\",\r\n    \"Country\": \"Romania\",\r\n    \"Currency\": \"RON\",\r\n    \"CountryISO2\": \"RO\",\r\n    \"CountryISO3\": \"ROU\"\r\n  },\r\n  {\r\n    \"Name\": \"Buenos Aires Exchange\",\r\n    \"Code\": \"BA\",\r\n    \"OperatingMIC\": \"XBUE\",\r\n    \"Country\": \"Argentina\",\r\n    \"Currency\": \"ARS\",\r\n    \"CountryISO2\": \"AR\",\r\n    \"CountryISO3\": \"ARG\"\r\n  },\r\n  {\r\n    \"Name\": \"Sao Paulo Exchange\",\r\n    \"Code\": \"SA\",\r\n    \"OperatingMIC\": \"BVMF\",\r\n    \"Country\": \"Brazil\",\r\n    \"Currency\": \"BRL\",\r\n    \"CountryISO2\": \"BR\",\r\n    \"CountryISO3\": \"BRA\"\r\n  },\r\n  {\r\n    \"Name\": \"Mexican Exchange\",\r\n    \"Code\": \"MX\",\r\n    \"OperatingMIC\": \"XMEX\",\r\n    \"Country\": \"Mexico\",\r\n    \"Currency\": \"MXN\",\r\n    \"CountryISO2\": \"MX\",\r\n    \"CountryISO3\": \"MEX\"\r\n  },\r\n  {\r\n    \"Name\": \"London IL\",\r\n    \"Code\": \"IL\",\r\n    \"OperatingMIC\": \"XLON\",\r\n    \"Country\": \"UK\",\r\n    \"Currency\": \"USD\",\r\n    \"CountryISO2\": \"GB\",\r\n    \"CountryISO3\": \"GBR\"\r\n  },\r\n  {\r\n    \"Name\": \"Zagreb Stock Exchange\",\r\n    \"Code\": \"ZSE\",\r\n    \"OperatingMIC\": \"XZAG\",\r\n    \"Country\": \"Croatia\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"HR\",\r\n    \"CountryISO3\": \"HRV\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan Stock Exchange\",\r\n    \"Code\": \"TW\",\r\n    \"OperatingMIC\": \"XTAI\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"MICEX Moscow Russia\",\r\n    \"Code\": \"MCX\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Russia\",\r\n    \"Currency\": \"RUB\",\r\n    \"CountryISO2\": \"RU\",\r\n    \"CountryISO3\": \"RUS\"\r\n  },\r\n  {\r\n    \"Name\": \"Taiwan OTC Exchange\",\r\n    \"Code\": \"TWO\",\r\n    \"OperatingMIC\": \"ROCO\",\r\n    \"Country\": \"Taiwan\",\r\n    \"Currency\": \"TWD\",\r\n    \"CountryISO2\": \"TW\",\r\n    \"CountryISO3\": \"TWN\"\r\n  },\r\n  {\r\n    \"Name\": \"Bolsa de Valores de Lima\",\r\n    \"Code\": \"LIM\",\r\n    \"OperatingMIC\": \"XLIM\",\r\n    \"Country\": \"Peru\",\r\n    \"Currency\": \"PEN\",\r\n    \"CountryISO2\": \"PE\",\r\n    \"CountryISO3\": \"PER\"\r\n  },\r\n  {\r\n    \"Name\": \"Money Market Virtual Exchange\",\r\n    \"Code\": \"MONEY\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Europe Fund Virtual Exchange\",\r\n    \"Code\": \"EUFUND\",\r\n    \"OperatingMIC\": null,\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"EUR\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"Istanbul Stock Exchange\",\r\n    \"Code\": \"IS\",\r\n    \"OperatingMIC\": \"XIST\",\r\n    \"Country\": \"Turkey\",\r\n    \"Currency\": \"TRY\",\r\n    \"CountryISO2\": \"TR\",\r\n    \"CountryISO3\": \"TUR\"\r\n  },\r\n  {\r\n    \"Name\": \"Cryptocurrencies\",\r\n    \"Code\": \"CC\",\r\n    \"OperatingMIC\": \"CRYP\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  },\r\n  {\r\n    \"Name\": \"FOREX\",\r\n    \"Code\": \"FOREX\",\r\n    \"OperatingMIC\": \"CDSL\",\r\n    \"Country\": \"Unknown\",\r\n    \"Currency\": \"Unknown\",\r\n    \"CountryISO2\": \"\",\r\n    \"CountryISO3\": \"\"\r\n  }\r\n]\r\n\r\n","import { exchangeListJson } from \"./exchange_list.js\";\nexport let selectEx = document.getElementById('select1');\nexport let select1Options = [{ 'placeholder': true, 'text': 'Select the stock exchange' }]\nexport let select2Options = []\n\nfor (let i = 0; i < exchangeListJson.length; i++){\n  select1Options.push({ text: `${exchangeListJson[i].Name}` })\n}\n\nlet select1=new SlimSelect({\n  select: '#select1',\n  data: select1Options\n})\n\nexport let select2=new SlimSelect({\n  select: '#select2',\n  data: select2Options\n})\n\n\n\n      \n","import { lineChart, dataGraph, updateChart, removeData, createGraph } from \"./js/graph.js\";\nimport { historicalStockData, dailyStockData, exchangeList, interdayData } from \"./js/import_data.js\";\nimport { particularData } from \"./js/particular_data.js\";\nimport { exchangeListJson } from \"./js/exchange_list.js\";\nimport { selectEx, select2 } from \"./js/select.js\";\nimport './js/select.js'\n\nconst token = '65fd2d716aebf2.80647901';\nconst exchange = 'US';\nconst ticker = 'AAPL';\nconst index = ticker.concat('.', exchange)\nlet chartData\nlet newDataChart\n\n// pobranie danych o giełdach\n/*exchangeList(token)\n .then(exchangeData => console.log(exchangeData))\n .catch(error => console.error(error));\n*/\n\n //pobieranie danych historycznych z interwałem\n//interdayData(index, token)\n\n\ncreateGraph()\n\nlet button = document.querySelector('.button')\nbutton.addEventListener('click', function (event) {\n  event.preventDefault()\n  console.log(chartData)\n})\n  \nconst timerId = setInterval(() => { \n  dailyStockData(index, token)\n  .then(dailyData => {\n    dataGraph(dailyData, chartData)\n    particularData('currentData', ticker, dailyData.change_p)\n  })\n  \n  newDataChart.options.animation = false;\n  newDataChart.update()\n\n}, 60000);\n\nselectEx.addEventListener('change', function (event) {\n  event.preventDefault()\n  let selectedEx=selectEx.options[selectEx.selectedIndex].value\n  for (let i = 0; i < exchangeListJson.length;i++)\n    if (exchangeListJson[i].Name === selectedEx) {\n      let select2Options = []\n      select2.setData(select2Options)\n      let exchangeCode = exchangeListJson[i].Code\n      fetch(`https://eodhd.com/api/exchange-symbol-list/${exchangeCode}?api_token=65fd2d716aebf2.80647901&fmt=json`)\n        .then(data => data.json())\n        .then(data => {\n          for (let i = 0; i < data.length; i++) {\n            select2Options.push({ text: `${ data[i].Name }`})\n          }\n          return(select2Options)\n        })\n        .then(select2Options=>select2.setData(select2Options))\n  }\n})\n\n\n\n\n"," //pobieranie danych historycznych\nexport function historicalStockData(stockIndex,apiKey) {\n  // url dla danych historycznych\n  const url = `https://eodhd.com/api/eod/${stockIndex}?period=d&api_token=${apiKey}&fmt=json`;\n\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let historicalData = data;\n      return historicalData\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie danych codziennych\nexport function dailyStockData(stockIndex,apiKey) {\n  // url dla danych codziennych\n  const url = `https://eodhd.com/api/real-time/${stockIndex}?api_token=${apiKey}&fmt=json`;\n  // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let dailyData = data;\n      return dailyData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n//pobieranie listy obsługiwanych giełd\nexport function exchangeList(apiKey) {\n  const url = `https://eodhd.com/api/exchanges-list/?api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let exchangeData = data;\n      return exchangeData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n}\n\n// pobieranie danych historycznych z interwałem 5m\nexport function interdayData(stockIndex, apiKey) {\n  const url = `https://eodhd.com/api/intraday/${stockIndex}?interval=5m&api_token=${apiKey}&fmt=json`\n   // Wywołujemy fetch na podanym URL\n  return fetch(url)\n    .then(response => {\n      // Sprawdzamy, czy odpowiedź jest poprawna\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Parsujemy odpowiedź jako JSON i zwracamy ją\n      return response.json();\n    })\n    .then(data => {\n      let interdayData = data;\n      return interdayData;\n    })\n    .catch(error => {\n      // W przypadku błędu, np. problemu z siecią, wyświetlamy komunikat o błędzie\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  \n  \n}\n\n\n\n"],"names":["$b47b44e404b43a67$export$dd1e1af624a72a5f","dailyData","historicalData","currentDateUnix","timestamp","currentDate","Date","year","getFullYear","month","getMonth","slice","day","getDate","lastAxisDate","xAxis","length","push","yAxis","close","pop","console","log","$963c3c230e2426a4$export$8066b993bc416f6d","id","stockIndex","currentlyData","container","document","getElementById","innerHTML","map","insertAdjacentHTML","$c9c354799861a6b7$export$402eb89ff95bd3f4","Name","Code","OperatingMIC","Country","Currency","CountryISO2","CountryISO3","$55192131fc4a8194$export$6194e7371c12e1d0","$55192131fc4a8194$export$6b8651e7c280689c","placeholder","text","i","SlimSelect","select","data","$55192131fc4a8194$export$2ef10c4256d170a2","$1f0dc3b9307be026$var$index","concat","historicalStockData","index","token","then","chartData","date","dailyStockData","particularData","ticker","change_p","newDataChart","ctx","Chart","type","labels","datasets","label","borderWidth","pointRadius","options","$b47b44e404b43a67$export$88642ec15bb62ae0","querySelector","addEventListener","event","preventDefault","$1f0dc3b9307be026$var$chartData","setInterval","apiKey","fetch","response","ok","Error","json","catch","error","$1f0dc3b9307be026$var$newDataChart","animation","update","selectedEx","selectedIndex","value","i1","select2Options1","setData","exchangeCode","select2Options"],"version":3,"file":"index.63b3b484.js.map"}