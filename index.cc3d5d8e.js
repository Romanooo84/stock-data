function e(e,n,t,r){return fetch(`https://eodhd.com/api/eod/${e}?from=${t}&to=${r}&period=d&api_token=${n}&fmt=json`).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>e)).catch((e=>{console.error("There was a problem with your fetch operation:",e)}))}function n(e,n){return fetch(`https://eodhd.com/api/real-time/${e}?api_token=${n}&fmt=json`).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{let n=new Date(1e3*e.timestamp);n=a(n),close=e.close;let t=e.change_p;return{realTimeDay:n,close:close,change_p:t}})).catch((e=>{console.error("There was a problem with your fetch operation:",e)}))}function t(e,n){let t="";for(let n=0;n<e.length;n++)0===n?t=e[n]+"?s=":t+=1===n?`${e[n]}`:`,${e[n]}`;return fetch(`https://eodhd.com/api/real-time/${t}&api_token=${n}&fmt=json`).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>e)).catch((e=>{console.error("There was a problem with your fetch operation:",e)}))}function r(e,n){return fetch(`https://eodhd.com/api/news?${e}S&offset=0&limit=10&api_token=${n}&fmt=json`).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>e)).catch((e=>{console.error("There was a problem with your fetch operation:",e)}))}function a(e){const n=e.getFullYear(),t=("0"+(e.getMonth()+1)).slice(-2),r=("0"+e.getDate()).slice(-2);return e=`${n}-${t}-${r}`}function o(e,n,t,r){let a=document.getElementById(`${e}`);a.innerHTML="";let o=`<div>\n    <p>${n} <span>${t.change_p}%</span></p>\n        <div class='ticker-data'>\n            <div class='historical-data'>\n                <p class='historical-paragraph-date'>${r[0].date}</p>\n                <p class='historical-paragraph'>Open: ${r[0].open}</p>\n                <p class='historical-paragraph'>Close: ${r[0].close}</p>\n                <p class='historical-paragraph'>High: ${r[0].high}</p>\n                <p class='historical-paragraph'>Low: ${r[0].low}</p>\n                <p class='historical-paragraph'>Volume: ${r[0].volume}</p>\n            </div>\n            <div class='historical-data'>\n                <p class='historical-paragraph-date'> ${r[r.length-1].date}</p>\n                <p class='historical-paragraph'>Open: ${r[r.length-1].open}</p>\n                <p class='historical-paragraph'>Close: ${r[r.length-1].close}</p>\n                <p class='historical-paragraph'>High: ${r[r.length-1].high}</p>\n                <p class='historical-paragraph'>Low: ${r[r.length-1].low}</p>\n                <p class='historical-paragraph'>Volume: ${r[r.length-1].volume}</p>\n            </div>\n        </div> \n    </div>`;a.insertAdjacentHTML("beforeEnd",o)}let C;function c(e,n,t){const r=document.getElementById("myChart");return C=new Chart(r,{type:"line",data:{labels:e,datasets:[{label:t,data:n,borderWidth:3,pointRadius:0}]},options:{responsive:!0,maintainAspectRatio:!1}}),C}function u(e,n){let t={yAxis:[],xAxis:[]};for(let n=0;n<e.length;n++)"NA"!==e[n].close&&t.yAxis.push(e[n].close),t.xAxis.push(e[n].date);return e[e.length-1].date!=n.realTimeDay?("NA"!==n.close&&t.yAxis.push(n.close),t.xAxis.push(n.realTimeDay)):console.log("brak aktualnych danych"),t}function i(){C.data.datasets[1].borderWidth=0,C.data.datasets[2].borderWidth=0,C.data.datasets[3].borderWidth=0,C.update()}const s=[{Name:"USA Stocks",Code:"US",OperatingMIC:"XNAS, XNYS",Country:"USA",Currency:"USD",CountryISO2:"US",CountryISO3:"USA"},{Name:"London Exchange",Code:"LSE",OperatingMIC:"XLON",Country:"UK",Currency:"GBP",CountryISO2:"GB",CountryISO3:"GBR"},{Name:"Toronto Exchange",Code:"TO",OperatingMIC:"XTSE",Country:"Canada",Currency:"CAD",CountryISO2:"CA",CountryISO3:"CAN"},{Name:"NEO Exchange",Code:"NEO",OperatingMIC:"NEOE",Country:"Canada",Currency:"CAD",CountryISO2:"CA",CountryISO3:"CAN"},{Name:"TSX Venture Exchange",Code:"V",OperatingMIC:"XTSX",Country:"Canada",Currency:"CAD",CountryISO2:"CA",CountryISO3:"CAN"},{Name:"Berlin Exchange",Code:"BE",OperatingMIC:"XBER",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Hamburg Exchange",Code:"HM",OperatingMIC:"XHAM",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"XETRA Stock Exchange",Code:"XETRA",OperatingMIC:"XETR",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Dusseldorf Exchange",Code:"DU",OperatingMIC:"XDUS",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Hanover Exchange",Code:"HA",OperatingMIC:"XHAN",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Munich Exchange",Code:"MU",OperatingMIC:"XMUN",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Stuttgart Exchange",Code:"STU",OperatingMIC:"XSTU",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Frankfurt Exchange",Code:"F",OperatingMIC:"XFRA",Country:"Germany",Currency:"EUR",CountryISO2:"DE",CountryISO3:"DEU"},{Name:"Luxembourg Stock Exchange",Code:"LU",OperatingMIC:"XLUX",Country:"Luxembourg",Currency:"EUR",CountryISO2:"LU",CountryISO3:"LUX"},{Name:"Vienna Exchange",Code:"VI",OperatingMIC:"XWBO",Country:"Austria",Currency:"EUR",CountryISO2:"AT",CountryISO3:"AUT"},{Name:"Euronext Paris",Code:"PA",OperatingMIC:"XPAR",Country:"France",Currency:"EUR",CountryISO2:"FR",CountryISO3:"FRA"},{Name:"Euronext Brussels",Code:"BR",OperatingMIC:"XBRU",Country:"Belgium",Currency:"EUR",CountryISO2:"BE",CountryISO3:"BEL"},{Name:"Madrid Exchange",Code:"MC",OperatingMIC:"BMEX",Country:"Spain",Currency:"EUR",CountryISO2:"ES",CountryISO3:"ESP"},{Name:"SIX Swiss Exchange",Code:"SW",OperatingMIC:"XSWX",Country:"Switzerland",Currency:"CHF",CountryISO2:"CH",CountryISO3:"CHE"},{Name:"Euronext Lisbon",Code:"LS",OperatingMIC:"XLIS",Country:"Portugal",Currency:"EUR",CountryISO2:"PT",CountryISO3:"PRT"},{Name:"Euronext Amsterdam",Code:"AS",OperatingMIC:"XAMS",Country:"Netherlands",Currency:"EUR",CountryISO2:"NL",CountryISO3:"NLD"},{Name:"Iceland Exchange",Code:"IC",OperatingMIC:"XICE",Country:"Iceland",Currency:"ISK",CountryISO2:"IS",CountryISO3:"ISL"},{Name:"Irish Exchange",Code:"IR",OperatingMIC:"XDUB",Country:"Ireland",Currency:"EUR",CountryISO2:"IE",CountryISO3:"IRL"},{Name:"Helsinki Exchange",Code:"HE",OperatingMIC:"XHEL",Country:"Finland",Currency:"EUR",CountryISO2:"FI",CountryISO3:"FIN"},{Name:"Oslo Stock Exchange",Code:"OL",OperatingMIC:"XOSL",Country:"Norway",Currency:"NOK",CountryISO2:"NO",CountryISO3:"NOR"},{Name:"Copenhagen Exchange",Code:"CO",OperatingMIC:"XCSE",Country:"Denmark",Currency:"DKK",CountryISO2:"DK",CountryISO3:"DNK"},{Name:"Stockholm Exchange",Code:"ST",OperatingMIC:"XSTO",Country:"Sweden",Currency:"SEK",CountryISO2:"SE",CountryISO3:"SWE"},{Name:"Victoria Falls Stock Exchange",Code:"VFEX",OperatingMIC:"VFEX",Country:"Zimbabwe ",Currency:"ZWL",CountryISO2:"ZW",CountryISO3:"ZWE"},{Name:"Zimbabwe Stock Exchange",Code:"XZIM",OperatingMIC:"XZIM",Country:"Zimbabwe ",Currency:"ZWL",CountryISO2:"ZW",CountryISO3:"ZWE"},{Name:"Lusaka Stock Exchange",Code:"LUSE",OperatingMIC:"XLUS",Country:"Zambia ",Currency:"ZMW",CountryISO2:"ZM",CountryISO3:"ZMB"},{Name:"Uganda Securities Exchange",Code:"USE",OperatingMIC:"XUGA",Country:"Uganda",Currency:"UGX",CountryISO2:"UG",CountryISO3:"UGA"},{Name:"Dar es Salaam Stock Exchange",Code:"DSE",OperatingMIC:"XDAR",Country:"Tanzania",Currency:"TZS",CountryISO2:"TZ",CountryISO3:"TZA"},{Name:"Prague Stock Exchange ",Code:"PR",OperatingMIC:"XPRA",Country:"Czech Republic",Currency:"CZK",CountryISO2:"CZ",CountryISO3:"CZE"},{Name:"Rwanda Stock Exchange",Code:"RSE",OperatingMIC:"RSEX",Country:"Rwanda",Currency:"RWF ",CountryISO2:"RW",CountryISO3:"RWA"},{Name:"Botswana Stock Exchange ",Code:"XBOT",OperatingMIC:"XBOT",Country:"Botswana",Currency:"BWP",CountryISO2:"BW",CountryISO3:"BWA"},{Name:"Egyptian Exchange",Code:"EGX",OperatingMIC:"NILX",Country:"Egypt",Currency:"EGP",CountryISO2:"EG",CountryISO3:"EGY"},{Name:"Nigerian Stock Exchange",Code:"XNSA",OperatingMIC:"XNSA",Country:"Nigeria",Currency:"NGN",CountryISO2:"NG",CountryISO3:"NGA"},{Name:"Ghana Stock Exchange",Code:"GSE",OperatingMIC:"XGHA",Country:"Ghana",Currency:"GHS",CountryISO2:"GH",CountryISO3:"GHA"},{Name:"Malawi Stock Exchange",Code:"MSE",OperatingMIC:"XMSW",Country:"Malawi",Currency:"MWK",CountryISO2:"MW",CountryISO3:"MWI"},{Name:"Regional Securities Exchange",Code:"BRVM",OperatingMIC:"XBRV",Country:"Ivory Coast",Currency:"XOF",CountryISO2:"CI",CountryISO3:"CIV"},{Name:"Nairobi Securities Exchange",Code:"XNAI",OperatingMIC:"XNAI",Country:"Kenya",Currency:"KES",CountryISO2:"KE",CountryISO3:"KEN"},{Name:"Casablanca Stock Exchange",Code:"BC",OperatingMIC:"XCAS",Country:"Morocco",Currency:"MAD",CountryISO2:"MA",CountryISO3:"MAR"},{Name:"Stock Exchange of Mauritius",Code:"SEM",OperatingMIC:"XMAU",Country:"Mauritius",Currency:"MUR",CountryISO2:"MU",CountryISO3:"MUS"},{Name:"Tel Aviv Stock Exchange",Code:"TA",OperatingMIC:"XTAE",Country:"Israel",Currency:"ILS",CountryISO2:"IL",CountryISO3:"ISR"},{Name:"Korea Stock Exchange",Code:"KO",OperatingMIC:"XKRX",Country:"Korea",Currency:"KRW",CountryISO2:"KR",CountryISO3:"KOR"},{Name:"KOSDAQ",Code:"KQ",OperatingMIC:"XKOS",Country:"Korea",Currency:"KRW",CountryISO2:"KR",CountryISO3:"KOR"},{Name:"Budapest Stock Exchange",Code:"BUD",OperatingMIC:"XBUD",Country:"Hungary",Currency:"HUF",CountryISO2:"HU",CountryISO3:"HUN"},{Name:"Warsaw Stock Exchange",Code:"WAR",OperatingMIC:"XWAR",Country:"Poland",Currency:"PLN",CountryISO2:"PL",CountryISO3:"POL"},{Name:"Philippine Stock Exchange",Code:"PSE",OperatingMIC:"XPHS",Country:"Philippines",Currency:"PHP",CountryISO2:"PH",CountryISO3:"PHL"},{Name:"Karachi Stock Exchange",Code:"KAR",OperatingMIC:"XKAR",Country:"Pakistan",Currency:"PKR",CountryISO2:"PK",CountryISO3:"PAK"},{Name:"Australian Securities Exchange",Code:"AU",OperatingMIC:"XASX",Country:"Australia",Currency:"AUD",CountryISO2:"AU",CountryISO3:"AUS"},{Name:"Johannesburg Exchange",Code:"JSE",OperatingMIC:"XJSE",Country:"South Africa",Currency:"ZAR",CountryISO2:"ZA",CountryISO3:"ZAF"},{Name:"Chilean Stock Exchange",Code:"SN",OperatingMIC:"XSGO",Country:"Chile",Currency:"CLP",CountryISO2:"CL",CountryISO3:"CHL"},{Name:"Jakarta Exchange",Code:"JK",OperatingMIC:"XIDX",Country:"Indonesia",Currency:"IDR",CountryISO2:"ID",CountryISO3:"IDN"},{Name:"Thailand Exchange",Code:"BK",OperatingMIC:"XBKK",Country:"Thailand",Currency:"THB",CountryISO2:"TH",CountryISO3:"THA"},{Name:"Shenzhen Stock Exchange",Code:"SHE",OperatingMIC:"XSHE",Country:"China",Currency:"CNY",CountryISO2:"CN",CountryISO3:"CHN"},{Name:"Athens Exchange",Code:"AT",OperatingMIC:"ASEX",Country:"Greece",Currency:"EUR",CountryISO2:"GR",CountryISO3:"GRC"},{Name:"National Stock Exchange of India",Code:"NSE",OperatingMIC:"XNSE",Country:"India",Currency:"INR",CountryISO2:"IN",CountryISO3:"IND"},{Name:"Shanghai Stock Exchange",Code:"SHG",OperatingMIC:"XSHG",Country:"China",Currency:"CNY",CountryISO2:"CN",CountryISO3:"CHN"},{Name:"Colombo Stock Exchange",Code:"CM",OperatingMIC:"XCOL",Country:"Sri Lanka",Currency:"LKR",CountryISO2:"LK",CountryISO3:"LKA"},{Name:"Vietnam Stocks",Code:"VN",OperatingMIC:"HSTC",Country:"Vietnam",Currency:"VND",CountryISO2:"VN",CountryISO3:"VNM"},{Name:"Kuala Lumpur Exchange",Code:"KLSE",OperatingMIC:"XKLS",Country:"Malaysia",Currency:"MYR",CountryISO2:"MY",CountryISO3:"MYS"},{Name:"Bucharest Stock Exchange",Code:"RO",OperatingMIC:"XBSE",Country:"Romania",Currency:"RON",CountryISO2:"RO",CountryISO3:"ROU"},{Name:"Buenos Aires Exchange",Code:"BA",OperatingMIC:"XBUE",Country:"Argentina",Currency:"ARS",CountryISO2:"AR",CountryISO3:"ARG"},{Name:"Sao Paulo Exchange",Code:"SA",OperatingMIC:"BVMF",Country:"Brazil",Currency:"BRL",CountryISO2:"BR",CountryISO3:"BRA"},{Name:"Mexican Exchange",Code:"MX",OperatingMIC:"XMEX",Country:"Mexico",Currency:"MXN",CountryISO2:"MX",CountryISO3:"MEX"},{Name:"London IL",Code:"IL",OperatingMIC:"XLON",Country:"UK",Currency:"USD",CountryISO2:"GB",CountryISO3:"GBR"},{Name:"Zagreb Stock Exchange",Code:"ZSE",OperatingMIC:"XZAG",Country:"Croatia",Currency:"EUR",CountryISO2:"HR",CountryISO3:"HRV"},{Name:"Taiwan Stock Exchange",Code:"TW",OperatingMIC:"XTAI",Country:"Taiwan",Currency:"TWD",CountryISO2:"TW",CountryISO3:"TWN"},{Name:"MICEX Moscow Russia",Code:"MCX",OperatingMIC:null,Country:"Russia",Currency:"RUB",CountryISO2:"RU",CountryISO3:"RUS"},{Name:"Taiwan OTC Exchange",Code:"TWO",OperatingMIC:"ROCO",Country:"Taiwan",Currency:"TWD",CountryISO2:"TW",CountryISO3:"TWN"},{Name:"Bolsa de Valores de Lima",Code:"LIM",OperatingMIC:"XLIM",Country:"Peru",Currency:"PEN",CountryISO2:"PE",CountryISO3:"PER"},{Name:"Money Market Virtual Exchange",Code:"MONEY",OperatingMIC:null,Country:"Unknown",Currency:"Unknown",CountryISO2:"",CountryISO3:""},{Name:"Europe Fund Virtual Exchange",Code:"EUFUND",OperatingMIC:null,Country:"Unknown",Currency:"EUR",CountryISO2:"",CountryISO3:""},{Name:"Istanbul Stock Exchange",Code:"IS",OperatingMIC:"XIST",Country:"Turkey",Currency:"TRY",CountryISO2:"TR",CountryISO3:"TUR"},{Name:"Cryptocurrencies",Code:"CC",OperatingMIC:"CRYP",Country:"Unknown",Currency:"Unknown",CountryISO2:"",CountryISO3:""},{Name:"FOREX",Code:"FOREX",OperatingMIC:"CDSL",Country:"Unknown",Currency:"Unknown",CountryISO2:"",CountryISO3:""},{Name:"Virtual Exchange Holding",Code:"INDX"}];let h,d,l=document.getElementById("select1"),y=document.getElementById("select2"),p=[{placeholder:!0,text:"Select the stock exchange",class:"custom-color"}];let g=[];var S,I;(S="US",I="65fd2d716aebf2.80647901",fetch(`https://eodhd.com/api/exchange-symbol-list/${S}?api_token=${I}&fmt=json`).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>e)).catch((e=>{console.error("There was a problem with your fetch operation:",e)}))).then((e=>h=e)).then((()=>{for(let e=0;e<h.length;e++)h[e].Exchange&&(g.includes(h[e].Exchange)||g.push(h[e].Exchange));for(let e=0;e<g.length;e++)p.push({text:`Usa Stock:  ${g[e]}`})})).then((()=>{for(let e=0;e<s.length;e++)"US"!=s[e].Code&&p.push({text:s[e].Name})})).then((()=>{d.setData(p)})),d=new SlimSelect({select:"#select1",data:p,options:[]});let O,E,m,M,N,v,x=new SlimSelect({select:"#select2",data:[{placeholder:!0,text:"First select the stock exchange",class:"custom-color"}]});function A(e){let n=[];for(let t=0;t<e.length;t++){let r=[t+1,e[t]];n.push(r)}const t=regression.linear(n),r=t.equation[0],a=t.equation[1];let o=`y=${r}x+${a}`,c=[];for(let n=0;n<e.length;n++)c.push(r*n+a);return C.data.datasets.push({label:"linear regression",data:c,borderWidth:1,pointRadius:0,borderColor:"rgba(265, 20, 135, 1)",backgroundColor:"rgba(255, 255, 255, 1)"}),C.update(),{regYAxis:c,functionPattern:o}}function f(e,n){const t=[];for(let r=0;r<n.length;r++)n[r]-e[r]>0&&t.push([r,n[r]]);const r=regression.linear(t),a=r.equation[0],o=r.equation[1];let c=[];for(let e=0;e<n.length;e++)c.push(a*e+o);C.data.datasets.push({label:"top line",data:c,borderWidth:1,pointRadius:0,borderColor:"rgba(20, 265, 150, 1)",backgroundColor:"rgba(255, 255, 255, 1)"}),C.update()}function R(e,n){const t=[];for(let r=0;r<n.length;r++)e[r]-n[r]>0&&t.push([r,n[r]]);const r=regression.linear(t),a=r.equation[0],o=r.equation[1];let c=[];for(let e=0;e<n.length;e++)c.push(a*e+o);C.data.datasets.push({label:"bottom line",data:c,borderWidth:1,pointRadius:0,borderColor:"rgba(200, 100, 20, 1)",backgroundColor:"rgba(255, 255, 255, 1)"}),C.update()}let b,X="WAR",w="ALE",U=w.concat(".",X),k=new Date,L=new Date(k.getTime()-2592e6);N=a(k),L=a(L);let $=["ALE.WAR","GSPC.INDX","AAPL.US","EURPLN.FOREX","USDPLN.FOREX"],D=document.querySelector(".short-data");const T=document.querySelector(".add-fav-button");let B=document.querySelector(".button");flatpickr("#datepicker",{dateFormat:"Y-m-d",maxDate:(new Date).fp_incr(0),onClose:function(e,n){selectedDate=n,console.log("sel"+L),null!=selectedDate&&(B.disabled=!1)}}),$.length>4&&(T.disabled=!0),t($,"65fd2d716aebf2.80647901").then((e=>{let n=e;D.innerHTML="";const t=n.map((e=>{let n="";return e.change_p>0?n="value-plus":e.change_p<0&&(n="value-minus"),`<div class='short-data-div'>\n                <button class = 'delete-button'  type="button" id="${e.code}" >\n                <svg id = '${e.code}' version="1.1" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 32 32" fill = '#ec7c7c'>\n                  <path name = '${e.code}' d="M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z"></path>\n                  <path name = '${e.code}' d="M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${e.code}'>\n                <p class='header-paragraph'>${e.code}</p>\n                <p class='header-paragraph'>Close: ${e.close}</p>\n                <p class='header-paragraph'>Change: <span class='${n}'>${e.change_p}%</span></p>\n              </div>          \n            </div>`})).join("");D.insertAdjacentHTML("beforeend",t),b=document.querySelectorAll(".delete-button")})).catch((e=>{console.error("Wystąpił błąd podczas pobierania danych:",e)})),setInterval((()=>{t($,"65fd2d716aebf2.80647901").then((e=>{let n=e,t="";n.forEach((e=>{t=e.change_p>0?"value-plus":"value-minus"})),D.innerHTML="";const r=n.map((e=>{let n="";return e.change_p>0?n="value-plus":e.change_p<0&&(n="value-minus"),`<div class='short-data-div'>\n                <button class = 'delete-button'  type="button" id="${e.code}" >\n                <svg id = '${e.code}' version="1.1" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 32 32" fill = '#ec7c7c'>\n                  <path name = '${e.code}' d="M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z"></path>\n                  <path name = '${e.code}' d="M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${e.code}'>\n                <p class='header-paragraph'>${e.code}</p>\n                <p class='header-paragraph'>Close: ${e.close}</p>\n                <p class='header-paragraph'>Change: <span class='${n}'>${e.change_p}%</span></p>\n              </div>          \n            </div>`})).join("");D.insertAdjacentHTML("beforeend",r)})).catch((e=>{console.error("Wystąpił błąd podczas pobierania danych:",e)}))}),2e3),D.addEventListener("click",(function(e){e.preventDefault();let n=e.target.parentNode.id;$=$.filter((e=>e!==n)),t($,"65fd2d716aebf2.80647901").then((e=>{const n=e.map((e=>{let n="";return e.change_p>0?n="value-plus":e.change_p<0&&(n="value-minus"),`<div class='short-data-div'>\n                  <button class = 'delete-button'  type="button" id="${e.code}" >\n                  <svg id = '${e.code}' version="1.1" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 32 32" fill = '#ec7c7c'>\n                    <path name = '${e.code}' d="M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z"></path>\n                    <path name = '${e.code}' d="M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z"></path>\n                  </svg>\n                </button>\n                <div class='single-data' name = '${e.code}'>\n                  <p class='header-paragraph'>${e.code}</p>\n                  <p class='header-paragraph'>Close: ${e.close}</p>\n                  <p class='header-paragraph'>Change: <span class='${n}'>${e.change_p}%</span></p>\n                </div>\n              </div>`})).join("");if(D.innerHTML="",D.insertAdjacentHTML("beforeend",n),b=document.querySelectorAll(".delete-button"),b.length<3)for(var t=0;t<b.length;t++)b[t].disabled=!0;$.length<5&&(T.disabled=!1)})).catch((e=>{console.error("Wystąpił błąd podczas pobierania danych:",e)}))})),e(U,"65fd2d716aebf2.80647901",L,N).then((e=>(E=e,n(U,"65fd2d716aebf2.80647901")))).then((e=>(O=e,console.log(O),o("currentData",U,O,E)))).then((()=>u(E,O))).then((e=>(M=e,c(M.xAxis,M.yAxis,w)))).then((e=>{const{regYAxis:n}=A(M.yAxis);f(n,M.yAxis),R(n,M.yAxis),m=e})).then((()=>r(U,"65fd2d716aebf2.80647901"))).then((e=>{let n=document.querySelector("#news");const t=e.map((e=>`<div class='newsDiv'><h2>${e.title}</h2><p>${e.date}</p><div class='div-afterp'><p>${e.content}</p></div></div>`)).join("");n.insertAdjacentHTML("beforeend",t)})),B.addEventListener("click",(function(t){t.preventDefault(),console.log(selectedDate),e(U,"65fd2d716aebf2.80647901",selectedDate,N).then((e=>(E=e,n(U,"65fd2d716aebf2.80647901")))).then((e=>(O=e,o("currentData",U,O,E)))).then((()=>u(E,O))).then((e=>(M=e,m.destroy(),c(M.xAxis,M.yAxis,w)))).then((e=>{const{regYAxis:n}=A(M.yAxis);f(n,M.yAxis),R(n,M.yAxis),m=e,"show regression lines"===H.textContent&&i()}))}));const H=document.querySelector(".regression-button");H.addEventListener("click",(function(e){e.preventDefault(),"hide regression lines"===H.textContent?(i(),H.textContent="show regression lines"):"show regression lines"===H.textContent&&(C.data.datasets[1].borderWidth=1,C.data.datasets[2].borderWidth=1,C.data.datasets[3].borderWidth=1,C.update(),H.textContent="hide regression lines")})),T.addEventListener("click",(()=>{$.push(U),t($,"65fd2d716aebf2.80647901").then((e=>{let n=e;D.innerHTML="";const t=n.map((e=>{let n="";return e.change_p>0?n="value-plus":e.change_p<0&&(n="value-minus"),`<div class='short-data-div'>\n                <button class = 'delete-button'  type="button" id="${e.code}" >\n                <svg id = '${e.code}' version="1.1" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 32 32" fill = '#ec7c7c'>\n                  <path name = '${e.code}' d="M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z"></path>\n                  <path name = '${e.code}' d="M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z"></path>\n                </svg>\n              </button>\n              <div class='single-data' name = '${e.code}'>\n                <p class='header-paragraph'>${e.code}</p>\n                <p class='header-paragraph'>Close: ${e.close}</p>\n                <p class='header-paragraph'>Change: <span class='${n}'>${e.change_p}%</span></p>\n              </div>\n             \n            </div>`})).join("");D.innerHTML="",D.insertAdjacentHTML("beforeend",t),$.length>4&&(T.disabled=!0)}))})),l.addEventListener("change",(function(e){e.preventDefault();let n=[],t=l.options[l.selectedIndex].value;if(t.includes("Usa Stock:")){if(t.includes("Usa Stock:")){for(let e=0;e<h.length;e++)t.includes(h[e].Exchange)&&n.push({text:`${h[e].Name}`});v=h,x.setData(n)}}else for(let e=0;e<s.length;e++)if(s[e].Name===t){let t=s[e].Code;fetch(`https://eodhd.com/api/exchange-symbol-list/${t}?api_token=65fd2d716aebf2.80647901&fmt=json`).then((e=>e.json())).then((e=>{v=e;for(let t=0;t<e.length;t++)n.push({text:`${e[t].Name}`});x.setData(n)}))}})),y.addEventListener("change",(e=>{if(e.preventDefault(),null!=y.options[y.selectedIndex]){let e=y.options[y.selectedIndex].value;for(let n=0;n<v.length;n++)e!=v[n].Name||(w=v[n].Code,X="USA"===v[n].Country&&"INDX"!==v[n].Exchange?"US":v[n].Exchange,U=w.concat(".",X))}}));
//# sourceMappingURL=index.cc3d5d8e.js.map
